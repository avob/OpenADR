{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport objectAssign from 'object-assign';\nimport initialState from './initialState'; // IMPORTANT: Note that with Redux, state should NEVER be changed.\n// State is considered immutable. Instead,\n// create a copy of the state passed and set new values on the copy.\n// Note that I'm using Object.assign to create a copy of current state\n// and update values on the copy.\n\nexport default function venDetailReportReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.ven_detail_report;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newState;\n\n  switch (action.type) {\n    // VENS AVAILABLE REPORT DESCRIPTION\n    case types.LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION:\n      return state;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION_SUCCESS:\n      newState = objectAssign({}, state, {\n        availableReportDescription: action.payload\n      });\n      return newState;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION_ERROR:\n      return state;\n    // REPORTS\n\n    case types.LOAD_VEN_AVAILABLE_REPORT:\n      return state;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_SUCCESS:\n      newState = objectAssign({}, state, {\n        availableReport: action.payload[0]\n      });\n      return newState;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_ERROR:\n      return state;\n\n    case types.LOCATION_CHANGE:\n      return initialState.ven_detail_report;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/reducers/venDetailReportReducer.js"],"names":["types","objectAssign","initialState","venDetailReportReducer","state","ven_detail_report","action","newState","type","LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION","LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION_SUCCESS","availableReportDescription","payload","LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION_ERROR","LOAD_VEN_AVAILABLE_REPORT","LOAD_VEN_AVAILABLE_REPORT_SUCCESS","availableReport","LOAD_VEN_AVAILABLE_REPORT_ERROR","LOCATION_CHANGE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAIA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,sBAAT,GAAkF;AAAA,MAAjDC,KAAiD,uEAAzCF,YAAY,CAACG,iBAA4B;AAAA,MAATC,MAAS;AAC/F,MAAIC,QAAJ;;AAEA,UAAQD,MAAM,CAACE,IAAf;AAGE;AACA,SAAKR,KAAK,CAACS,qCAAX;AACE,aAAOL,KAAP;;AAEF,SAAKJ,KAAK,CAACU,6CAAX;AACEH,MAAAA,QAAQ,GAAGN,YAAY,CAAE,EAAF,EAAMG,KAAN,EAAa;AAClCO,QAAAA,0BAA0B,EAAEL,MAAM,CAACM;AADD,OAAb,CAAvB;AAGA,aAAOL,QAAP;;AAEF,SAAKP,KAAK,CAACa,2CAAX;AACE,aAAOT,KAAP;AAED;;AACD,SAAKJ,KAAK,CAACc,yBAAX;AACE,aAAOV,KAAP;;AAEF,SAAKJ,KAAK,CAACe,iCAAX;AACER,MAAAA,QAAQ,GAAGN,YAAY,CAAE,EAAF,EAAMG,KAAN,EAAa;AAClCY,QAAAA,eAAe,EAAEV,MAAM,CAACM,OAAP,CAAe,CAAf;AADiB,OAAb,CAAvB;AAGA,aAAOL,QAAP;;AAEF,SAAKP,KAAK,CAACiB,+BAAX;AACE,aAAOb,KAAP;;AAEF,SAAKJ,KAAK,CAACkB,eAAX;AACE,aAAOhB,YAAY,CAACG,iBAApB;;AAEF;AACE,aAAOD,KAAP;AAjCJ;AAmCD","sourcesContent":["import * as types from '../constants/actionTypes';\nimport objectAssign from 'object-assign';\nimport initialState from './initialState';\n\n\n\n// IMPORTANT: Note that with Redux, state should NEVER be changed.\n// State is considered immutable. Instead,\n// create a copy of the state passed and set new values on the copy.\n// Note that I'm using Object.assign to create a copy of current state\n// and update values on the copy.\nexport default function venDetailReportReducer( state = initialState.ven_detail_report, action ) {\n  let newState;\n\n  switch (action.type) {\n\n\n    // VENS AVAILABLE REPORT DESCRIPTION\n    case types.LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION:\n      return state;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION_SUCCESS:\n      newState = objectAssign( {}, state, {\n        availableReportDescription: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION_ERROR:\n      return state;\n\n     // REPORTS\n    case types.LOAD_VEN_AVAILABLE_REPORT:\n      return state;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_SUCCESS:\n      newState = objectAssign( {}, state, {\n        availableReport: action.payload[0]\n      } );\n      return newState;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_ERROR:\n      return state;\n\n    case types.LOCATION_CHANGE:\n      return initialState.ven_detail_report;\n  \t\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}