{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _class = _interopRequireDefault(require(\"dom-helpers/class\"));\n\nvar _width = _interopRequireDefault(require(\"dom-helpers/query/width\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/util/scrollbarSize\"));\n\nvar _dates = _interopRequireDefault(require(\"./utils/dates\"));\n\nvar _constants = require(\"./utils/constants\");\n\nvar _eventLevels = require(\"./utils/eventLevels\");\n\nvar _selection = require(\"./utils/selection\");\n\nvar Agenda =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Agenda, _React$Component);\n\n  function Agenda() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.renderDay = function (day, events, dayKey) {\n      var _this$props = _this.props,\n          selected = _this$props.selected,\n          getters = _this$props.getters,\n          accessors = _this$props.accessors,\n          localizer = _this$props.localizer,\n          _this$props$component = _this$props.components,\n          Event = _this$props$component.event,\n          AgendaDate = _this$props$component.date;\n      events = events.filter(function (e) {\n        return (0, _eventLevels.inRange)(e, _dates.default.startOf(day, 'day'), _dates.default.endOf(day, 'day'), accessors);\n      });\n      return events.map(function (event, idx) {\n        var title = accessors.title(event);\n        var end = accessors.end(event);\n        var start = accessors.start(event);\n        var userProps = getters.eventProp(event, start, end, (0, _selection.isSelected)(event, selected));\n        var dateLabel = idx === 0 && localizer.format(day, 'agendaDateFormat');\n        var first = idx === 0 ? _react.default.createElement(\"td\", {\n          rowSpan: events.length,\n          className: \"rbc-agenda-date-cell\"\n        }, AgendaDate ? _react.default.createElement(AgendaDate, {\n          day: day,\n          label: dateLabel\n        }) : dateLabel) : false;\n        return _react.default.createElement(\"tr\", {\n          key: dayKey + '_' + idx,\n          className: userProps.className,\n          style: userProps.style\n        }, first, _react.default.createElement(\"td\", {\n          className: \"rbc-agenda-time-cell\"\n        }, _this.timeRangeLabel(day, event)), _react.default.createElement(\"td\", {\n          className: \"rbc-agenda-event-cell\"\n        }, Event ? _react.default.createElement(Event, {\n          event: event,\n          title: title\n        }) : title));\n      }, []);\n    };\n\n    _this.timeRangeLabel = function (day, event) {\n      var _this$props2 = _this.props,\n          accessors = _this$props2.accessors,\n          localizer = _this$props2.localizer,\n          components = _this$props2.components;\n      var labelClass = '',\n          TimeComponent = components.time,\n          label = localizer.messages.allDay;\n      var end = accessors.end(event);\n      var start = accessors.start(event);\n\n      if (!accessors.allDay(event)) {\n        if (_dates.default.eq(start, end, 'day')) {\n          label = localizer.format({\n            start: start,\n            end: end\n          }, 'agendaTimeRangeFormat');\n        } else if (_dates.default.eq(day, start, 'day')) {\n          label = localizer.format(start, 'agendaTimeFormat');\n        } else if (_dates.default.eq(day, end, 'day')) {\n          label = localizer.format(end, 'agendaTimeFormat');\n        }\n      }\n\n      if (_dates.default.gt(day, start, 'day')) labelClass = 'rbc-continues-prior';\n      if (_dates.default.lt(day, end, 'day')) labelClass += ' rbc-continues-after';\n      return _react.default.createElement(\"span\", {\n        className: labelClass.trim()\n      }, TimeComponent ? _react.default.createElement(TimeComponent, {\n        event: event,\n        day: day,\n        label: label\n      }) : label);\n    };\n\n    _this._adjustHeader = function () {\n      if (!_this.refs.tbody) return;\n      var header = _this.refs.header;\n      var firstRow = _this.refs.tbody.firstChild;\n      if (!firstRow) return;\n      var isOverflowing = _this.refs.content.scrollHeight > _this.refs.content.clientHeight;\n      var widths = _this._widths || [];\n      _this._widths = [(0, _width.default)(firstRow.children[0]), (0, _width.default)(firstRow.children[1])];\n\n      if (widths[0] !== _this._widths[0] || widths[1] !== _this._widths[1]) {\n        _this.refs.dateCol.style.width = _this._widths[0] + 'px';\n        _this.refs.timeCol.style.width = _this._widths[1] + 'px';\n      }\n\n      if (isOverflowing) {\n        _class.default.addClass(header, 'rbc-header-overflowing');\n\n        header.style.marginRight = (0, _scrollbarSize.default)() + 'px';\n      } else {\n        _class.default.removeClass(header, 'rbc-header-overflowing');\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Agenda.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._adjustHeader();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this._adjustHeader();\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props3 = this.props,\n        length = _this$props3.length,\n        date = _this$props3.date,\n        events = _this$props3.events,\n        accessors = _this$props3.accessors,\n        localizer = _this$props3.localizer;\n    var messages = localizer.messages;\n\n    var end = _dates.default.add(date, length, 'day');\n\n    var range = _dates.default.range(date, end, 'day');\n\n    events = events.filter(function (event) {\n      return (0, _eventLevels.inRange)(event, date, end, accessors);\n    });\n    events.sort(function (a, b) {\n      return +accessors.start(a) - +accessors.start(b);\n    });\n    return _react.default.createElement(\"div\", {\n      className: \"rbc-agenda-view\"\n    }, events.length !== 0 ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"table\", {\n      ref: \"header\",\n      className: \"rbc-agenda-table\"\n    }, _react.default.createElement(\"thead\", null, _react.default.createElement(\"tr\", null, _react.default.createElement(\"th\", {\n      className: \"rbc-header\",\n      ref: \"dateCol\"\n    }, messages.date), _react.default.createElement(\"th\", {\n      className: \"rbc-header\",\n      ref: \"timeCol\"\n    }, messages.time), _react.default.createElement(\"th\", {\n      className: \"rbc-header\"\n    }, messages.event)))), _react.default.createElement(\"div\", {\n      className: \"rbc-agenda-content\",\n      ref: \"content\"\n    }, _react.default.createElement(\"table\", {\n      className: \"rbc-agenda-table\"\n    }, _react.default.createElement(\"tbody\", {\n      ref: \"tbody\"\n    }, range.map(function (day, idx) {\n      return _this2.renderDay(day, events, idx);\n    }))))) : _react.default.createElement(\"span\", {\n      className: \"rbc-agenda-empty\"\n    }, messages.noEventsInRange));\n  };\n\n  return Agenda;\n}(_react.default.Component);\n\nAgenda.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  events: _propTypes.default.array,\n  date: _propTypes.default.instanceOf(Date),\n  length: _propTypes.default.number.isRequired,\n  selected: _propTypes.default.object,\n  accessors: _propTypes.default.object.isRequired,\n  components: _propTypes.default.object.isRequired,\n  getters: _propTypes.default.object.isRequired,\n  localizer: _propTypes.default.object.isRequired\n} : {};\nAgenda.defaultProps = {\n  length: 30\n};\n\nAgenda.range = function (start, _ref) {\n  var _ref$length = _ref.length,\n      length = _ref$length === void 0 ? Agenda.defaultProps.length : _ref$length;\n\n  var end = _dates.default.add(start, length, 'day');\n\n  return {\n    start: start,\n    end: end\n  };\n};\n\nAgenda.navigate = function (date, action, _ref2) {\n  var _ref2$length = _ref2.length,\n      length = _ref2$length === void 0 ? Agenda.defaultProps.length : _ref2$length;\n\n  switch (action) {\n    case _constants.navigate.PREVIOUS:\n      return _dates.default.add(date, -length, 'day');\n\n    case _constants.navigate.NEXT:\n      return _dates.default.add(date, length, 'day');\n\n    default:\n      return date;\n  }\n};\n\nAgenda.title = function (start, _ref3) {\n  var _ref3$length = _ref3.length,\n      length = _ref3$length === void 0 ? Agenda.defaultProps.length : _ref3$length,\n      localizer = _ref3.localizer;\n\n  var end = _dates.default.add(start, length, 'day');\n\n  return localizer.format({\n    start: start,\n    end: end\n  }, 'agendaHeaderFormat');\n};\n\nvar _default = Agenda;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}