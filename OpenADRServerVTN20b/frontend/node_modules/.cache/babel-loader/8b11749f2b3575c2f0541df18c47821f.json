{"ast":null,"code":"import _classCallCheck from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/EventDetail/EventDetailDescriptor.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport EventDetailHeader from './EventDetailHeader';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { formatTimestamp } from '../../utils/time';\n\nvar EventTextField = function EventTextField(props) {\n  var value = props.value != null ? props.value : \"\";\n  return React.createElement(TextField, {\n    label: props.field,\n    value: value,\n    className: props.className,\n    margin: \"normal\",\n    fullWidth: true,\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n};\n\nexport var EventDetailDescriptor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventDetailDescriptor, _React$Component);\n\n  function EventDetailDescriptor(props) {\n    var _this;\n\n    _classCallCheck(this, EventDetailDescriptor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventDetailDescriptor).call(this, props));\n\n    _this.handlePublishEventClick = function () {\n      _this.props.publishEvent(_this.props.event.id);\n    };\n\n    _this.handleActiveEventClick = function () {\n      _this.props.activeEvent(_this.props.event.id);\n    };\n\n    _this.handleCancelEventClick = function () {\n      _this.props.cancelEvent(_this.props.event.id);\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(EventDetailDescriptor, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          event = _this$props.event;\n      if (Object.keys(event).length === 0) return null;\n      var createdDatetime = formatTimestamp(event.createdTimestamp);\n      var lastUpdateDatetime = formatTimestamp(event.lastUpdateTimestamp);\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(EventDetailHeader, {\n        classes: classes,\n        event: event,\n        actions: React.createElement(Grid, {\n          container: true,\n          spacing: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, !event.published ? React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Button, {\n          key: \"btn_create\",\n          style: {\n            marginTop: 15\n          },\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true,\n          size: \"small\",\n          onClick: this.handlePublishEventClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(CloudDownloadIcon, {\n          style: {\n            marginRight: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), \" PUBLISH\")) : null, event.published && event.descriptor.state === \"ACTIVE\" ? React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Button, {\n          key: \"btn_create\",\n          style: {\n            marginTop: 15\n          },\n          variant: \"outlined\",\n          color: \"secondary\",\n          fullWidth: true,\n          size: \"small\",\n          onClick: this.handleCancelEventClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(CloudDownloadIcon, {\n          style: {\n            marginRight: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), \" CANCEL\")) : null, event.published && event.descriptor.state === \"CANCELLED\" ? React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Button, {\n          key: \"btn_create\",\n          style: {\n            marginTop: 15\n          },\n          variant: \"outlined\",\n          color: \"primary\",\n          fullWidth: true,\n          size: \"small\",\n          onClick: this.handleActiveEventClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(CloudDownloadIcon, {\n          style: {\n            marginRight: 15\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), \" ACTIVE\")) : null),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        style: {\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"Event ID\",\n        value: event.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"Modification Number\",\n        value: event.descriptor.modificationNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"Oadr Profile\",\n        value: event.descriptor.oadrProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"Priority\",\n        value: event.descriptor.priority,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"State\",\n        value: event.descriptor.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"Created Datetime\",\n        value: createdDatetime.date + \" \" + createdDatetime.time + \" \" + createdDatetime.tz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"Last Update Datetime\",\n        value: lastUpdateDatetime.date + \" \" + lastUpdateDatetime.time + \" \" + lastUpdateDatetime.tz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"Vtn Comment\",\n        value: event.descriptor.vtnComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"Is Test Event\",\n        value: event.descriptor.testEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(EventTextField, {\n        className: classes.textField,\n        field: \"Response Required\",\n        value: event.descriptor.responseRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return EventDetailDescriptor;\n}(React.Component);\nexport default EventDetailDescriptor;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/EventDetail/EventDetailDescriptor.js"],"names":["React","Button","CloudDownloadIcon","EventDetailHeader","Divider","TextField","Grid","FormControlLabel","formatTimestamp","EventTextField","props","value","field","className","readOnly","EventDetailDescriptor","handlePublishEventClick","publishEvent","event","id","handleActiveEventClick","activeEvent","handleCancelEventClick","cancelEvent","state","classes","Object","keys","length","createdDatetime","createdTimestamp","lastUpdateDatetime","lastUpdateTimestamp","root","published","marginTop","marginRight","descriptor","textField","modificationNumber","oadrProfile","priority","date","time","tz","vtnComment","testEvent","responseRequired","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAWA,OAAOC,MAAP,MAAmB,0BAAnB;AASA,OAAOC,iBAAP,MAA8B,kCAA9B;AAGA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AAGA,SAAQC,eAAR,QAA8B,kBAA9B;;AAGA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9B,MAAIC,KAAK,GAAID,KAAK,CAACC,KAAN,IAAe,IAAhB,GAAwBD,KAAK,CAACC,KAA9B,GAAsC,EAAlD;AACA,SACA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAGD,KAAK,CAACE,KAAzB;AACW,IAAA,KAAK,EAAGD,KADnB;AAEW,IAAA,SAAS,EAAGD,KAAK,CAACG,SAF7B;AAGW,IAAA,MAAM,EAAC,QAHlB;AAIW,IAAA,SAAS,EAAE,IAJtB;AAKW,IAAA,UAAU,EAAG;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AASD,CAXD;;AAaA,WAAaC,qBAAb;AAAA;AAAA;AAAA;;AACE,iCAAaL,KAAb,EAAqB;AAAA;;AAAA;;AACnB,+FAAOA,KAAP;;AADmB,UAOrBM,uBAPqB,GAOK,YAAM;AAC9B,YAAKN,KAAL,CAAWO,YAAX,CAAwB,MAAKP,KAAL,CAAWQ,KAAX,CAAiBC,EAAzC;AACD,KAToB;;AAAA,UAWrBC,sBAXqB,GAWI,YAAM;AAC7B,YAAKV,KAAL,CAAWW,WAAX,CAAuB,MAAKX,KAAL,CAAWQ,KAAX,CAAiBC,EAAxC;AACD,KAboB;;AAAA,UAerBG,sBAfqB,GAeI,YAAM;AAC7B,YAAKZ,KAAL,CAAWa,WAAX,CAAuB,MAAKb,KAAL,CAAWQ,KAAX,CAAiBC,EAAxC;AACD,KAjBoB;;AAEnB,UAAKK,KAAL,GAAa,EAAb;AAFmB;AAKpB;;AANH;AAAA;AAAA,6BAoBW;AAAA,wBACkB,KAAKd,KADvB;AAAA,UACAe,OADA,eACAA,OADA;AAAA,UACSP,KADT,eACSA,KADT;AAEP,UAAGQ,MAAM,CAACC,IAAP,CAAYT,KAAZ,EAAmBU,MAAnB,KAA8B,CAAjC,EAAoC,OAAO,IAAP;AAEpC,UAAIC,eAAe,GAAGrB,eAAe,CAACU,KAAK,CAACY,gBAAP,CAArC;AACA,UAAIC,kBAAkB,GAAGvB,eAAe,CAACU,KAAK,CAACc,mBAAP,CAAxC;AAGA,aACA;AAAK,QAAA,SAAS,EAAGP,OAAO,CAACQ,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,OAAO,EAAER,OAA5B;AAAqC,QAAA,KAAK,EAAEP,KAA5C;AAAmD,QAAA,OAAO,EAAE,oBAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAG,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAExD,CAACA,KAAK,CAACgB,SAAR,GAAqB,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAClB,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAC,YAAZ;AACQ,UAAA,KAAK,EAAG;AAAEC,YAAAA,SAAS,EAAE;AAAb,WADhB;AAEQ,UAAA,OAAO,EAAC,UAFhB;AAGQ,UAAA,KAAK,EAAC,SAHd;AAIQ,UAAA,SAAS,EAAE,IAJnB;AAKQ,UAAA,IAAI,EAAC,OALb;AAMQ,UAAA,OAAO,EAAE,KAAKnB,uBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE,oBAAC,iBAAD;AAAmB,UAAA,KAAK,EAAG;AAAEoB,YAAAA,WAAW,EAAE;AAAf,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,aADkB,CAArB,GAUW,IAZ8C,EAcxDlB,KAAK,CAACgB,SAAN,IAAmBhB,KAAK,CAACmB,UAAN,CAAiBb,KAAjB,KAA2B,QAA/C,GAA2D,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACxD,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAC,YAAZ;AACQ,UAAA,KAAK,EAAG;AAAEW,YAAAA,SAAS,EAAE;AAAb,WADhB;AAEQ,UAAA,OAAO,EAAC,UAFhB;AAGQ,UAAA,KAAK,EAAC,WAHd;AAIQ,UAAA,SAAS,EAAE,IAJnB;AAKQ,UAAA,IAAI,EAAC,OALb;AAMQ,UAAA,OAAO,EAAE,KAAKb,sBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE,oBAAC,iBAAD;AAAmB,UAAA,KAAK,EAAG;AAAEc,YAAAA,WAAW,EAAE;AAAf,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,YADwD,CAA3D,GAUW,IAxB8C,EA0BxDlB,KAAK,CAACgB,SAAN,IAAmBhB,KAAK,CAACmB,UAAN,CAAiBb,KAAjB,KAA2B,WAA/C,GAA8D,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAC3D,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAC,YAAZ;AACQ,UAAA,KAAK,EAAG;AAAEW,YAAAA,SAAS,EAAE;AAAb,WADhB;AAEQ,UAAA,OAAO,EAAC,UAFhB;AAGQ,UAAA,KAAK,EAAC,SAHd;AAIQ,UAAA,SAAS,EAAE,IAJnB;AAKQ,UAAA,IAAI,EAAC,OALb;AAMQ,UAAA,OAAO,EAAE,KAAKf,sBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE,oBAAC,iBAAD;AAAmB,UAAA,KAAK,EAAG;AAAEgB,YAAAA,WAAW,EAAE;AAAf,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,YAD2D,CAA9D,GAUW,IApC8C,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAyCG,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAG;AAAED,UAAAA,SAAS,EAAE;AAAb,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCH,EA0CG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAG,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGV,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,UAAtD;AAAiE,QAAA,KAAK,EAAGpB,KAAK,CAACC,EAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGM,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,qBAAtD;AAA4E,QAAA,KAAK,EAAGpB,KAAK,CAACmB,UAAN,CAAiBE,kBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAOE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGd,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,cAAtD;AAAqE,QAAA,KAAK,EAAGpB,KAAK,CAACmB,UAAN,CAAiBG,WAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,EAUE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGf,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,UAAtD;AAAiE,QAAA,KAAK,EAAGpB,KAAK,CAACmB,UAAN,CAAiBI,QAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,EAaG,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGhB,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,OAAtD;AAA8D,QAAA,KAAK,EAAGpB,KAAK,CAACmB,UAAN,CAAiBb,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAbH,CADD,EAoBC,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAG,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGC,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,kBAAtD;AACA,QAAA,KAAK,EAAGT,eAAe,CAACa,IAAhB,GAAuB,GAAvB,GAA4Bb,eAAe,CAACc,IAA5C,GAAmD,GAAnD,GAAyDd,eAAe,CAACe,EADjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGnB,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,sBAAtD;AACA,QAAA,KAAK,EAAGP,kBAAkB,CAACW,IAAnB,GAA0B,GAA1B,GAA+BX,kBAAkB,CAACY,IAAlD,GAAyD,GAAzD,GAA+DZ,kBAAkB,CAACa,EAD1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,EASG,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGnB,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,aAAtD;AAAoE,QAAA,KAAK,EAAGpB,KAAK,CAACmB,UAAN,CAAiBQ,UAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CATH,EAYI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGpB,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,eAAtD;AAAsE,QAAA,KAAK,EAAGpB,KAAK,CAACmB,UAAN,CAAiBS,SAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAZJ,EAeI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAG,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAGrB,OAAO,CAACa,SAApC;AAAgD,QAAA,KAAK,EAAC,mBAAtD;AAA0E,QAAA,KAAK,EAAGpB,KAAK,CAACmB,UAAN,CAAiBU,gBAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAfJ,CApBD,CA1CH,CADA;AAyFD;AArHH;;AAAA;AAAA,EAA2C/C,KAAK,CAACgD,SAAjD;AAwHA,eAAejC,qBAAf","sourcesContent":["import React from 'react';\n\n\n\n\n\n\n\n\n\n\nimport Button from '@material-ui/core/Button';\n\n\n\n\n\n\n\n\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\n\nimport EventDetailHeader from './EventDetailHeader'\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nimport {formatTimestamp} from '../../utils/time'\n\n\nvar EventTextField = (props) => {\n  var value = (props.value != null) ? props.value : \"\";\n  return (\n  <TextField label={ props.field }\n             value={ value }\n             className={ props.className }\n             margin=\"normal\"\n             fullWidth={true}\n             InputProps={ { readOnly: true, } } />\n\n  );\n}\n\nexport class EventDetailDescriptor extends React.Component {\n  constructor( props ) {\n    super( props );\n    this.state = {}\n\n\n  }\n\n  handlePublishEventClick = () => {\n    this.props.publishEvent(this.props.event.id);\n  }\n\n  handleActiveEventClick = () => {\n    this.props.activeEvent(this.props.event.id);\n  }\n \n  handleCancelEventClick = () => {\n    this.props.cancelEvent(this.props.event.id)\n  }\n\n  render() {\n    const {classes, event} = this.props;\n    if(Object.keys(event).length === 0) return null;\n    \n    var createdDatetime = formatTimestamp(event.createdTimestamp);\n    var lastUpdateDatetime = formatTimestamp(event.lastUpdateTimestamp);\n\n\n    return (\n    <div className={ classes.root } >\n      <EventDetailHeader classes={classes} event={event} actions={<Grid container spacing={ 24 }>\n\n        {(!event.published) ? <Grid item xs={ 4 }>\n            <Button key=\"btn_create\"\n                    style={ { marginTop: 15 } }\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    fullWidth={true}\n                    size=\"small\"\n                    onClick={this.handlePublishEventClick}>\n              <CloudDownloadIcon style={ { marginRight: 15 } }/> PUBLISH\n            </Button>\n          </Grid> : null}\n\n        {(event.published && event.descriptor.state === \"ACTIVE\") ? <Grid item xs={ 4 }>\n            <Button key=\"btn_create\"\n                    style={ { marginTop: 15 } }\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    fullWidth={true}\n                    size=\"small\"\n                    onClick={this.handleCancelEventClick}>\n              <CloudDownloadIcon style={ { marginRight: 15 } }/> CANCEL\n            </Button>\n          </Grid> : null}\n\n        {(event.published && event.descriptor.state === \"CANCELLED\") ? <Grid item xs={ 4 }>\n            <Button key=\"btn_create\"\n                    style={ { marginTop: 15 } }\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    fullWidth={true}\n                    size=\"small\"\n                    onClick={this.handleActiveEventClick}>\n              <CloudDownloadIcon style={ { marginRight: 15 } }/> ACTIVE\n            </Button>\n          </Grid> : null}\n          \n      \n      </Grid>}/>\n       <Divider style={ { marginTop: '20px' } } />\n       <Grid>\n        <Grid container spacing={ 24 }>\n          <Grid item xs={ 3 }>\n            <EventTextField className={ classes.textField } field=\"Event ID\" value={ event.id } />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <EventTextField className={ classes.textField } field=\"Modification Number\" value={ event.descriptor.modificationNumber } />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <EventTextField className={ classes.textField } field=\"Oadr Profile\" value={ event.descriptor.oadrProfile } />\n          </Grid>\n          <Grid item xs={ 1 }>\n            <EventTextField className={ classes.textField } field=\"Priority\" value={ event.descriptor.priority } />\n          </Grid>\n           <Grid item xs={ 2 }>\n            <EventTextField className={ classes.textField } field=\"State\" value={ event.descriptor.state } />\n          </Grid>\n\n        </Grid>\n\n        <Grid container spacing={ 24 }>\n          <Grid item xs={ 3 }>\n            <EventTextField className={ classes.textField } field=\"Created Datetime\" \n            value={ createdDatetime.date + \" \" +createdDatetime.time + \" \" + createdDatetime.tz } />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <EventTextField className={ classes.textField } field=\"Last Update Datetime\" \n            value={ lastUpdateDatetime.date + \" \" +lastUpdateDatetime.time + \" \" + lastUpdateDatetime.tz } />\n          </Grid>\n           <Grid item xs={ 3 }>\n              <EventTextField className={ classes.textField } field=\"Vtn Comment\" value={ event.descriptor.vtnComment } />\n            </Grid>\n            <Grid item xs={ 1 }>\n              <EventTextField className={ classes.textField } field=\"Is Test Event\" value={ event.descriptor.testEvent } />\n            </Grid>\n            <Grid item xs={ 2 }>\n              <EventTextField className={ classes.textField } field=\"Response Required\" value={ event.descriptor.responseRequired } />\n            </Grid>\n        </Grid>\n\n        \n        \n     \n      </Grid>\n    </div>\n    );\n  }\n}\n\nexport default EventDetailDescriptor;\n"]},"metadata":{},"sourceType":"module"}