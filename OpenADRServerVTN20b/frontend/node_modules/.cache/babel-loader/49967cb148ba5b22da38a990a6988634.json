{"ast":null,"code":"var _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/VtnConfiguration/VtnConfigurationParameter.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Clear from '@material-ui/icons/Clear';\nimport Done from '@material-ui/icons/Done';\nimport red from '@material-ui/core/colors/red';\nimport green from '@material-ui/core/colors/green';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nfunction VtnConfigurationTextField(props) {\n  return React.createElement(TextField, {\n    label: props.field,\n    defaultValue: props.value,\n    className: props.className,\n    InputProps: {\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n}\n\nfunction VtnConfigurationFeatureField(props) {\n  var str = props.value ? 'Supported' : 'not supported';\n  var ico = props.value ? React.createElement(Done, {\n    color: \"action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : React.createElement(Clear, {\n    color: \"action\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n  return React.createElement(TextField, {\n    label: props.field,\n    defaultValue: str,\n    className: props.className,\n    InputProps: {\n      readOnly: true,\n      endAdornment: React.createElement(InputAdornment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" \", ico, \" \")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n}\n\nvar VtnConfigurationParameter = function VtnConfigurationParameter(props) {\n  var classes = props.classes,\n      vtnConfiguration = props.vtnConfiguration;\n\n  var getTextField = function getTextField(label, field) {\n    var view = null;\n    var value = props.vtnConfiguration[field];\n\n    if (props.vtnConfiguration[field] != null) {\n      view = React.createElement(VtnConfigurationTextField, {\n        className: classes.textField,\n        field: label,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n\n    return view;\n  };\n\n  var getUrlTextField = function getUrlTextField() {\n    var view = null;\n\n    if (vtnConfiguration.contextPath != null && vtnConfiguration.port != null && vtnConfiguration.host != null) {\n      var endpoint20b = 'https://' + vtnConfiguration.host + ':' + vtnConfiguration.port + vtnConfiguration.contextPath + '/OpenADR2/Simple/2.0b';\n      var endpoint20a = 'https://' + vtnConfiguration.host + ':' + vtnConfiguration.port + vtnConfiguration.contextPath + '/OpenADR2/Simple';\n      view = [React.createElement(FormControl, {\n        className: classes.formControl,\n        key: \"textfield_endpoint20b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(VtnConfigurationTextField, {\n        className: classes.textField,\n        field: \"OADR 2.0b Endpoint\",\n        value: endpoint20b,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(FormControl, {\n        className: classes.formControl,\n        key: \"textfield_endpoint20a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(VtnConfigurationTextField, {\n        className: classes.textField,\n        field: \"OADR 2.0a Endpoint\",\n        value: endpoint20a,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))];\n      return view;\n    }\n  };\n\n  var getFeatureField = function getFeatureField(label, field) {\n    var view = null;\n    var value = props.vtnConfiguration[field];\n\n    if (props.vtnConfiguration[field] != null) {\n      view = React.createElement(VtnConfigurationFeatureField, {\n        className: classes.textField,\n        field: label,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }\n\n    return view;\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, getTextField('Identifiant VTN', 'vtnId')), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, getTextField('Default Pull Frequency (seconds)', 'pullFrequencySeconds')), React.createElement(Divider, {\n    style: {\n      marginBottom: '20px',\n      marginTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), getUrlTextField(), React.createElement(Divider, {\n    style: {\n      marginBottom: '20px',\n      marginTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, getFeatureField('HTTPS Push feature', 'supportPush')), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, getFeatureField('Unsecured HTTP Push feature', 'supportUnsecuredHttpPush')));\n};\n\nexport default VtnConfigurationParameter;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/VtnConfiguration/VtnConfigurationParameter.js"],"names":["React","TextField","FormControl","InputAdornment","Clear","Done","red","green","FormLabel","Divider","Typography","VtnConfigurationTextField","props","field","value","className","readOnly","VtnConfigurationFeatureField","str","ico","endAdornment","VtnConfigurationParameter","classes","vtnConfiguration","getTextField","label","view","textField","getUrlTextField","contextPath","port","host","endpoint20b","endpoint20a","formControl","getFeatureField","root","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Clear from '@material-ui/icons/Clear';\nimport Done from '@material-ui/icons/Done';\nimport red from '@material-ui/core/colors/red';\nimport green from '@material-ui/core/colors/green';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n\nfunction VtnConfigurationTextField( props ) {\n  return (\n  <TextField label={ props.field }\n             defaultValue={ props.value }\n             className={ props.className }\n             InputProps={ { readOnly: true, } } />\n\n  );\n}\n\nfunction VtnConfigurationFeatureField( props ) {\n  var str = (props.value) ? 'Supported' : 'not supported'\n  var ico = (props.value) ? <Done color=\"action\" /> : <Clear color=\"action\" />\n  return (\n  <TextField label={ props.field }\n             defaultValue={ str }\n             className={ props.className }\n             InputProps={ { readOnly: true, endAdornment: ( <InputAdornment> { ico } </InputAdornment> ), } } />\n\n  );\n}\n\nconst VtnConfigurationParameter = (props) => {\n  const {classes, vtnConfiguration} = props;\n\n  var getTextField = function ( label, field ) {\n    var view = null;\n    var value = props.vtnConfiguration[ field ];\n    if ( props.vtnConfiguration[ field ] != null ) {\n      view = (\n        <VtnConfigurationTextField className={ classes.textField }\n                                   field={ label }\n                                   value={ value } />\n      )\n    }\n    return view;\n  }\n\n  var getUrlTextField = function () {\n    var view = null;\n    if ( vtnConfiguration.contextPath != null\n      && vtnConfiguration.port != null\n      && vtnConfiguration.host != null ) {\n      var endpoint20b = 'https://' + vtnConfiguration.host + ':' + vtnConfiguration.port + vtnConfiguration.contextPath + '/OpenADR2/Simple/2.0b';\n      var endpoint20a = 'https://' + vtnConfiguration.host + ':' + vtnConfiguration.port + vtnConfiguration.contextPath + '/OpenADR2/Simple';\n      view = [\n        <FormControl className={ classes.formControl } key=\"textfield_endpoint20b\">\n          <VtnConfigurationTextField className={ classes.textField }\n                                     field=\"OADR 2.0b Endpoint\"\n                                     value={ endpoint20b } />\n        </FormControl>,\n        <FormControl className={ classes.formControl } key=\"textfield_endpoint20a\">\n          <VtnConfigurationTextField className={ classes.textField }\n                                     field=\"OADR 2.0a Endpoint\"\n                                     value={ endpoint20a } />\n        </FormControl>\n      ]\n      return view;\n\n    }\n  }\n\n  var getFeatureField = function ( label, field ) {\n    var view = null;\n    var value = props.vtnConfiguration[ field ];\n    if ( props.vtnConfiguration[ field ] != null ) {\n      view = (\n        <VtnConfigurationFeatureField className={ classes.textField }\n                                      field={ label }\n                                      value={ value } />\n      )\n    }\n    return view;\n  }\n\n  return (\n  <div className={ classes.root }>\n    <FormControl className={ classes.formControl }>\n      { getTextField( 'Identifiant VTN', 'vtnId' ) }\n    </FormControl>\n    <FormControl className={ classes.formControl }>\n      { getTextField( 'Default Pull Frequency (seconds)', 'pullFrequencySeconds' ) }\n    </FormControl>\n    <Divider style={ { marginBottom: '20px', marginTop: '20px' } } />\n    { getUrlTextField() }\n    <Divider style={ { marginBottom: '20px', marginTop: '20px' } } />\n    <FormControl className={ classes.formControl }>\n      { getFeatureField( 'HTTPS Push feature', 'supportPush' ) }\n    </FormControl>\n    <FormControl className={ classes.formControl }>\n      { getFeatureField( 'Unsecured HTTP Push feature', 'supportUnsecuredHttpPush' ) }\n    </FormControl>\n  </div>\n  );\n};\n\nexport default VtnConfigurationParameter;\n"]},"metadata":{},"sourceType":"module"}