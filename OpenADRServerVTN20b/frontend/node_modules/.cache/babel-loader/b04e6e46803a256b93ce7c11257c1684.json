{"ast":null,"code":"import _classCallCheck from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/Event/EventCalendar.js\";\nimport React from 'react';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport Divider from '@material-ui/core/Divider'; // import style from 'react-big-calendar/lib/css/react-big-calendar.css'\n\nimport { iCalDurationInSeconds } from '../../utils/time';\nimport { EventCalendarDialog } from '../common/VtnconfigurationDialog';\nimport { history } from '../../store/configureStore';\nimport EventHeader from './EventHeader';\nimport amber from '@material-ui/core/colors/amber';\nimport red from '@material-ui/core/colors/red';\nimport green from '@material-ui/core/colors/green';\nimport EventCalendarWeekView from './EventCalendarView/EventCalendarWeekView';\nimport EventCalendarDayView from './EventCalendarView/EventCalendarDayView';\nimport EventCalendarMonthView from './EventCalendarView/EventCalendarMonthView';\nimport EventCalendarAgendaView from './EventCalendarView/EventCalendarAgendaView';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar marketContextColorCache = {};\nexport var EventCalendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventCalendar, _React$Component);\n\n  function EventCalendar(props) {\n    var _this;\n\n    _classCallCheck(this, EventCalendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventCalendar).call(this, props));\n\n    _this.handleEventCalendarDialogClose = function () {\n      _this.setState({\n        eventCalendarDialog: false\n      });\n    };\n\n    _this.handleEditEvent = function (id) {\n      return function () {\n        history.push('/event/detail/' + id);\n      };\n    };\n\n    _this.getEventPropGetter = function (event, start, end, isSelected) {\n      if (_this.props.color === \"status\") {\n        var colorIntensity = 700;\n\n        if (isSelected) {\n          colorIntensity = 500;\n        }\n\n        var color;\n\n        if (!event.published) {\n          color = amber[colorIntensity];\n        } else if (event.state === \"ACTIVE\") {\n          color = green[colorIntensity];\n        } else if (event.state === \"CANCELLED\") {\n          color = red[colorIntensity];\n        }\n\n        return {\n          style: {\n            backgroundColor: color\n          }\n        };\n      } else {\n        return {\n          style: {\n            backgroundColor: marketContextColorCache[event.marketContext]\n          }\n        };\n      }\n    };\n\n    _this.handleSelectEvent = function (event) {\n      _this.setState({\n        eventCalendarDialog: true,\n        selectedEvent: event\n      });\n    };\n\n    _this.handleEventDetailClick = function (id) {\n      return function () {\n        history.push('/event/detail/' + id);\n      };\n    };\n\n    _this.state = {};\n    _this.state.eventCalendarDialog = false;\n    _this.state.selectedEvent = null;\n    return _this;\n  }\n\n  _createClass(EventCalendar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      marketContextColorCache = {};\n\n      for (var i in this.props.marketContext) {\n        var context = this.props.marketContext[i];\n        marketContextColorCache[context.name] = context.color;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var that = this;\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          marketContext = _this$props.marketContext,\n          event = _this$props.event,\n          ven = _this$props.ven,\n          filters = _this$props.filters,\n          pagination = _this$props.pagination,\n          onFilterChange = _this$props.onFilterChange,\n          onPaginationChange = _this$props.onPaginationChange,\n          onVenSuggestionsFetchRequested = _this$props.onVenSuggestionsFetchRequested,\n          onVenSuggestionsClearRequested = _this$props.onVenSuggestionsClearRequested,\n          onVenSuggestionsSelect = _this$props.onVenSuggestionsSelect;\n      var calendarEvent = [];\n      event.forEach(function (e) {\n        var start = new Date();\n        start.setTime(e.activePeriod.start);\n        var end = new Date();\n        end.setTime(e.activePeriod.start + iCalDurationInSeconds(e.activePeriod.duration) * 1000);\n        calendarEvent.push({\n          title: e.descriptor.marketContext + \":\" + e.id,\n          start: start,\n          end: end,\n          allday: false,\n          state: e.descriptor.state,\n          published: e.published,\n          marketContext: e.descriptor.marketContext,\n          id: e.id\n        });\n      });\n      EventCalendarWeekView.onColorChange = this.props.onColorChange;\n      EventCalendarWeekView.color = this.props.color;\n      EventCalendarDayView.onColorChange = this.props.onColorChange;\n      EventCalendarDayView.color = this.props.color;\n      EventCalendarMonthView.onColorChange = this.props.onColorChange;\n      EventCalendarMonthView.color = this.props.color;\n      EventCalendarAgendaView.onColorChange = this.props.onColorChange;\n      EventCalendarAgendaView.color = this.props.color;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(EventHeader, {\n        classes: classes,\n        marketContext: marketContext,\n        event: event,\n        filters: filters,\n        pagination: pagination,\n        onFilterChange: onFilterChange,\n        onPaginationChange: onPaginationChange,\n        ven: ven,\n        onVenSuggestionsFetchRequested: onVenSuggestionsFetchRequested,\n        onVenSuggestionsClearRequested: onVenSuggestionsClearRequested,\n        onVenSuggestionsSelect: onVenSuggestionsSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        style: {\n          marginBottom: '20px',\n          marginTop: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(BigCalendar, {\n        style: {\n          height: 600\n        },\n        localizer: localizer,\n        events: calendarEvent,\n        defaultView: this.props.view,\n        defaultDate: this.props.currentDate,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        eventPropGetter: this.getEventPropGetter,\n        onSelectEvent: this.handleSelectEvent,\n        views: {\n          month: EventCalendarMonthView,\n          week: EventCalendarWeekView,\n          day: EventCalendarDayView,\n          agenda: EventCalendarAgendaView\n        },\n        onNavigate: function onNavigate(date) {\n          that.props.onCurrentDateChange(date);\n        },\n        onView: function onView(view) {\n          that.props.onViewChange(view);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), this.state.selectedEvent ? React.createElement(EventCalendarDialog, {\n        classes: classes,\n        title: this.state.selectedEvent ? this.state.selectedEvent.title : \"\",\n        event: this.state.selectedEvent,\n        open: this.state.eventCalendarDialog,\n        close: this.handleEventCalendarDialogClose,\n        handleEventDetailClick: this.handleEventDetailClick(this.state.selectedEvent.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return EventCalendar;\n}(React.Component);\nexport default EventCalendar;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/Event/EventCalendar.js"],"names":["React","BigCalendar","moment","Divider","iCalDurationInSeconds","EventCalendarDialog","history","EventHeader","amber","red","green","EventCalendarWeekView","EventCalendarDayView","EventCalendarMonthView","EventCalendarAgendaView","localizer","momentLocalizer","marketContextColorCache","EventCalendar","props","handleEventCalendarDialogClose","setState","eventCalendarDialog","handleEditEvent","id","push","getEventPropGetter","event","start","end","isSelected","color","colorIntensity","published","state","style","backgroundColor","marketContext","handleSelectEvent","selectedEvent","handleEventDetailClick","prevProps","prevState","snapshot","i","context","name","that","classes","ven","filters","pagination","onFilterChange","onPaginationChange","onVenSuggestionsFetchRequested","onVenSuggestionsClearRequested","onVenSuggestionsSelect","calendarEvent","forEach","e","Date","setTime","activePeriod","duration","title","descriptor","allday","onColorChange","root","marginBottom","marginTop","height","view","currentDate","month","week","day","agenda","date","onCurrentDateChange","onViewChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport BigCalendar from 'react-big-calendar'\nimport moment from 'moment'\nimport Divider from '@material-ui/core/Divider';\n\n// import style from 'react-big-calendar/lib/css/react-big-calendar.css'\n\nimport {iCalDurationInSeconds} from '../../utils/time'\n\nimport { EventCalendarDialog } from '../common/VtnconfigurationDialog'\n\nimport { history } from '../../store/configureStore';\n\nimport EventHeader from './EventHeader'\n\nimport amber from '@material-ui/core/colors/amber';\nimport red from '@material-ui/core/colors/red';\nimport green from '@material-ui/core/colors/green';\n\nimport EventCalendarWeekView from './EventCalendarView/EventCalendarWeekView'\nimport EventCalendarDayView from './EventCalendarView/EventCalendarDayView'\nimport EventCalendarMonthView from './EventCalendarView/EventCalendarMonthView'\nimport EventCalendarAgendaView from './EventCalendarView/EventCalendarAgendaView'\n\n\nconst localizer = BigCalendar.momentLocalizer(moment)\n\n\nvar marketContextColorCache = {};\nexport class EventCalendar extends React.Component {\n  constructor( props ) {\n    super( props );\n    this.state = {}\n    this.state.eventCalendarDialog = false;\n    this.state.selectedEvent = null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    marketContextColorCache = {};\n    for(var i in this.props.marketContext) {\n      var context = this.props.marketContext[i];\n      marketContextColorCache[context.name] = context.color;\n    }\n  }\n\n  handleEventCalendarDialogClose = () =>  {\n    this.setState({eventCalendarDialog: false});\n  }\n\n  handleEditEvent = (id) => () => {\n    history.push( '/event/detail/'+ id);\n  }\n\n  getEventPropGetter = (event, start, end, isSelected) => {\n    if(this.props.color === \"status\") {\n      var colorIntensity = 700;\n      if(isSelected) {\n        colorIntensity = 500;\n      }\n\n      var color;\n      if(!event.published) {\n        color = amber[colorIntensity];\n      }\n      else if(event.state === \"ACTIVE\"){\n        color = green[colorIntensity];\n      }\n      else if(event.state === \"CANCELLED\") {\n        color = red[colorIntensity];\n      }\n\n      \n      return {\n        style: {backgroundColor: color}\n      }\n    }\n    else {\n      return {\n        style: {backgroundColor: marketContextColorCache[event.marketContext]}\n      }\n    }\n      \n  }\n\n  handleSelectEvent = (event) => {\n    this.setState({eventCalendarDialog: true, selectedEvent:event});\n  }\n\n  handleEventDetailClick = (id) => () => {\n    history.push( '/event/detail/'+ id);\n  }\n\n\n\n  render() {\n    var that = this;\n    const {classes, marketContext, event, ven, filters, pagination, onFilterChange, onPaginationChange\n      , onVenSuggestionsFetchRequested, onVenSuggestionsClearRequested, onVenSuggestionsSelect} = this.props;\n\n    var calendarEvent = [];\n    event.forEach(e => {\n      var start = new Date();\n      start.setTime(e.activePeriod.start);\n      var end = new Date();\n      end.setTime(e.activePeriod.start + iCalDurationInSeconds(e.activePeriod.duration) * 1000);\n      calendarEvent.push({\n        title:e.descriptor.marketContext+\":\"+e.id,\n        start: start,\n        end: end,\n        allday:false,\n        state: e.descriptor.state,\n        published: e.published,\n        marketContext:e.descriptor.marketContext,\n        id:e.id\n      });\n    });\n\n\n    EventCalendarWeekView.onColorChange = this.props.onColorChange;\n    EventCalendarWeekView.color = this.props.color;\n    EventCalendarDayView.onColorChange = this.props.onColorChange;\n    EventCalendarDayView.color = this.props.color;\n    EventCalendarMonthView.onColorChange = this.props.onColorChange;\n    EventCalendarMonthView.color = this.props.color;\n    EventCalendarAgendaView.onColorChange = this.props.onColorChange;\n    EventCalendarAgendaView.color = this.props.color;\n\n    \n    \n\n\n    return (\n      <div className={ classes.root }>\n        <EventHeader classes={classes}  marketContext={marketContext} event={event}\n        filters={filters} pagination={pagination} onFilterChange={onFilterChange} onPaginationChange={onPaginationChange}\n        ven={ven}\n                onVenSuggestionsFetchRequested={onVenSuggestionsFetchRequested}\n                onVenSuggestionsClearRequested={onVenSuggestionsClearRequested}\n                onVenSuggestionsSelect={onVenSuggestionsSelect}/>\n        <Divider style={ { marginBottom: '20px', marginTop: '20px' } } />\n        <BigCalendar style={{height:600}}\n          localizer={localizer}\n          events={calendarEvent}\n          defaultView={this.props.view}\n          defaultDate={this.props.currentDate}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          eventPropGetter={this.getEventPropGetter}\n          onSelectEvent={this.handleSelectEvent}\n          views={{ month: EventCalendarMonthView, week: EventCalendarWeekView , day: EventCalendarDayView, agenda:EventCalendarAgendaView}}\n          onNavigate={(date) => {\n            that.props.onCurrentDateChange(date);\n          }}\n          onView={(view) => {\n            that.props.onViewChange(view)\n            }\n          }\n        />\n\n        {(this.state.selectedEvent) ? <EventCalendarDialog classes={classes} title={(this.state.selectedEvent) ? this.state.selectedEvent.title : \"\"}\n        event={this.state.selectedEvent}\n        open={this.state.eventCalendarDialog}\n        close={this.handleEventCalendarDialogClose}\n        handleEventDetailClick={this.handleEventDetailClick(this.state.selectedEvent.id)}/> : null}\n     \n      </div>\n    );\n  }\n}\n\nexport default EventCalendar;\n"]},"metadata":{},"sourceType":"module"}