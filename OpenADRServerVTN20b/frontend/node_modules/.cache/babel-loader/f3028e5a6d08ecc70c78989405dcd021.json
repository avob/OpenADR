{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport objectAssign from 'object-assign';\nimport initialState from './initialState'; // IMPORTANT: Note that with Redux, state should NEVER be changed.\n// State is considered immutable. Instead,\n// create a copy of the state passed and set new values on the copy.\n// Note that I'm using Object.assign to create a copy of current state\n// and update values on the copy.\n\nexport default function venReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.ven;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newState;\n\n  switch (action.type) {\n    // VENS\n    case types.LOAD_VEN:\n      return state;\n\n    case types.LOAD_VEN_SUCCESS:\n      newState = objectAssign({}, state, {\n        ven: action.payload\n      });\n      return newState;\n\n    case types.LOAD_VEN_ERROR:\n      return state;\n\n    case types.SEARCH_VEN:\n      return state;\n\n    case types.SEARCH_VEN_SUCCESS:\n      newState = objectAssign({}, state, {\n        ven: action.payload\n      });\n      return newState;\n\n    case types.SEARCH_VEN_ERROR:\n      return state;\n\n    case types.LOAD_VEN_MARKET_CONTEXT_SUCCESS:\n      newState = objectAssign({}, state, {\n        marketContext: action.payload\n      });\n      return newState;\n\n    case types.LOAD_VEN_MARKET_CONTEXT_ERROR:\n      return state;\n    // MARKET CONTEXT\n\n    case types.LOAD_MARKET_CONTEXT:\n      return state;\n\n    case types.LOAD_MARKET_CONTEXT_SUCCESS:\n      newState = objectAssign({}, state, {\n        marketContext: action.payload\n      });\n      return newState;\n\n    case types.LOAD_MARKET_CONTEXT_ERROR:\n      return state;\n    // GROUPS\n\n    case types.LOAD_GROUP:\n      return state;\n\n    case types.LOAD_GROUP_SUCCESS:\n      newState = objectAssign({}, state, {\n        group: action.payload\n      });\n      return newState;\n\n    case types.LOAD_GROUP_ERROR:\n      return state;\n    // EVENTS\n\n    case types.SEARCH_EVENT:\n      return state;\n\n    case types.SEARCH_EVENT_SUCCESS:\n      newState = objectAssign({}, state, {\n        event: action.payload\n      });\n      return newState;\n\n    case types.SEARCH_EVENT_ERROR:\n      return state;\n\n    case types.LOCATION_CHANGE:\n      return initialState.ven;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/reducers/venReducer.js"],"names":["types","objectAssign","initialState","venReducer","state","ven","action","newState","type","LOAD_VEN","LOAD_VEN_SUCCESS","payload","LOAD_VEN_ERROR","SEARCH_VEN","SEARCH_VEN_SUCCESS","SEARCH_VEN_ERROR","LOAD_VEN_MARKET_CONTEXT_SUCCESS","marketContext","LOAD_VEN_MARKET_CONTEXT_ERROR","LOAD_MARKET_CONTEXT","LOAD_MARKET_CONTEXT_SUCCESS","LOAD_MARKET_CONTEXT_ERROR","LOAD_GROUP","LOAD_GROUP_SUCCESS","group","LOAD_GROUP_ERROR","SEARCH_EVENT","SEARCH_EVENT_SUCCESS","event","SEARCH_EVENT_ERROR","LOCATION_CHANGE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,UAAT,GAAwD;AAAA,MAAnCC,KAAmC,uEAA3BF,YAAY,CAACG,GAAc;AAAA,MAATC,MAAS;AACrE,MAAIC,QAAJ;;AAEA,UAAQD,MAAM,CAACE,IAAf;AAEE;AACA,SAAKR,KAAK,CAACS,QAAX;AACE,aAAOL,KAAP;;AAEF,SAAKJ,KAAK,CAACU,gBAAX;AACEH,MAAAA,QAAQ,GAAGN,YAAY,CAAE,EAAF,EAAMG,KAAN,EAAa;AAClCC,QAAAA,GAAG,EAAEC,MAAM,CAACK;AADsB,OAAb,CAAvB;AAGA,aAAOJ,QAAP;;AAEF,SAAKP,KAAK,CAACY,cAAX;AACE,aAAOR,KAAP;;AAEF,SAAKJ,KAAK,CAACa,UAAX;AACE,aAAOT,KAAP;;AAEF,SAAKJ,KAAK,CAACc,kBAAX;AACEP,MAAAA,QAAQ,GAAGN,YAAY,CAAE,EAAF,EAAMG,KAAN,EAAa;AAClCC,QAAAA,GAAG,EAAEC,MAAM,CAACK;AADsB,OAAb,CAAvB;AAGA,aAAOJ,QAAP;;AAEF,SAAKP,KAAK,CAACe,gBAAX;AACE,aAAOX,KAAP;;AAIF,SAAKJ,KAAK,CAACgB,+BAAX;AACET,MAAAA,QAAQ,GAAGN,YAAY,CAAE,EAAF,EAAMG,KAAN,EAAa;AAClCa,QAAAA,aAAa,EAAEX,MAAM,CAACK;AADY,OAAb,CAAvB;AAGA,aAAOJ,QAAP;;AAEF,SAAKP,KAAK,CAACkB,6BAAX;AACE,aAAOd,KAAP;AAEA;;AACF,SAAKJ,KAAK,CAACmB,mBAAX;AACE,aAAOf,KAAP;;AAEF,SAAKJ,KAAK,CAACoB,2BAAX;AACEb,MAAAA,QAAQ,GAAGN,YAAY,CAAE,EAAF,EAAMG,KAAN,EAAa;AAClCa,QAAAA,aAAa,EAAEX,MAAM,CAACK;AADY,OAAb,CAAvB;AAGA,aAAOJ,QAAP;;AAEF,SAAKP,KAAK,CAACqB,yBAAX;AACE,aAAOjB,KAAP;AAED;;AACD,SAAKJ,KAAK,CAACsB,UAAX;AACE,aAAOlB,KAAP;;AAEF,SAAKJ,KAAK,CAACuB,kBAAX;AACEhB,MAAAA,QAAQ,GAAGN,YAAY,CAAE,EAAF,EAAMG,KAAN,EAAa;AAClCoB,QAAAA,KAAK,EAAElB,MAAM,CAACK;AADoB,OAAb,CAAvB;AAGA,aAAOJ,QAAP;;AAEF,SAAKP,KAAK,CAACyB,gBAAX;AACE,aAAOrB,KAAP;AAEF;;AACC,SAAKJ,KAAK,CAAC0B,YAAX;AACC,aAAOtB,KAAP;;AAEF,SAAKJ,KAAK,CAAC2B,oBAAX;AACEpB,MAAAA,QAAQ,GAAGN,YAAY,CAAE,EAAF,EAAMG,KAAN,EAAa;AAClCwB,QAAAA,KAAK,EAAEtB,MAAM,CAACK;AADoB,OAAb,CAAvB;AAGA,aAAOJ,QAAP;;AAEF,SAAKP,KAAK,CAAC6B,kBAAX;AACE,aAAOzB,KAAP;;AAEF,SAAKJ,KAAK,CAAC8B,eAAX;AACE,aAAO5B,YAAY,CAACG,GAApB;;AAEF;AACE,aAAOD,KAAP;AAjFJ;AAmFD","sourcesContent":["import * as types from '../constants/actionTypes';\nimport objectAssign from 'object-assign';\nimport initialState from './initialState';\n\n// IMPORTANT: Note that with Redux, state should NEVER be changed.\n// State is considered immutable. Instead,\n// create a copy of the state passed and set new values on the copy.\n// Note that I'm using Object.assign to create a copy of current state\n// and update values on the copy.\nexport default function venReducer( state = initialState.ven, action ) {\n  let newState;\n\n  switch (action.type) {\n\n    // VENS\n    case types.LOAD_VEN:\n      return state;\n\n    case types.LOAD_VEN_SUCCESS:\n      newState = objectAssign( {}, state, {\n        ven: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_VEN_ERROR:\n      return state;\n\n    case types.SEARCH_VEN:\n      return state;\n\n    case types.SEARCH_VEN_SUCCESS:\n      newState = objectAssign( {}, state, {\n        ven: action.payload\n      } );\n      return newState;\n\n    case types.SEARCH_VEN_ERROR:\n      return state;\n\n      \n\n    case types.LOAD_VEN_MARKET_CONTEXT_SUCCESS:\n      newState = objectAssign( {}, state, {\n        marketContext: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_VEN_MARKET_CONTEXT_ERROR:\n      return state;\n      \n      // MARKET CONTEXT\n    case types.LOAD_MARKET_CONTEXT:\n      return state;\n\n    case types.LOAD_MARKET_CONTEXT_SUCCESS:\n      newState = objectAssign( {}, state, {\n        marketContext: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_MARKET_CONTEXT_ERROR:\n      return state;\n\n     // GROUPS\n    case types.LOAD_GROUP:\n      return state;\n\n    case types.LOAD_GROUP_SUCCESS:\n      newState = objectAssign( {}, state, {\n        group: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_GROUP_ERROR:\n      return state;\n\n    // EVENTS\n     case types.SEARCH_EVENT:\n      return state;\n\n    case types.SEARCH_EVENT_SUCCESS:\n      newState = objectAssign( {}, state, {\n        event: action.payload\n      } );\n      return newState;\n\n    case types.SEARCH_EVENT_ERROR:\n      return state;\n\n    case types.LOCATION_CHANGE:\n      return initialState.ven;\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}