{"ast":null,"code":"import _classCallCheck from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/UserCreateConfirmationFormPanel.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Divider from '@material-ui/core/Divider';\nexport var UserCreateConfirmationFormPanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserCreateConfirmationFormPanel, _React$Component);\n\n  function UserCreateConfirmationFormPanel(props) {\n    _classCallCheck(this, UserCreateConfirmationFormPanel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserCreateConfirmationFormPanel).call(this, props));\n  }\n\n  _createClass(UserCreateConfirmationFormPanel, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          identification = _this$props.identification,\n          authentication = _this$props.authentication,\n          roles = _this$props.roles,\n          type = _this$props.type;\n\n      var WarningSnackbar = function WarningSnackbar(props) {\n        return React.createElement(SnackbarContent, {\n          className: classes.warning,\n          style: {\n            maxWidth: 'none'\n          },\n          message: React.createElement(\"span\", {\n            id: \"client-snackbar\",\n            className: classes.message,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(WarningIcon, {\n            style: {\n              width: 40,\n              height: 40,\n              marginRight: 60\n            },\n            className: classNames(classes.icon, classes.iconVariant),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }), \" \", props.message),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      };\n\n      var username = authentication.username;\n      var noGenerateCertificateWarningView = null;\n      var generateCertificateWarningView = null;\n      var authenticationTypeWarningView = null;\n\n      if (identification.needCertificateGeneration != \"no\") {\n        authenticationTypeWarningView = React.createElement(Grid, {\n          container: true,\n          spacing: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(WarningSnackbar, {\n          message: React.createElement(Typography, {\n            gutterBottom: true,\n            style: {\n              color: 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"Authentication using login / password is required.\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }), \" Username is used as user/app login\")),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n        username = '<generated>';\n        generateCertificateWarningView = React.createElement(Grid, {\n          container: true,\n          spacing: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(WarningSnackbar, {\n          message: React.createElement(Typography, {\n            gutterBottom: true,\n            style: {\n              color: 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, \"Certificate will be generated and can only be downloaded at the end of this form.\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }), \" Certificate can't be regenerated.\")),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      } else {\n        authenticationTypeWarningView = React.createElement(Grid, {\n          container: true,\n          spacing: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(WarningSnackbar, {\n          message: React.createElement(Typography, {\n            gutterBottom: true,\n            style: {\n              color: 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, \"Authentication using x509 client certificate is required.\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }))),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }));\n        noGenerateCertificateWarningView = React.createElement(Grid, {\n          container: true,\n          spacing: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(Grid, {\n          item: true,\n          xs: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(WarningSnackbar, {\n          message: React.createElement(Typography, {\n            gutterBottom: true,\n            style: {\n              color: 'white'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, \"Certificate won't be generated.\", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }), \" Provided username MUST match with user/app certificate fingerprint\")),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Authentication\",\n        value: authentication.authenticationType,\n        className: classes.textField,\n        margin: \"dense\",\n        variant: \"outlined\",\n        InputProps: {\n          readOnly: true\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Common Name\",\n        value: identification.commonName,\n        className: classes.textField,\n        margin: \"dense\",\n        variant: \"outlined\",\n        InputProps: {\n          readOnly: true\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Username\",\n        value: username,\n        className: classes.textField,\n        margin: \"dense\",\n        variant: \"outlined\",\n        InputProps: {\n          readOnly: true\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Roles\",\n        value: roles,\n        className: classes.textField,\n        margin: \"dense\",\n        variant: \"outlined\",\n        InputProps: {\n          readOnly: true\n        },\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), authenticationTypeWarningView, React.createElement(Grid, {\n        container: true,\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), noGenerateCertificateWarningView, generateCertificateWarningView));\n    }\n  }]);\n\n  return UserCreateConfirmationFormPanel;\n}(React.Component);\nexport default UserCreateConfirmationFormPanel;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/UserCreateConfirmationFormPanel.js"],"names":["React","withStyles","classNames","Typography","FormControl","FormLabel","FormGroup","TextField","ExtensionIcon","Grid","InputAdornment","InputLabel","MenuItem","FormHelperText","Select","Snackbar","SnackbarContent","WarningIcon","Divider","UserCreateConfirmationFormPanel","props","classes","identification","authentication","roles","type","WarningSnackbar","warning","maxWidth","message","width","height","marginRight","icon","iconVariant","username","noGenerateCertificateWarningView","generateCertificateWarningView","authenticationTypeWarningView","needCertificateGeneration","color","authenticationType","textField","readOnly","commonName","marginTop","marginBottom","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport ExtensionIcon from '@material-ui/icons/Extension';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport Divider from '@material-ui/core/Divider';\n\n\n\nexport class UserCreateConfirmationFormPanel extends React.Component {\n\n  constructor( props ) {\n    super( props );\n  }\n\n\n  render() {\n    const {classes, identification, authentication, roles, type} = this.props;\n\n\n\n    var WarningSnackbar = (props) => {\n      return (\n      <SnackbarContent className={ classes.warning }\n                       style={ { maxWidth: 'none' } }\n                       message={ <span id=\"client-snackbar\" className={ classes.message }><WarningIcon style={ { width: 40, height: 40, marginRight: 60 } }className={ classNames( classes.icon, classes.iconVariant ) }/> { props.message }</span> } />\n      );\n    }\n    var username = authentication.username;\n    var noGenerateCertificateWarningView = null;\n    var generateCertificateWarningView = null;\n    var authenticationTypeWarningView = null;\n    if ( identification.needCertificateGeneration != \"no\" ) {\n      authenticationTypeWarningView = <Grid container spacing={ 24 }>\n                                        <Grid item xs={ 3 } />\n                                        <Grid item xs={ 6 }>\n                                          <WarningSnackbar message={ <Typography gutterBottom style={ { color: 'white' } }>\n                                                                       <strong>Authentication using login / password is required.<br/> Username is used as user/app login</strong>\n                                                                     </Typography> } />\n                                        </Grid>\n                                        <Grid item xs={ 3 } />\n                                      </Grid>\n      username = '<generated>'\n       generateCertificateWarningView = <Grid container spacing={ 24 }>\n                                         <Grid item xs={ 3 } />\n                                         <Grid item xs={ 6 }>\n                                           <WarningSnackbar message={ <Typography gutterBottom style={ { color: 'white' } }>\n                                                                        <strong>Certificate will be generated and can only be downloaded at the end of this form.<br/> Certificate can't be regenerated.</strong>\n                                                                      </Typography> } />\n                                         </Grid>\n                                         <Grid item xs={ 3 } />\n                                       </Grid>\n\n    } else {\n      authenticationTypeWarningView = <Grid container spacing={ 24 }>\n                                        <Grid item xs={ 3 } />\n                                        <Grid item xs={ 6 }>\n                                          <WarningSnackbar message={ <Typography gutterBottom style={ { color: 'white' } }>\n                                                                       <strong>Authentication using x509 client certificate is required.<br/></strong>\n                                                                     </Typography> } />\n                                        </Grid>\n                                        <Grid item xs={ 3 } />\n                                      </Grid>\n\n      noGenerateCertificateWarningView = <Grid container spacing={ 24 }>\n                                           <Grid item xs={ 3 } />\n                                           <Grid item xs={ 6 }>\n                                             <WarningSnackbar message={ <Typography gutterBottom style={ { color: 'white' } }>\n                                                                          <strong>Certificate won't be generated.<br/> Provided username MUST match with user/app certificate fingerprint</strong>\n                                                                        </Typography> } />\n                                           </Grid>\n                                           <Grid item xs={ 3 } />\n                                         </Grid>\n    }\n\n    return (\n\n    <div>\n      <Grid container\n            spacing={ 8 }\n            justify=\"center\">\n        <Grid container spacing={ 24 }>\n          <Grid item xs={ 2 } />\n          <Grid item xs={ 1 }>\n           \n          </Grid>\n          <Grid item xs={ 1 }>\n            <TextField label=\"Authentication\"\n                       value={ authentication.authenticationType }\n                       className={ classes.textField }\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       InputProps={ { readOnly: true } }\n                       fullWidth={ true } />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <TextField label=\"Common Name\"\n                       value={ identification.commonName }\n                       className={ classes.textField }\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       InputProps={ { readOnly: true } }\n                       fullWidth={ true } />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <TextField label=\"Username\"\n                       value={ username }\n                       className={ classes.textField }\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       InputProps={ { readOnly: true } }\n                       fullWidth={ true } />\n          </Grid>\n          <Grid item xs={ 2 } />\n        </Grid>\n        <Grid container\n              style={ { marginTop: 20, marginBottom: 20 } }\n              spacing={ 24 }>\n          <Grid item xs={ 2 } />\n          <Grid item xs={ 8 }>\n            <Divider />\n          </Grid>\n          <Grid item xs={ 2 } />\n        </Grid>\n        <Grid container\n              style={ { marginTop: 20, marginBottom: 20 } }\n              spacing={ 24 }>\n          <Grid item xs={ 2 } />\n          <Grid item xs={ 8 }>\n            <TextField label=\"Roles\"\n                       value={ roles }\n                       className={ classes.textField }\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       InputProps={ { readOnly: true } }\n                       fullWidth={ true } />\n          </Grid>\n          <Grid item xs={ 2 } />\n        </Grid>\n        <Grid container\n              style={ { marginTop: 20, marginBottom: 20 } }\n              spacing={ 24 }>\n          <Grid item xs={ 2 } />\n          <Grid item xs={ 8 }>\n            <Divider />\n          </Grid>\n          <Grid item xs={ 2 } />\n        </Grid>\n        { authenticationTypeWarningView }\n        <Grid container\n              style={ { marginTop: 20, marginBottom: 20 } }\n              spacing={ 24 }>\n          <Grid item xs={ 2 } />\n          <Grid item xs={ 8 }>\n            <Divider />\n          </Grid>\n          <Grid item xs={ 2 } />\n        </Grid>\n        { noGenerateCertificateWarningView }\n        { generateCertificateWarningView }\n      </Grid>\n    </div>\n    );\n  }\n}\n\nexport default UserCreateConfirmationFormPanel;\n"]},"metadata":{},"sourceType":"module"}