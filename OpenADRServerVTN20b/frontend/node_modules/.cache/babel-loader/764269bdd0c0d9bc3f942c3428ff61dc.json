{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _Paper = _interopRequireDefault(require(\"../Paper\"));\n\nvar _StepConnector = _interopRequireDefault(require(\"../StepConnector\")); // @inheritedComponent Paper\n\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nexports.styles = styles;\n\nfunction Stepper(props) {\n  var activeStep = props.activeStep,\n      alternativeLabel = props.alternativeLabel,\n      children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      connectorProp = props.connector,\n      nonLinear = props.nonLinear,\n      orientation = props.orientation,\n      other = (0, _objectWithoutProperties2.default)(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n  var className = (0, _classnames.default)(classes.root, classes[orientation], (0, _defineProperty2.default)({}, classes.alternativeLabel, alternativeLabel), classNameProp);\n  var connector = _react.default.isValidElement(connectorProp) ? _react.default.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n\n  var childrenArray = _react.default.Children.toArray(children);\n\n  var steps = childrenArray.map(function (step, index) {\n    var controlProps = {\n      alternativeLabel: alternativeLabel,\n      connector: connectorProp,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    };\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return [!alternativeLabel && connector && index !== 0 && _react.default.cloneElement(connector, (0, _extends2.default)({\n      key: index\n    }, state)), _react.default.cloneElement(step, (0, _extends2.default)({}, controlProps, state, step.props))];\n  });\n  return _react.default.createElement(_Paper.default, (0, _extends2.default)({\n    square: true,\n    elevation: 0,\n    className: className\n  }, other), steps);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  /**\n   * Set the active step (zero based index).\n   */\n  activeStep: _propTypes.default.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: _propTypes.default.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * A component to be placed between each step.\n   */\n  connector: _propTypes.default.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: _propTypes.default.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: _propTypes.default.oneOf(['horizontal', 'vertical'])\n} : void 0;\nStepper.defaultProps = {\n  activeStep: 0,\n  alternativeLabel: false,\n  connector: _react.default.createElement(_StepConnector.default, null),\n  nonLinear: false,\n  orientation: 'horizontal'\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiStepper'\n})(Stepper);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}