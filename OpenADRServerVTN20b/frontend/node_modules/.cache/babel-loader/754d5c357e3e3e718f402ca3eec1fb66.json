{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport { history } from '../store/configureStore';\nimport { swaggerAction, jsonResponseContentType, multipartResponseContentType, saveData, parseJsonData } from './apiUtils';\nexport var loadLoginUser = function loadLoginUser(username) {\n  return swaggerAction(types.LOGIN_USER, function (api) {\n    return api.apis['account-controller'].registeredUserUsingGET(jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var loadAccountUser = function loadAccountUser() {\n  return swaggerAction(types.LOAD_ACCOUNT_USER, function (api) {\n    return api.apis['account-controller'].listUserUsingGET(jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var createUser = function createUser(user) {\n  return swaggerAction(types.CREATE_USER, function (api) {\n    var params = {\n      dto: user\n    };\n    return api.apis['account-controller'].createUserUsingPOST(params, multipartResponseContentType);\n  }, function (data) {\n    saveData(data.data, user.commonName + '-credentials.tar');\n    history.push(\"/account/user\");\n  });\n};\nexport var deleteUser = function deleteUser(username) {\n  return swaggerAction(types.DELETE_USER, function (api) {\n    var params = {\n      username: username\n    };\n    return api.apis['account-controller'].deleteUserUsingDELETE(params, jsonResponseContentType);\n  }, function () {\n    history.push(\"/account/user\");\n  }, function (dispatch, getState) {\n    loadAccountUser()(dispatch, getState);\n  });\n};\nexport var loadAccountApp = function loadAccountApp() {\n  return swaggerAction(types.LOAD_ACCOUNT_APP, function (api) {\n    return api.apis['account-controller'].listAppUsingGET(jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var createApp = function createApp(app) {\n  return swaggerAction(types.CREATE_APP, function (api) {\n    var params = {\n      dto: app\n    };\n    return api.apis['account-controller'].createAppUsingPOST(params, multipartResponseContentType);\n  }, function (data) {\n    saveData(data.data, app.commonName + '-credentials.tar');\n    history.push(\"/account/app\");\n  });\n};\nexport var deleteApp = function deleteApp(username) {\n  return swaggerAction(types.DELETE_APP, function (api) {\n    var params = {\n      username: username\n    };\n    return api.apis['account-controller'].deleteAppUsingDELETE(params, jsonResponseContentType);\n  }, function () {\n    history.push(\"/account/app\");\n  }, function (dispatch, getState) {\n    loadAccountApp()(dispatch, getState);\n  });\n};","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/actions/accountActions.js"],"names":["types","history","swaggerAction","jsonResponseContentType","multipartResponseContentType","saveData","parseJsonData","loadLoginUser","username","LOGIN_USER","api","apis","registeredUserUsingGET","loadAccountUser","LOAD_ACCOUNT_USER","listUserUsingGET","createUser","user","CREATE_USER","params","dto","createUserUsingPOST","data","commonName","push","deleteUser","DELETE_USER","deleteUserUsingDELETE","dispatch","getState","loadAccountApp","LOAD_ACCOUNT_APP","listAppUsingGET","createApp","app","CREATE_APP","createAppUsingPOST","deleteApp","DELETE_APP","deleteAppUsingDELETE"],"mappings":"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","sourcesContent":["import * as types from '../constants/actionTypes';\nimport { history } from '../store/configureStore';\n\nimport { swaggerAction, jsonResponseContentType, multipartResponseContentType, saveData, parseJsonData } from './apiUtils';\n\nexport const loadLoginUser = (username) => {\n  return swaggerAction(types.LOGIN_USER, \n    (api) => {\n      return api.apis[ 'account-controller' ].registeredUserUsingGET(jsonResponseContentType);\n    }, \n    parseJsonData\n  );\n}\n\nexport const loadAccountUser = () => {\n  return swaggerAction(types.LOAD_ACCOUNT_USER, \n    (api) => {\n      return api.apis[ 'account-controller' ].listUserUsingGET(jsonResponseContentType);\n    }, \n    parseJsonData\n  );\n}\n\nexport const createUser = (user) => {\n  return swaggerAction(types.CREATE_USER, \n    (api) => {\n      var params = { dto: user };\n      return api.apis[ 'account-controller' ].createUserUsingPOST(params, multipartResponseContentType);\n    },\n    (data) => { saveData( data.data, user.commonName + '-credentials.tar' ); history.push(\"/account/user\") }\n  );\n}\n\nexport const deleteUser = (username) => {\n  return swaggerAction(types.DELETE_USER, \n    (api) => {\n      var params = { username: username };\n      return  api.apis[ 'account-controller' ].deleteUserUsingDELETE(params, jsonResponseContentType);\n    },\n    () => { history.push(\"/account/user\");  },\n    (dispatch, getState) => { loadAccountUser()(dispatch, getState) }\n  );\n}\n\nexport const loadAccountApp = () => {\n  return swaggerAction(types.LOAD_ACCOUNT_APP, \n    (api) => {\n      return api.apis[ 'account-controller' ].listAppUsingGET(jsonResponseContentType);\n    }, \n    parseJsonData\n  );\n}\n\nexport const createApp = (app) => {\n  return swaggerAction(types.CREATE_APP, \n    (api) => {\n      var params = { dto: app };\n      return api.apis[ 'account-controller' ].createAppUsingPOST(params, multipartResponseContentType);\n    },\n    (data) => { saveData( data.data, app.commonName + '-credentials.tar' ); history.push(\"/account/app\") }\n  );\n}\n\nexport const deleteApp = (username) => {\n  return swaggerAction(types.DELETE_APP, \n    (api) => {\n      var params = { username: username };\n      return  api.apis[ 'account-controller' ].deleteAppUsingDELETE(params, jsonResponseContentType);\n    },\n    () => { history.push(\"/account/app\");  },\n    (dispatch, getState) => { loadAccountApp()(dispatch, getState) }\n  );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}