{"ast":null,"code":"var _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/UserCreateIdentificationSSLCertificatePanel.js\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nvar labelStyle = {\n  boxSizing: 'border-box',\n  color: 'rgba(0, 0, 0, 0.54)',\n  fontSize: '1rem',\n  fontWeight: 400,\n  lineHeight: 1,\n  transition: 'color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms',\n  transform: 'translate(0, 1.5px) scale(0.75)',\n  transformOrigin: 'top left',\n  top: 0,\n  left: 0\n};\nexport var UserCreateIdentificationSSLCertificatePanel = function UserCreateIdentificationSSLCertificatePanel(props) {\n  var classes = props.classes,\n      identification = props.identification,\n      vtnConfiguration = props.vtnConfiguration;\n\n  var handleNeedCertificateGenerationChange = function handleNeedCertificateGenerationChange(e) {\n    var identification = props.identification;\n    identification.needCertificateGeneration = e.target.value;\n    props.onChange(identification);\n  };\n\n  var generateOptionView = null;\n\n  if (vtnConfiguration && vtnConfiguration.supportCertificateGeneration) {\n    generateOptionView = [React.createElement(FormControlLabel, {\n      key: \"generate_rsa_radio\",\n      value: \"rsa\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }),\n      label: \"Generate RSA certificate\",\n      labelPlacement: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      key: \"generate_ecc_radio\",\n      value: \"ecc\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }),\n      label: \"Generate ECC certificate\",\n      labelPlacement: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })];\n  }\n\n  return React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    style: labelStyle,\n    component: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"SSL Certificate\"), React.createElement(RadioGroup, {\n    \"aria-label\": \"position\",\n    name: \"position\",\n    value: identification.needCertificateGeneration,\n    onChange: handleNeedCertificateGenerationChange,\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"no\",\n    style: {\n      marginLeft: 0\n    },\n    control: React.createElement(Radio, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }),\n    label: \"Provide Username\",\n    labelPlacement: \"end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), generateOptionView));\n};\nexport default UserCreateIdentificationSSLCertificatePanel;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/UserCreateIdentificationSSLCertificatePanel.js"],"names":["React","FormControl","FormLabel","FormControlLabel","Radio","RadioGroup","labelStyle","boxSizing","color","fontSize","fontWeight","lineHeight","transition","transform","transformOrigin","top","left","UserCreateIdentificationSSLCertificatePanel","props","classes","identification","vtnConfiguration","handleNeedCertificateGenerationChange","e","needCertificateGeneration","target","value","onChange","generateOptionView","supportCertificateGeneration","formControl","marginLeft"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\n\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n\n\nconst labelStyle = {\n\n  boxSizing: 'border-box',\n  color: 'rgba(0, 0, 0, 0.54)',\n  fontSize: '1rem',\n  fontWeight: 400,\n\n  lineHeight: 1,\n  transition: 'color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms',\n  transform: 'translate(0, 1.5px) scale(0.75)',\n  transformOrigin: 'top left',\n  top: 0,\n  left: 0,\n}\n\nexport var UserCreateIdentificationSSLCertificatePanel = (props) => {\n  const {classes, identification, vtnConfiguration} = props;\n\n  var handleNeedCertificateGenerationChange = (e) => {\n    var identification = props.identification;\n    identification.needCertificateGeneration = e.target.value;\n    props.onChange(identification);\n  };\n\n    var generateOptionView = null;\n    if ( vtnConfiguration && vtnConfiguration.supportCertificateGeneration ) {\n      generateOptionView = [\n        <FormControlLabel key=\"generate_rsa_radio\"\n                          value=\"rsa\"\n                          control={ <Radio color=\"primary\" /> }\n                          label=\"Generate RSA certificate\"\n                          labelPlacement=\"end\" />,\n        <FormControlLabel key=\"generate_ecc_radio\"\n                          value=\"ecc\"\n                          control={ <Radio color=\"primary\" /> }\n                          label=\"Generate ECC certificate\"\n                          labelPlacement=\"end\" />\n      ]\n    }\n\n    return (\n\n    <FormControl className={ classes.formControl }>\n        <FormLabel style={ labelStyle } component=\"label\">\n          SSL Certificate\n        </FormLabel>\n        <RadioGroup aria-label=\"position\"\n                    name=\"position\"\n                    value={ identification.needCertificateGeneration }\n                    onChange={ handleNeedCertificateGenerationChange }\n                    row>\n          <FormControlLabel value=\"no\"\n                            style={ { marginLeft: 0 } }\n                            control={ <Radio color=\"primary\" /> }\n                            label=\"Provide Username\"\n                            labelPlacement=\"end\" />\n          { generateOptionView }\n        </RadioGroup>\n      </FormControl>\n    );\n} \n\nexport default UserCreateIdentificationSSLCertificatePanel;"]},"metadata":{},"sourceType":"module"}