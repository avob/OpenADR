{"ast":null,"code":"import _classCallCheck from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/Event/EventCalendarView/EventCalendarDayView.js\";\nimport React from 'react';\nimport BigCalendar from 'react-big-calendar';\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid';\nimport Week from 'react-big-calendar/lib/Week';\nimport moment from 'moment';\n\nvar EventCalendarDayView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventCalendarDayView, _React$Component);\n\n  function EventCalendarDayView() {\n    _classCallCheck(this, EventCalendarDayView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EventCalendarDayView).apply(this, arguments));\n  }\n\n  _createClass(EventCalendarDayView, [{\n    key: \"render\",\n    value: function render() {\n      var date = this.props.date;\n      var range = EventCalendarDayView.range(date);\n      return React.createElement(TimeGrid, Object.assign({}, this.props, {\n        range: range,\n        eventOffset: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EventCalendarDayView;\n}(React.Component); // var getRange = (date) => {\n//     return {\n//       start:start.toDate(),\n//       end:end.toDate()\n//     }\n// }\n\n\nEventCalendarDayView.range = function (date) {\n  return [moment(date).startOf('day').toDate()];\n};\n\nEventCalendarDayView.navigate = function (date, action) {\n  var d = moment(new Date(date));\n\n  switch (action) {\n    case BigCalendar.Navigate.PREVIOUS:\n      d.add(-1, 'day');\n      return d.toDate();\n\n    case BigCalendar.Navigate.NEXT:\n      d.add(1, 'day');\n      return d.toDate();\n\n    case BigCalendar.Navigate.TODAY:\n      date = new Date();\n      return date;\n\n    default:\n      return date;\n  }\n};\n\nEventCalendarDayView.title = function (date) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, moment(date).format(\"dddd MMM DD\")), React.createElement(\"span\", {\n    className: \"rbc-btn-group\",\n    style: {\n      float: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: EventCalendarDayView.color === \"status\" ? \"rbc-active\" : \"\",\n    onClick: function onClick(e) {\n      EventCalendarDayView.onColorChange(\"status\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Color Status\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: EventCalendarDayView.color === \"market\" ? \"rbc-active\" : \"\",\n    onClick: function onClick(e) {\n      EventCalendarDayView.onColorChange(\"market\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Color Market\")));\n};\n\nexport default EventCalendarDayView;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/Event/EventCalendarView/EventCalendarDayView.js"],"names":["React","BigCalendar","TimeGrid","Week","moment","EventCalendarDayView","date","props","range","Component","startOf","toDate","navigate","action","d","Date","Navigate","PREVIOUS","add","NEXT","TODAY","title","paddingTop","format","float","color","e","onColorChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BigCalendar from 'react-big-calendar'\n\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid'\nimport Week from 'react-big-calendar/lib/Week'\nimport moment from 'moment'\n\n\nclass EventCalendarDayView extends React.Component {\n  render() {\n    let { date } = this.props\n    let range = EventCalendarDayView.range(date)\n\n    return <TimeGrid {...this.props} range={range} eventOffset={10} />\n  }\n}\n\n// var getRange = (date) => {\n   \n//     return {\n//       start:start.toDate(),\n//       end:end.toDate()\n//     }\n\n// }\n\nEventCalendarDayView.range = date => {\n  return [moment(date).startOf('day').toDate()];\n}\n\nEventCalendarDayView.navigate = (date, action) => {\n  let d = moment(new Date(date));\n  switch (action) {\n    case BigCalendar.Navigate.PREVIOUS:\n      d.add(-1, 'day')\n      return d.toDate();\n\n    case BigCalendar.Navigate.NEXT:\n      d.add(1, 'day');\n      return d.toDate();\n\n    case BigCalendar.Navigate.TODAY:\n      date = new Date();     \n      return date;\n\n    default:\n      return date\n  }\n}\n\n\n\nEventCalendarDayView.title = date => {\n  return (\n    <span>\n      <span style={{paddingTop:10}}>{moment(date).format( \"dddd MMM DD\")}</span>\n      <span className=\"rbc-btn-group\" style={{float:\"right\"}} >\n        <button type=\"button\" className={(EventCalendarDayView.color === \"status\") ? \"rbc-active\" : \"\"} onClick={(e) => {EventCalendarDayView.onColorChange(\"status\")}}>Color Status</button>\n        <button type=\"button\" className={(EventCalendarDayView.color  === \"market\") ? \"rbc-active\" : \"\"} onClick={(e) => {EventCalendarDayView.onColorChange(\"market\")}}>Color Market</button>\n      </span>  \n    </span>\n    );\n}\n\nexport default EventCalendarDayView;"]},"metadata":{},"sourceType":"module"}