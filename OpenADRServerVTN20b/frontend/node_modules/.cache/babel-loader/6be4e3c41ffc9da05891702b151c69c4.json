{"ast":null,"code":"import _classCallCheck from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/EventDetail/EventDetailHeader.js\";\nimport React from 'react';\nimport { VtnConfigurationEventCard } from '../common/VtnConfigurationCard';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\nimport amber from '@material-ui/core/colors/amber';\nexport var EventDetailHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventDetailHeader, _React$Component);\n\n  function EventDetailHeader(props) {\n    var _this;\n\n    _classCallCheck(this, EventDetailHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventDetailHeader).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(EventDetailHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          event = _this$props.event;\n\n      var SuccessSnackbar = function SuccessSnackbar(props) {\n        return React.createElement(SnackbarContent, {\n          className: classes.success,\n          style: {\n            maxWidth: 'none',\n            paddingTop: 0,\n            paddingBottom: 0\n          },\n          message: React.createElement(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(DoneIcon, {\n            style: {\n              width: 20,\n              height: 20,\n              marginRight: 20,\n              color: \"#fff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          })), React.createElement(Grid, {\n            item: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, props.message)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      };\n\n      var ErrorSnackbar = function ErrorSnackbar(props) {\n        return React.createElement(SnackbarContent, {\n          className: classes.error,\n          style: {\n            maxWidth: 'none',\n            paddingTop: 0,\n            paddingBottom: 0\n          },\n          message: React.createElement(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(DoneIcon, {\n            style: {\n              width: 20,\n              height: 20,\n              marginRight: 20,\n              color: \"#fff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          })), React.createElement(Grid, {\n            item: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, props.message)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      };\n\n      var WarningSnackbar = function WarningSnackbar(props) {\n        return React.createElement(SnackbarContent, {\n          className: classes.success,\n          style: {\n            maxWidth: 'none',\n            paddingTop: 0,\n            paddingBottom: 0,\n            backgroundColor: amber[700]\n          },\n          message: React.createElement(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(Grid, {\n            item: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(CloseIcon, {\n            style: {\n              width: 20,\n              height: 20,\n              marginRight: 20,\n              color: \"#fff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          })), React.createElement(Grid, {\n            item: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, props.message)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n      };\n\n      var statePanel = null;\n      var actionPanel = null;\n\n      if (event.published) {\n        if (event.descriptor.state === \"ACTIVE\") {\n          statePanel = React.createElement(SuccessSnackbar, {\n            message: React.createElement(Typography, {\n              component: \"span\",\n              style: {\n                color: \"#fff\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, \"ACTIVE\")),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          });\n        } else if (event.descriptor.state === \"CANCELLED\") {\n          statePanel = React.createElement(ErrorSnackbar, {\n            message: React.createElement(Typography, {\n              component: \"span\",\n              style: {\n                color: \"#fff\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            }, React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            }, \"CANCELLED\")),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          });\n        }\n      } else {\n        statePanel = React.createElement(WarningSnackbar, {\n          message: React.createElement(Typography, {\n            component: \"span\",\n            style: {\n              color: \"#fff\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, event.descriptor.state)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        });\n      }\n\n      actionPanel = this.props.actions;\n      return React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(VtnConfigurationEventCard, {\n        key: 'ven_card_',\n        classes: classes,\n        event: event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        lg: 8,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, statePanel)), actionPanel))));\n    }\n  }]);\n\n  return EventDetailHeader;\n}(React.Component);\nexport default EventDetailHeader;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/EventDetail/EventDetailHeader.js"],"names":["React","VtnConfigurationEventCard","Grid","Typography","SnackbarContent","DoneIcon","CloseIcon","amber","EventDetailHeader","props","state","classes","event","SuccessSnackbar","success","maxWidth","paddingTop","paddingBottom","width","height","marginRight","color","message","ErrorSnackbar","error","WarningSnackbar","backgroundColor","statePanel","actionPanel","published","descriptor","actions","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n\n\n\n\nimport { VtnConfigurationEventCard } from '../common/VtnConfigurationCard'\n\n\n\n\n\n\nimport Grid from '@material-ui/core/Grid';\n\n\nimport Typography from '@material-ui/core/Typography';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport DoneIcon from '@material-ui/icons/Done';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport amber from '@material-ui/core/colors/amber';\n\n\nexport class EventDetailHeader extends React.Component {\n  constructor( props ) {\n    super( props );\n    this.state = {}\n  }\n\n\n  render() {\n    const {classes, event} = this.props;\n\n\n    var SuccessSnackbar = (props) => {\n      return (\n      <SnackbarContent className={ classes.success }\n                       style={ { maxWidth: 'none', paddingTop:0, paddingBottom:0 } }\n                       message={ <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item>\n                              <DoneIcon style={ { width: 20, height: 20, marginRight: 20, color:\"#fff\" } }/>\n                            </Grid>\n                            <Grid item >\n                               { props.message }\n                            </Grid>\n                          </Grid>} />\n      );\n    }\n\n    var ErrorSnackbar = (props) => {\n      return (\n      <SnackbarContent className={ classes.error }\n                       style={ { maxWidth: 'none', paddingTop:0, paddingBottom:0 } }\n                       message={ <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item>\n                              <DoneIcon style={ { width: 20, height: 20, marginRight: 20, color:\"#fff\" } }/>\n                            </Grid>\n                            <Grid item >\n                               { props.message }\n                            </Grid>\n                          </Grid>} />\n      );\n    }\n\n    var WarningSnackbar = (props) => {\n      return (\n      <SnackbarContent className={ classes.success }\n                       style={ { maxWidth: 'none', paddingTop:0, paddingBottom:0, backgroundColor:amber[700] } }\n                       message={ \n                          <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item>\n                              <CloseIcon style={ { width: 20, height: 20, marginRight: 20, color:\"#fff\" } }/>\n                            </Grid>\n                            <Grid item>\n                               { props.message }\n                            </Grid>\n                          </Grid>\n                     } />\n      );\n    }\n\n\n    var statePanel = null;\n    var actionPanel = null;\n\n    if(event.published){\n      if ( event.descriptor.state === \"ACTIVE\") {\n      \n        statePanel = <SuccessSnackbar  message={ <Typography component=\"span\" style={ { color:\"#fff\" } }>\n                                 <strong>ACTIVE</strong>\n                               </Typography> } />\n\n      } else if ( event.descriptor.state === \"CANCELLED\" ) {\n        statePanel = <ErrorSnackbar  message={ <Typography component=\"span\" style={ { color:\"#fff\" } }>\n                                 <strong>CANCELLED</strong>\n                               </Typography> } />\n\n      } \n\n    }\n    else {\n      statePanel = <WarningSnackbar  message={ <Typography component=\"span\" style={ { color:\"#fff\" } }>\n         <strong>{event.descriptor.state}</strong>\n       </Typography> } />\n    }\n\n\n\n    actionPanel = this.props.actions;\n\n    return (\n      <Grid container>\n        <Grid container spacing={ 24 }>\n          <Grid item lg={ 4 } md={ 6 }>\n            <VtnConfigurationEventCard key={ 'ven_card_' }\n                                     classes={ classes }\n                                     event={ event } />\n          </Grid>\n          <Grid item lg={ 8 } md={ 6 } >\n\n\n            <Grid container>\n              <Grid container spacing={ 24 }>\n                <Grid item xs={ 4 }>\n                  { statePanel }\n                </Grid>\n              </Grid>\n              {actionPanel}\n            \n\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default EventDetailHeader;\n"]},"metadata":{},"sourceType":"module"}