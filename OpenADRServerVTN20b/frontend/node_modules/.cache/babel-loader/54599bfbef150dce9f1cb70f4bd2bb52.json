{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isHorizontal = isHorizontal;\nexports.getAnchor = getAnchor;\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Modal = _interopRequireDefault(require(\"../Modal\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _Slide = _interopRequireDefault(require(\"../Slide\"));\n\nvar _Paper = _interopRequireDefault(require(\"../Paper\"));\n\nvar _helpers = require(\"../utils/helpers\");\n\nvar _transitions = require(\"../styles/transitions\");\n\nvar oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\n\nfunction isHorizontal(props) {\n  return ['left', 'right'].indexOf(props.anchor) !== -1;\n}\n\nfunction getAnchor(props) {\n  return props.theme.direction === 'rtl' && isHorizontal(props) ? oppositeDirection[props.anchor] : props.anchor;\n}\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `variant=\"permanent or persistent\"`. */\n    docked: {\n      flex: '0 0 auto'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      overflowY: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      flex: '1 0 auto',\n      zIndex: theme.zIndex.drawer,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      // temporary style\n      position: 'fixed',\n      top: 0,\n      // We disable the focus ring for mouse, touch and keyboard users.\n      // At some point, it would be better to keep it for keyboard users.\n      // :focus-ring CSS pseudo-class will help.\n      outline: 'none'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"`. */\n    paperAnchorLeft: {\n      left: 0,\n      right: 'auto'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"`. */\n    paperAnchorRight: {\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"`. */\n    paperAnchorTop: {\n      top: 0,\n      left: 0,\n      bottom: 'auto',\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"`. */\n    paperAnchorBottom: {\n      top: 'auto',\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"` & `variant` is not \"temporary\". */\n    paperAnchorDockedLeft: {\n      borderRight: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"` & `variant` is not \"temporary\". */\n    paperAnchorDockedTop: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"` & `variant` is not \"temporary\". */\n    paperAnchorDockedRight: {\n      borderLeft: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"` & `variant` is not \"temporary\". */\n    paperAnchorDockedBottom: {\n      borderTop: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Modal` component. */\n    modal: {}\n  };\n};\n/**\n * The properties of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\n\nexports.styles = styles;\n\nvar Drawer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(Drawer, _React$Component);\n\n  function Drawer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Drawer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Drawer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.mounted = false;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Drawer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          anchorProp = _this$props.anchor,\n          BackdropProps = _this$props.BackdropProps,\n          children = _this$props.children,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          elevation = _this$props.elevation,\n          _this$props$ModalProp = _this$props.ModalProps;\n      _this$props$ModalProp = _this$props$ModalProp === void 0 ? {} : _this$props$ModalProp;\n      var BackdropPropsProp = _this$props$ModalProp.BackdropProps,\n          ModalProps = (0, _objectWithoutProperties2.default)(_this$props$ModalProp, [\"BackdropProps\"]),\n          onClose = _this$props.onClose,\n          open = _this$props.open,\n          PaperProps = _this$props.PaperProps,\n          SlideProps = _this$props.SlideProps,\n          theme = _this$props.theme,\n          transitionDuration = _this$props.transitionDuration,\n          variant = _this$props.variant,\n          other = (0, _objectWithoutProperties2.default)(_this$props, [\"anchor\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"elevation\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"theme\", \"transitionDuration\", \"variant\"]);\n      var anchor = getAnchor(this.props);\n\n      var drawer = _react.default.createElement(_Paper.default, (0, _extends2.default)({\n        elevation: variant === 'temporary' ? elevation : 0,\n        square: true,\n        className: (0, _classnames.default)(classes.paper, classes[\"paperAnchor\".concat((0, _helpers.capitalize)(anchor))], (0, _defineProperty2.default)({}, classes[\"paperAnchorDocked\".concat((0, _helpers.capitalize)(anchor))], variant !== 'temporary'))\n      }, PaperProps), children);\n\n      if (variant === 'permanent') {\n        return _react.default.createElement(\"div\", (0, _extends2.default)({\n          className: (0, _classnames.default)(classes.root, classes.docked, className)\n        }, other), drawer);\n      }\n\n      var slidingDrawer = _react.default.createElement(_Slide.default, (0, _extends2.default)({\n        in: open,\n        direction: oppositeDirection[anchor],\n        timeout: transitionDuration,\n        appear: this.mounted\n      }, SlideProps), drawer);\n\n      if (variant === 'persistent') {\n        return _react.default.createElement(\"div\", (0, _extends2.default)({\n          className: (0, _classnames.default)(classes.root, classes.docked, className)\n        }, other), slidingDrawer);\n      } // variant === temporary\n\n\n      return _react.default.createElement(_Modal.default, (0, _extends2.default)({\n        BackdropProps: (0, _extends2.default)({}, BackdropProps, BackdropPropsProp, {\n          transitionDuration: transitionDuration\n        }),\n        className: (0, _classnames.default)(classes.root, classes.modal, className),\n        open: open,\n        onClose: onClose\n      }, other, ModalProps), slidingDrawer);\n    }\n  }]);\n  return Drawer;\n}(_react.default.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes = {\n  /**\n   * Side from which the drawer will appear.\n   */\n  anchor: _propTypes.default.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * @ignore\n   */\n  BackdropProps: _propTypes.default.object,\n\n  /**\n   * The contents of the drawer.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The elevation of the drawer.\n   */\n  elevation: _propTypes.default.number,\n\n  /**\n   * Properties applied to the [`Modal`](/api/modal/) element.\n   */\n  ModalProps: _propTypes.default.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * Properties applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: _propTypes.default.object,\n\n  /**\n   * Properties applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  theme: _propTypes.default.object.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n\n  /**\n   * The variant to use.\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nDrawer.defaultProps = {\n  anchor: 'left',\n  elevation: 16,\n  open: false,\n  transitionDuration: {\n    enter: _transitions.duration.enteringScreen,\n    exit: _transitions.duration.leavingScreen\n  },\n  variant: 'temporary' // Mobile first.\n\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiDrawer',\n  flip: false,\n  withTheme: true\n})(Drawer);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}