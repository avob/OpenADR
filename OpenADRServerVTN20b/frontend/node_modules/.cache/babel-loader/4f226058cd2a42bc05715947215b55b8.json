{"ast":null,"code":"import _classCallCheck from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/UserCreateAuthenticationFormPanel.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport Divider from '@material-ui/core/Divider';\n\nvar labelStyle = _defineProperty({\n  boxSizing: 'border-box',\n  color: 'rgba(0, 0, 0, 0.54)',\n  fontSize: '1rem',\n  fontWeight: 400,\n  left: '0px',\n  lineHeight: 1,\n  transition: 'color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms',\n  transform: 'translate(0, 1.5px) scale(0.75)',\n  transformOrigin: 'top left',\n  top: 0\n}, \"left\", 0);\n\nexport var UserCreateAuthenticationFormPanel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserCreateAuthenticationFormPanel, _React$Component);\n\n  function UserCreateAuthenticationFormPanel(props) {\n    var _this;\n\n    _classCallCheck(this, UserCreateAuthenticationFormPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserCreateAuthenticationFormPanel).call(this, props));\n\n    _this.handleAuthenticationTypeChange = function (e) {\n      var authentication = _this.props.authentication;\n      authentication.authenticationType = e.target.value;\n\n      _this.props.onChange(authentication);\n    };\n\n    _this.handleAuthenticationPasswordChange = function (e) {\n      var authentication = _this.props.authentication;\n      authentication.authenticationPassword = e.target.value;\n\n      _this.props.onChange(authentication);\n    };\n\n    _this.handleAuthenticationPasswordConfirmChange = function (e) {\n      var authentication = _this.props.authentication;\n      authentication.authenticationPasswordConfirm = e.target.value;\n\n      _this.props.onChange(authentication);\n    };\n\n    _this.handleAuthenticationUsernameChange = function (e) {\n      console.log(e);\n      var authentication = _this.props.authentication;\n      authentication.username = e.target.value;\n\n      _this.props.onChange(authentication);\n    };\n\n    return _this;\n  }\n\n  _createClass(UserCreateAuthenticationFormPanel, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          hasError = _this$props.hasError,\n          identification = _this$props.identification,\n          authentication = _this$props.authentication,\n          OnChange = _this$props.OnChange;\n      var authenticationTypeView = [];\n\n      for (var key in authentication.authenticationTypes) {\n        var value = authentication.authenticationTypes[key];\n        authenticationTypeView.push(React.createElement(MenuItem, {\n          key: key,\n          value: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, value.label));\n      }\n\n      var loginPasswordView = null;\n      var missingPassword = null;\n\n      if (hasError && authentication.authenticationType == \"login\" && authentication.authenticationPassword == '') {\n        missingPassword = true;\n      }\n\n      if (authentication.authenticationType == \"login\") {\n        loginPasswordView = React.createElement(Grid, {\n          container: true,\n          spacing: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          className: classes.formControl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          required: true,\n          type: \"password\",\n          id: \"password_textfield\",\n          label: \"Password\",\n          value: authentication.authenticationPassword,\n          className: classes.textField,\n          error: missingPassword,\n          onChange: this.handleAuthenticationPasswordChange,\n          InputLabelProps: {\n            shrink: true\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          className: classes.formControl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          required: true,\n          type: \"password\",\n          fullWidth: true,\n          id: \"password_confirm_textfield\",\n          label: \"Password Confirm\",\n          value: authentication.authenticationPasswordConfirm,\n          className: classes.textField,\n          error: this.props.hasError,\n          onChange: this.handleAuthenticationPasswordConfirmChange,\n          InputLabelProps: {\n            shrink: true\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          xs: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        style: labelStyle,\n        component: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Authentication Method\"), React.createElement(Select, {\n        value: authentication.authenticationType,\n        style: {\n          marginTop: 0\n        },\n        onChange: this.handleAuthenticationTypeChange,\n        inputProps: {\n          name: 'VEN Authentication Type',\n          id: 'oadr_authentication_select'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, authenticationTypeView))), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"login_textfield\",\n        label: \"Username\",\n        value: identification.needCertificateGeneration != \"no\" && authentication.authenticationType != \"login\" ? '<generated>' : authentication.username,\n        disabled: identification.needCertificateGeneration != \"no\",\n        className: classes.textField,\n        onChange: this.handleAuthenticationUsernameChange,\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), loginPasswordView);\n    }\n  }]);\n\n  return UserCreateAuthenticationFormPanel;\n}(React.Component);\nexport default UserCreateAuthenticationFormPanel;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/UserCreateAuthenticationFormPanel.js"],"names":["React","Typography","FormControl","FormLabel","FormGroup","TextField","ExtensionIcon","Grid","InputLabel","MenuItem","FormHelperText","Select","Divider","labelStyle","boxSizing","color","fontSize","fontWeight","left","lineHeight","transition","transform","transformOrigin","top","UserCreateAuthenticationFormPanel","props","handleAuthenticationTypeChange","e","authentication","authenticationType","target","value","onChange","handleAuthenticationPasswordChange","authenticationPassword","handleAuthenticationPasswordConfirmChange","authenticationPasswordConfirm","handleAuthenticationUsernameChange","console","log","username","classes","hasError","identification","OnChange","authenticationTypeView","key","authenticationTypes","push","label","loginPasswordView","missingPassword","formControl","textField","shrink","marginTop","name","id","needCertificateGeneration","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport ExtensionIcon from '@material-ui/icons/Extension';\n\nimport Grid from '@material-ui/core/Grid';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\n\nimport Divider from '@material-ui/core/Divider';\n\n\nconst labelStyle = {\n\n  boxSizing: 'border-box',\n  color: 'rgba(0, 0, 0, 0.54)',\n  fontSize: '1rem',\n  fontWeight: 400,\n  left: '0px',\n  lineHeight: 1,\n  transition: 'color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms',\n  transform: 'translate(0, 1.5px) scale(0.75)',\n  transformOrigin: 'top left',\n  top: 0,\n  left: 0,\n}\n\nexport class UserCreateAuthenticationFormPanel extends React.Component {\n\n  constructor( props ) {\n    super( props );\n  }\n\n  handleAuthenticationTypeChange = (e) => {\n    var authentication = this.props.authentication;\n    authentication.authenticationType = e.target.value;\n    this.props.onChange(authentication);\n  };\n\n\n  handleAuthenticationPasswordChange = (e) => {\n    var authentication = this.props.authentication;\n    authentication.authenticationPassword = e.target.value;\n    this.props.onChange(authentication);\n  };\n\n  handleAuthenticationPasswordConfirmChange = (e) => {\n    var authentication = this.props.authentication;\n    authentication.authenticationPasswordConfirm = e.target.value;\n    this.props.onChange(authentication);\n  };\n\n  handleAuthenticationUsernameChange = (e) => {\n    console.log(e)\n    var authentication = this.props.authentication;\n    authentication.username = e.target.value;\n    this.props.onChange(authentication);\n  }\n\n\n  render() {\n    const {classes, hasError, identification, authentication, OnChange} = this.props;\n\n    var authenticationTypeView = []\n\n    for (var key in authentication.authenticationTypes) {\n      var value = authentication.authenticationTypes[ key ];\n      authenticationTypeView.push( <MenuItem key={ key } value={ key }>\n                                   { value.label }\n                                   </MenuItem> )\n    }\n\n    var loginPasswordView = null;\n\n    var missingPassword = null;\n    if ( hasError && authentication.authenticationType == \"login\" && authentication.authenticationPassword == '' ) {\n      missingPassword = true;\n    }\n\n    if ( authentication.authenticationType == \"login\" ) {\n\n      loginPasswordView = <Grid container spacing={ 24 }>\n                            <Grid item xs={ 2 } />\n                            <Grid item xs={ 4 }>\n                              <FormControl className={ classes.formControl }>\n                                <TextField required={ true }\n                                           type=\"password\"\n                                           id=\"password_textfield\"\n                                           label=\"Password\"\n                                           value={ authentication.authenticationPassword }\n                                           className={ classes.textField }\n                                           error={ missingPassword }\n                                           onChange={ this.handleAuthenticationPasswordChange }\n                                           InputLabelProps={ { shrink: true, } } />\n                              </FormControl>\n                            </Grid>\n                            <Grid item xs={ 4 }>\n                              <FormControl className={ classes.formControl }>\n                                <TextField required\n                                           type=\"password\"\n                                           fullWidth={ true }\n                                           id=\"password_confirm_textfield\"\n                                           label=\"Password Confirm\"\n                                           value={ authentication.authenticationPasswordConfirm }\n                                           className={ classes.textField }\n                                           error={ this.props.hasError }\n                                           onChange={ this.handleAuthenticationPasswordConfirmChange }\n                                           InputLabelProps={ { shrink: true, } } />\n                              </FormControl>\n                            </Grid>\n                            <Grid item xs={ 2 } />\n                          </Grid>\n    }\n\n    return (\n    <Grid container\n          spacing={ 8 }\n          justify=\"center\">\n      <Grid container spacing={ 24 }>\n        <Grid item xs={ 2 } />\n        <Grid item xs={ 4 }>\n          <FormControl className={ classes.formControl }>\n            <FormLabel style={ labelStyle } component=\"label\">\n              Authentication Method\n            </FormLabel>\n            <Select value={ authentication.authenticationType }\n                    style={ { marginTop: 0 } }\n                    onChange={ this.handleAuthenticationTypeChange }\n                    inputProps={ { name: 'VEN Authentication Type', id: 'oadr_authentication_select', } }>\n              { authenticationTypeView }\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={ 4 }>\n          <FormControl className={ classes.formControl }>\n            <TextField required\n                       id=\"login_textfield\"\n                       label=\"Username\"\n                       value={ (identification.needCertificateGeneration != \"no\" \n                        && authentication.authenticationType != \"login\") ? '<generated>' : authentication.username }\n                       disabled={ (identification.needCertificateGeneration != \"no\")}\n                       className={ classes.textField }\n                       onChange={ this.handleAuthenticationUsernameChange }\n                       InputLabelProps={ { shrink: true, } } />\n          </FormControl>\n        </Grid>\n        <Grid item xs={ 2 } />\n      </Grid>\n      { loginPasswordView }\n    </Grid>\n    );\n  }\n}\n\nexport default UserCreateAuthenticationFormPanel;\n"]},"metadata":{},"sourceType":"module"}