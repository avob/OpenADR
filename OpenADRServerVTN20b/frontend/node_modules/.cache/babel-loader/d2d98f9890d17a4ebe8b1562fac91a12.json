{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/util/scrollbarSize\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _dates = _interopRequireDefault(require(\"./utils/dates\"));\n\nvar _DateContentRow = _interopRequireDefault(require(\"./DateContentRow\"));\n\nvar _Header = _interopRequireDefault(require(\"./Header\"));\n\nvar _ResourceHeader = _interopRequireDefault(require(\"./ResourceHeader\"));\n\nvar _helpers = require(\"./utils/helpers\");\n\nvar TimeGridHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(TimeGridHeader, _React$Component);\n\n  function TimeGridHeader() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleHeaderClick = function (date, view, e) {\n      e.preventDefault();\n      (0, _helpers.notify)(_this.props.onDrillDown, [date, view]);\n    };\n\n    _this.renderRow = function (resource) {\n      var _this$props = _this.props,\n          events = _this$props.events,\n          rtl = _this$props.rtl,\n          selectable = _this$props.selectable,\n          getNow = _this$props.getNow,\n          range = _this$props.range,\n          getters = _this$props.getters,\n          localizer = _this$props.localizer,\n          accessors = _this$props.accessors,\n          components = _this$props.components;\n      var resourceId = accessors.resourceId(resource);\n      var eventsToDisplay = resource ? events.filter(function (event) {\n        return accessors.resource(event) === resourceId;\n      }) : events;\n      return _react.default.createElement(_DateContentRow.default, {\n        isAllDay: true,\n        rtl: rtl,\n        getNow: getNow,\n        minRows: 2,\n        range: range,\n        events: eventsToDisplay,\n        resourceId: resourceId,\n        className: \"rbc-allday-cell\",\n        selectable: selectable,\n        selected: _this.props.selected,\n        components: components,\n        accessors: accessors,\n        getters: getters,\n        localizer: localizer,\n        onSelect: _this.props.onSelectEvent,\n        onDoubleClick: _this.props.onDoubleClickEvent,\n        onSelectSlot: _this.props.onSelectSlot,\n        longPressThreshold: _this.props.longPressThreshold\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = TimeGridHeader.prototype;\n\n  _proto.renderHeaderCells = function renderHeaderCells(range) {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        localizer = _this$props2.localizer,\n        getDrilldownView = _this$props2.getDrilldownView,\n        getNow = _this$props2.getNow,\n        dayProp = _this$props2.getters.dayProp,\n        _this$props2$componen = _this$props2.components.header,\n        HeaderComponent = _this$props2$componen === void 0 ? _Header.default : _this$props2$componen;\n    var today = getNow();\n    return range.map(function (date, i) {\n      var drilldownView = getDrilldownView(date);\n      var label = localizer.format(date, 'dayFormat');\n\n      var _dayProp = dayProp(date),\n          className = _dayProp.className,\n          style = _dayProp.style;\n\n      var header = _react.default.createElement(HeaderComponent, {\n        date: date,\n        label: label,\n        localizer: localizer\n      });\n\n      return _react.default.createElement(\"div\", {\n        key: i,\n        style: style,\n        className: (0, _classnames.default)('rbc-header', className, _dates.default.eq(date, today, 'day') && 'rbc-today')\n      }, drilldownView ? _react.default.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(e) {\n          return _this2.handleHeaderClick(date, drilldownView, e);\n        }\n      }, header) : _react.default.createElement(\"span\", null, header));\n    });\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props3 = this.props,\n        width = _this$props3.width,\n        rtl = _this$props3.rtl,\n        resources = _this$props3.resources,\n        range = _this$props3.range,\n        events = _this$props3.events,\n        getNow = _this$props3.getNow,\n        accessors = _this$props3.accessors,\n        selectable = _this$props3.selectable,\n        components = _this$props3.components,\n        getters = _this$props3.getters,\n        scrollRef = _this$props3.scrollRef,\n        localizer = _this$props3.localizer,\n        isOverflowing = _this$props3.isOverflowing,\n        _this$props3$componen = _this$props3.components,\n        TimeGutterHeader = _this$props3$componen.timeGutterHeader,\n        _this$props3$componen2 = _this$props3$componen.resourceHeader,\n        ResourceHeaderComponent = _this$props3$componen2 === void 0 ? _ResourceHeader.default : _this$props3$componen2;\n    var style = {};\n\n    if (isOverflowing) {\n      style[rtl ? 'marginLeft' : 'marginRight'] = (0, _scrollbarSize.default)() + \"px\";\n    }\n\n    var groupedEvents = resources.groupEvents(events);\n    return _react.default.createElement(\"div\", {\n      style: style,\n      ref: scrollRef,\n      className: (0, _classnames.default)('rbc-time-header', isOverflowing && 'rbc-overflowing')\n    }, _react.default.createElement(\"div\", {\n      className: \"rbc-label rbc-time-header-gutter\",\n      style: {\n        width: width,\n        minWidth: width,\n        maxWidth: width\n      }\n    }, TimeGutterHeader && _react.default.createElement(TimeGutterHeader, null)), resources.map(function (_ref, idx) {\n      var id = _ref[0],\n          resource = _ref[1];\n      return _react.default.createElement(\"div\", {\n        className: \"rbc-time-header-content\",\n        key: id || idx\n      }, resource && _react.default.createElement(\"div\", {\n        className: \"rbc-row rbc-row-resource\",\n        key: \"resource_\" + idx\n      }, _react.default.createElement(\"div\", {\n        className: \"rbc-header\"\n      }, _react.default.createElement(ResourceHeaderComponent, {\n        index: idx,\n        label: accessors.resourceTitle(resource),\n        resource: resource\n      }))), _react.default.createElement(\"div\", {\n        className: \"rbc-row rbc-time-header-cell\" + (range.length <= 1 ? ' rbc-time-header-cell-single-day' : '')\n      }, _this3.renderHeaderCells(range)), _react.default.createElement(_DateContentRow.default, {\n        isAllDay: true,\n        rtl: rtl,\n        getNow: getNow,\n        minRows: 2,\n        range: range,\n        events: groupedEvents.get(id) || [],\n        resourceId: resource && id,\n        className: \"rbc-allday-cell\",\n        selectable: selectable,\n        selected: _this3.props.selected,\n        components: components,\n        accessors: accessors,\n        getters: getters,\n        localizer: localizer,\n        onSelect: _this3.props.onSelectEvent,\n        onDoubleClick: _this3.props.onDoubleClickEvent,\n        onSelectSlot: _this3.props.onSelectSlot,\n        longPressThreshold: _this3.props.longPressThreshold\n      }));\n    }));\n  };\n\n  return TimeGridHeader;\n}(_react.default.Component);\n\nTimeGridHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  range: _propTypes.default.array.isRequired,\n  events: _propTypes.default.array.isRequired,\n  resources: _propTypes.default.object,\n  getNow: _propTypes.default.func.isRequired,\n  isOverflowing: _propTypes.default.bool,\n  rtl: _propTypes.default.bool,\n  width: _propTypes.default.number,\n  localizer: _propTypes.default.object.isRequired,\n  accessors: _propTypes.default.object.isRequired,\n  components: _propTypes.default.object.isRequired,\n  getters: _propTypes.default.object.isRequired,\n  selected: _propTypes.default.object,\n  selectable: _propTypes.default.oneOf([true, false, 'ignoreEvents']),\n  longPressThreshold: _propTypes.default.number,\n  onSelectSlot: _propTypes.default.func,\n  onSelectEvent: _propTypes.default.func,\n  onDoubleClickEvent: _propTypes.default.func,\n  onDrillDown: _propTypes.default.func,\n  getDrilldownView: _propTypes.default.func.isRequired,\n  scrollRef: _propTypes.default.any\n} : {};\nvar _default = TimeGridHeader;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}