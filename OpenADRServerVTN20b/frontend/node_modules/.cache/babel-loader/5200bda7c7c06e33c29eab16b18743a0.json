{"ast":null,"code":"import pxd from 'parse-xsd-duration'; //\n// Takes an ical duration in a outputs it as a total # of seconds\n//\n\nexport function iCalDurationInSeconds(durStr) {\n  return pxd(durStr);\n} //\n// Take total of minutes and output ical duration\n//\n\nexport function minutesToICalDuration(minutes) {\n  return \"PT\" + minutes + \"M\";\n}\nexport function timestampToISO(timestamp) {\n  var date = new Date();\n  date.setTime(timestamp); // remove leading Z: ignoring timezone\n\n  return date.toISOString().slice(0, -1);\n}\nexport function isoToTimestamp(iso) {\n  // add leading Z (tz)\n  var date = new Date(iso + \"Z\");\n  return date.getTime();\n}\n\nvar enforceTwoDigit = function enforceTwoDigit(date) {\n  date = \"\" + date;\n\n  if (date.length === 1) {\n    date = \"0\" + date;\n  }\n\n  return date;\n};\n\nexport function formatTimestamp(timestamp) {\n  var date = new Date();\n  date.setTime(timestamp);\n  return {\n    date: date.getFullYear() + \"-\" + enforceTwoDigit(date.getMonth() + 1) + \"-\" + enforceTwoDigit(date.getDate()),\n    time: enforceTwoDigit(date.getHours()) + \":\" + enforceTwoDigit(date.getMinutes()),\n    tz: \"UTC\"\n  };\n}","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/utils/time.js"],"names":["pxd","iCalDurationInSeconds","durStr","minutesToICalDuration","minutes","timestampToISO","timestamp","date","Date","setTime","toISOString","slice","isoToTimestamp","iso","getTime","enforceTwoDigit","length","formatTimestamp","getFullYear","getMonth","getDate","time","getHours","getMinutes","tz"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,oBAAhB,C,CAEA;AACA;AACA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AAC5C,SAAOF,GAAG,CAACE,MAAD,CAAV;AACD,C,CAED;AACA;AACA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;AAC7C,SAAO,OAAKA,OAAL,GAAa,GAApB;AACD;AAED,OAAO,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AACxC,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaH,SAAb,EAFwC,CAGxC;;AACA,SAAOC,IAAI,CAACG,WAAL,GAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,CAAC,CAA7B,CAAP;AACD;AAED,OAAO,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAClC;AACA,MAAIN,IAAI,GAAG,IAAIC,IAAJ,CAASK,GAAG,GAAC,GAAb,CAAX;AACA,SAAON,IAAI,CAACO,OAAL,EAAP;AACD;;AAED,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAACR,IAAD,EAAU;AAC9BA,EAAAA,IAAI,GAAG,KAAGA,IAAV;;AACA,MAAGA,IAAI,CAACS,MAAL,KAAgB,CAAnB,EAAqB;AACnBT,IAAAA,IAAI,GAAG,MAAKA,IAAZ;AACD;;AACD,SAAOA,IAAP;AACD,CAND;;AAQA,OAAO,SAASU,eAAT,CAAyBX,SAAzB,EAAoC;AACzC,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaH,SAAb;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEA,IAAI,CAACW,WAAL,KAAqB,GAArB,GAA2BH,eAAe,CAACR,IAAI,CAACY,QAAL,KAAgB,CAAjB,CAA1C,GAAgE,GAAhE,GAAsEJ,eAAe,CAACR,IAAI,CAACa,OAAL,EAAD,CADtF;AAELC,IAAAA,IAAI,EAAEN,eAAe,CAACR,IAAI,CAACe,QAAL,EAAD,CAAf,GAAmC,GAAnC,GAAyCP,eAAe,CAACR,IAAI,CAACgB,UAAL,EAAD,CAFzD;AAGLC,IAAAA,EAAE,EAAE;AAHC,GAAP;AAMD","sourcesContent":["import pxd from 'parse-xsd-duration'\n\n//\n// Takes an ical duration in a outputs it as a total # of seconds\n//\nexport function iCalDurationInSeconds(durStr) {\n  return pxd(durStr)\n}\n\n//\n// Take total of minutes and output ical duration\n//\nexport function minutesToICalDuration(minutes) {\n  return \"PT\"+minutes+\"M\";\n}\n\nexport function timestampToISO(timestamp) {\n  var date = new Date();\n  date.setTime(timestamp);\n  // remove leading Z: ignoring timezone\n  return date.toISOString().slice(0, -1);\n}\n\nexport function isoToTimestamp(iso) {\n  // add leading Z (tz)\n  var date = new Date(iso+\"Z\");\n  return date.getTime();\n}\n\nvar enforceTwoDigit = (date) => {\n  date = \"\"+date;\n  if(date.length === 1){\n    date = \"0\"+ date;\n  }\n  return date;\n} \n\nexport function formatTimestamp(timestamp) {\n  var date = new Date();\n  date.setTime(timestamp);\n  return {\n    date: date.getFullYear() + \"-\" + enforceTwoDigit(date.getMonth()+1) + \"-\" + enforceTwoDigit(date.getDate()),\n    time: enforceTwoDigit(date.getHours()) + \":\" + enforceTwoDigit(date.getMinutes()),\n    tz: \"UTC\"\n  }\n\n}"]},"metadata":{},"sourceType":"module"}