{"ast":null,"code":"import _defineProperty from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/Autocomplete.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nfunction renderInputComponent(inputProps) {\n  var classes = inputProps.classes,\n      _inputProps$inputRef = inputProps.inputRef,\n      _inputRef = _inputProps$inputRef === void 0 ? function () {} : _inputProps$inputRef,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"classes\", \"inputRef\", \"ref\"]);\n\n  return React.createElement(TextField, Object.assign({\n    fullWidth: true,\n    InputProps: {\n      inputRef: function inputRef(node) {\n        ref(node);\n\n        _inputRef(node);\n      },\n      classes: {\n        input: classes.input\n      }\n    }\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    container: {\n      position: 'relative'\n    },\n    suggestionsContainerOpen: {\n      position: 'absolute',\n      zIndex: 1,\n      marginTop: theme.spacing.unit,\n      left: 0,\n      right: 0\n    },\n    suggestion: {\n      display: 'block'\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: 'none'\n    },\n    divider: {\n      height: theme.spacing.unit * 2\n    }\n  };\n};\n\nexport var VenAutocomplete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VenAutocomplete, _React$Component);\n\n  function VenAutocomplete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VenAutocomplete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VenAutocomplete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      single: '',\n      popper: ''\n    };\n\n    _this.handleChange = function (name) {\n      return function (event, _ref) {\n        var newValue = _ref.newValue;\n\n        _this.setState(_defineProperty({}, name, newValue));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(VenAutocomplete, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var that = this;\n      var autosuggestProps = {\n        renderInputComponent: renderInputComponent,\n        suggestions: this.props.suggestions,\n        onSuggestionsFetchRequested: this.props.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.props.onSuggestionsClearRequested,\n        onSuggestionsSelect: this.props.onSuggestionsSelect,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion\n      };\n\n      function getSuggestionValue(suggestion) {\n        return suggestion.commonName;\n      }\n\n      function renderSuggestion(suggestion) {\n        return React.createElement(MenuItem, {\n          component: \"div\",\n          onClick: function onClick() {\n            that.props.onSuggestionsSelect(suggestion);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, suggestion.commonName), \" (\", React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, suggestion.username), \")\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n        inputProps: {\n          classes: classes,\n          label: \"venId, commonName, oadrName\",\n          placeholder: '',\n          value: this.state.single,\n          onChange: this.handleChange('single')\n        },\n        theme: {\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        },\n        renderSuggestionsContainer: function renderSuggestionsContainer(options) {\n          return React.createElement(Paper, Object.assign({}, options.containerProps, {\n            square: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }), options.children);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return VenAutocomplete;\n}(React.Component);\nVenAutocomplete.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nVenAutocomplete = withStyles(styles)(VenAutocomplete);\nexport var EventAutocomplete =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EventAutocomplete, _React$Component2);\n\n  function EventAutocomplete() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, EventAutocomplete);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(EventAutocomplete)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this2.state = {\n      single: '',\n      popper: ''\n    };\n\n    _this2.handleChange = function (name) {\n      return function (event, _ref2) {\n        var newValue = _ref2.newValue;\n\n        _this2.setState(_defineProperty({}, name, newValue));\n      };\n    };\n\n    return _this2;\n  }\n\n  _createClass(EventAutocomplete, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var that = this;\n      var autosuggestProps = {\n        renderInputComponent: renderInputComponent,\n        suggestions: this.props.suggestions,\n        onSuggestionsFetchRequested: this.props.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.props.onSuggestionsClearRequested,\n        onSuggestionsSelect: this.props.onSuggestionsSelect,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion\n      };\n\n      function getSuggestionValue(suggestion) {\n        return suggestion.descriptor.eventId;\n      }\n\n      function renderSuggestion(suggestion) {\n        return React.createElement(MenuItem, {\n          component: \"div\",\n          onClick: function onClick() {\n            that.props.onSuggestionsSelect(suggestion);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, suggestion.descriptor.eventId)));\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n        inputProps: {\n          classes: classes,\n          placeholder: '',\n          value: this.state.single,\n          onChange: this.handleChange('single')\n        },\n        theme: {\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        },\n        renderSuggestionsContainer: function renderSuggestionsContainer(options) {\n          return React.createElement(Paper, Object.assign({}, options.containerProps, {\n            square: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }), options.children);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EventAutocomplete;\n}(React.Component);\nEventAutocomplete.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nEventAutocomplete = withStyles(styles)(EventAutocomplete);","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/Autocomplete.js"],"names":["React","PropTypes","Autosuggest","TextField","Paper","MenuItem","Popper","withStyles","renderInputComponent","inputProps","classes","inputRef","ref","other","node","input","styles","theme","root","flexGrow","container","position","suggestionsContainerOpen","zIndex","marginTop","spacing","unit","left","right","suggestion","display","suggestionsList","margin","padding","listStyleType","divider","height","VenAutocomplete","state","single","popper","handleChange","name","event","newValue","setState","props","that","autosuggestProps","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionsSelect","getSuggestionValue","renderSuggestion","commonName","username","label","placeholder","value","onChange","options","containerProps","children","Component","propTypes","object","isRequired","EventAutocomplete","descriptor","eventId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\n\nexport class VenAutocomplete extends React.Component {\n  state = {\n    single: '',\n    popper: '',\n  };\n\n\n  handleChange = name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    var that = this;\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.props.suggestions,\n      onSuggestionsFetchRequested: this.props.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.props.onSuggestionsClearRequested,\n      onSuggestionsSelect: this.props.onSuggestionsSelect,\n      getSuggestionValue,\n      renderSuggestion,\n    };\n\n\n    function getSuggestionValue(suggestion) {\n      return suggestion.commonName;\n    }\n\n\n    function renderSuggestion(suggestion) {\n      return (\n        <MenuItem component=\"div\" onClick={() => {that.props.onSuggestionsSelect(suggestion)}}>\n          <div>\n            <strong>{suggestion.commonName}</strong> (<i>{suggestion.username}</i>)\n          </div>\n        </MenuItem>\n      );\n    }\n\n\n    return (\n      <div className={classes.root}>\n         <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            label: \"venId, commonName, oadrName\",\n            placeholder: '',\n            value: this.state.single,\n            onChange: this.handleChange('single'),\n          }}\n\n          theme={{\n            container: classes.container,\n            suggestionsContainerOpen: classes.suggestionsContainerOpen,\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Paper {...options.containerProps} square>\n              {options.children}\n            </Paper>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nVenAutocomplete.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nVenAutocomplete = withStyles(styles)(VenAutocomplete);\n\nexport class EventAutocomplete extends React.Component {\n  state = {\n    single: '',\n    popper: '',\n  };\n\n\n  handleChange = name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    var that = this;\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.props.suggestions,\n      onSuggestionsFetchRequested: this.props.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.props.onSuggestionsClearRequested,\n      onSuggestionsSelect: this.props.onSuggestionsSelect,\n      getSuggestionValue,\n      renderSuggestion,\n    };\n\n\n    function getSuggestionValue(suggestion) {\n      return suggestion.descriptor.eventId;\n    }\n\n\n    function renderSuggestion(suggestion) {\n      return (\n        <MenuItem component=\"div\" onClick={() => {that.props.onSuggestionsSelect(suggestion)}}>\n          <div>\n            <strong>{suggestion.descriptor.eventId}</strong>\n          </div>\n        </MenuItem>\n      );\n    }\n\n\n    return (\n      <div className={classes.root}>\n         <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            placeholder: '',\n            value: this.state.single,\n            onChange: this.handleChange('single'),\n          }}\n          theme={{\n            container: classes.container,\n            suggestionsContainerOpen: classes.suggestionsContainerOpen,\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Paper {...options.containerProps} square>\n              {options.children}\n            </Paper>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nEventAutocomplete.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nEventAutocomplete = withStyles(styles)(EventAutocomplete);"]},"metadata":{},"sourceType":"module"}