{"ast":null,"code":"import _classCallCheck from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/Event/EventCalendarView/EventCalendarAgendaView.js\";\nimport React from 'react';\nimport BigCalendar from 'react-big-calendar';\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid';\nimport Week from 'react-big-calendar/lib/Week';\nimport moment from 'moment';\nimport AgendaView from 'react-big-calendar/lib/Agenda';\n\nvar EventCalendarAgendaView =\n/*#__PURE__*/\nfunction (_AgendaView) {\n  _inherits(EventCalendarAgendaView, _AgendaView);\n\n  function EventCalendarAgendaView() {\n    _classCallCheck(this, EventCalendarAgendaView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EventCalendarAgendaView).apply(this, arguments));\n  }\n\n  return EventCalendarAgendaView;\n}(AgendaView); // var getRange = (date) => {\n//     return {\n//       start:start.toDate(),\n//       end:end.toDate()\n//     }\n// }\n\n\nEventCalendarAgendaView.range = function (date) {\n  var start = moment(date).startOf('week');\n  ;\n  var end = moment(start.toDate());\n  end.add(7, 'day');\n  var current = moment(start.toDate());\n  var range = [];\n\n  while (current.toDate().getTime() < end.toDate().getTime()) {\n    range.push(current.toDate());\n    current.add(1, 'day');\n  }\n\n  return range;\n};\n\nEventCalendarAgendaView.navigate = function (date, action) {\n  var d = moment(new Date(date));\n\n  switch (action) {\n    case BigCalendar.Navigate.PREVIOUS:\n      d.add(-7, 'day');\n      return d.toDate();\n\n    case BigCalendar.Navigate.NEXT:\n      d.add(7, 'day');\n      return d.toDate();\n\n    case BigCalendar.Navigate.TODAY:\n      date = new Date();\n      return date;\n\n    default:\n      return date;\n  }\n};\n\nEventCalendarAgendaView.title = function (date) {\n  var start = moment(date).startOf('week');\n  ;\n  var end = moment(start.toDate());\n  end.add(7, 'day');\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, start.format(\"M/D/YYYY\"), \" - \", end.format(\"M/D/YYYY\")), React.createElement(\"span\", {\n    className: \"rbc-btn-group\",\n    style: {\n      float: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: EventCalendarAgendaView.color === \"status\" ? \"rbc-active\" : \"\",\n    onClick: function onClick(e) {\n      EventCalendarAgendaView.onColorChange(\"status\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Color Status\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: EventCalendarAgendaView.color === \"market\" ? \"rbc-active\" : \"\",\n    onClick: function onClick(e) {\n      EventCalendarAgendaView.onColorChange(\"market\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Color Market\")));\n};\n\nexport default EventCalendarAgendaView;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/Event/EventCalendarView/EventCalendarAgendaView.js"],"names":["React","BigCalendar","TimeGrid","Week","moment","AgendaView","EventCalendarAgendaView","range","date","start","startOf","end","toDate","add","current","getTime","push","navigate","action","d","Date","Navigate","PREVIOUS","NEXT","TODAY","title","paddingTop","format","float","color","e","onColorChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;;IAIMC,uB;;;;;;;;;;;;EAAgCD,U,GAItC;AAEA;AACA;AACA;AACA;AAEA;;;AAEAC,uBAAuB,CAACC,KAAxB,GAAgC,UAAAC,IAAI,EAAI;AAGtC,MAAIC,KAAK,GAAGL,MAAM,CAACI,IAAD,CAAN,CAAaE,OAAb,CAAqB,MAArB,CAAZ;AAAyC;AACzC,MAAIC,GAAG,GAAGP,MAAM,CAACK,KAAK,CAACG,MAAN,EAAD,CAAhB;AACAD,EAAAA,GAAG,CAACE,GAAJ,CAAQ,CAAR,EAAW,KAAX;AAEA,MAAIC,OAAO,GAAGV,MAAM,CAACK,KAAK,CAACG,MAAN,EAAD,CAApB;AACA,MAAIL,KAAK,GAAG,EAAZ;;AAEA,SAAOO,OAAO,CAACF,MAAR,GAAiBG,OAAjB,KAA6BJ,GAAG,CAACC,MAAJ,GAAaG,OAAb,EAApC,EAA4D;AAC1DR,IAAAA,KAAK,CAACS,IAAN,CAAWF,OAAO,CAACF,MAAR,EAAX;AACAE,IAAAA,OAAO,CAACD,GAAR,CAAY,CAAZ,EAAe,KAAf;AACD;;AAED,SAAON,KAAP;AACD,CAhBD;;AAkBAD,uBAAuB,CAACW,QAAxB,GAAmC,UAACT,IAAD,EAAOU,MAAP,EAAkB;AACnD,MAAIC,CAAC,GAAGf,MAAM,CAAC,IAAIgB,IAAJ,CAASZ,IAAT,CAAD,CAAd;;AACA,UAAQU,MAAR;AACE,SAAKjB,WAAW,CAACoB,QAAZ,CAAqBC,QAA1B;AACEH,MAAAA,CAAC,CAACN,GAAF,CAAM,CAAC,CAAP,EAAU,KAAV;AACA,aAAOM,CAAC,CAACP,MAAF,EAAP;;AAEF,SAAKX,WAAW,CAACoB,QAAZ,CAAqBE,IAA1B;AACEJ,MAAAA,CAAC,CAACN,GAAF,CAAM,CAAN,EAAS,KAAT;AACA,aAAOM,CAAC,CAACP,MAAF,EAAP;;AAEF,SAAKX,WAAW,CAACoB,QAAZ,CAAqBG,KAA1B;AACEhB,MAAAA,IAAI,GAAG,IAAIY,IAAJ,EAAP;AAEA,aAAOZ,IAAP;;AAEF;AACE,aAAOA,IAAP;AAfJ;AAiBD,CAnBD;;AAuBAF,uBAAuB,CAACmB,KAAxB,GAAgC,UAAAjB,IAAI,EAAI;AACtC,MAAIC,KAAK,GAAGL,MAAM,CAACI,IAAD,CAAN,CAAaE,OAAb,CAAqB,MAArB,CAAZ;AAAyC;AACzC,MAAIC,GAAG,GAAGP,MAAM,CAACK,KAAK,CAACG,MAAN,EAAD,CAAhB;AACAD,EAAAA,GAAG,CAACE,GAAJ,CAAQ,CAAR,EAAW,KAAX;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,KAAK,EAAE;AAACa,MAAAA,UAAU,EAAC;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BjB,KAAK,CAACkB,MAAN,CAAc,UAAd,CAA/B,SAA6DhB,GAAG,CAACgB,MAAJ,CAAY,UAAZ,CAA7D,CADF,EAEE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAGtB,uBAAuB,CAACuB,KAAxB,KAAkC,QAAnC,GAA+C,YAA/C,GAA8D,EAA/F;AAAmG,IAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AAACxB,MAAAA,uBAAuB,CAACyB,aAAxB,CAAsC,QAAtC;AAAgD,KAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAGzB,uBAAuB,CAACuB,KAAxB,KAAmC,QAApC,GAAgD,YAAhD,GAA+D,EAAhG;AAAoG,IAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AAACxB,MAAAA,uBAAuB,CAACyB,aAAxB,CAAsC,QAAtC;AAAgD,KAArK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CAFF,CADF;AASD,CAbD;;AAeA,eAAezB,uBAAf","sourcesContent":["import React from 'react';\nimport BigCalendar from 'react-big-calendar'\n\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid'\nimport Week from 'react-big-calendar/lib/Week'\nimport moment from 'moment'\n\nimport AgendaView from 'react-big-calendar/lib/Agenda'\n\n\n\nclass EventCalendarAgendaView extends AgendaView {\n\n}\n\n// var getRange = (date) => {\n    \n//     return {\n//       start:start.toDate(),\n//       end:end.toDate()\n//     }\n\n// }\n\nEventCalendarAgendaView.range = date => {\n\n\n  let start = moment(date).startOf('week');;\n  let end = moment(start.toDate())\n  end.add(7, 'day');\n\n  let current = moment(start.toDate());\n  let range = []\n\n  while (current.toDate().getTime() < end.toDate().getTime()) {\n    range.push(current.toDate())\n    current.add(1, 'day')\n  }\n\n  return range;\n}\n\nEventCalendarAgendaView.navigate = (date, action) => {\n  let d = moment(new Date(date));\n  switch (action) {\n    case BigCalendar.Navigate.PREVIOUS:\n      d.add(-7, 'day')\n      return d.toDate();\n\n    case BigCalendar.Navigate.NEXT:\n      d.add(7, 'day');\n      return d.toDate();\n\n    case BigCalendar.Navigate.TODAY:\n      date = new Date();\n     \n      return date;\n\n    default:\n      return date\n  }\n}\n\n\n\nEventCalendarAgendaView.title = date => {\n  let start = moment(date).startOf('week');;\n  let end = moment(start.toDate())\n  end.add(7, 'day');\n  return (\n    <span>\n      <span style={{paddingTop:10}}>{start.format( \"M/D/YYYY\")} - {end.format( \"M/D/YYYY\")}</span>\n      <span className=\"rbc-btn-group\" style={{float:\"right\"}} >\n        <button type=\"button\" className={(EventCalendarAgendaView.color === \"status\") ? \"rbc-active\" : \"\"} onClick={(e) => {EventCalendarAgendaView.onColorChange(\"status\")}}>Color Status</button>\n        <button type=\"button\" className={(EventCalendarAgendaView.color  === \"market\") ? \"rbc-active\" : \"\"} onClick={(e) => {EventCalendarAgendaView.onColorChange(\"market\")}}>Color Market</button>\n      </span>  \n    </span>\n    );\n}\n\nexport default EventCalendarAgendaView;"]},"metadata":{},"sourceType":"module"}