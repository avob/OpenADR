{"ast":null,"code":"var _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/VenAvailableReportHeader.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { isoToTimestamp } from '../../utils/time';\nimport { isActionReport, isHistoryReport, isTelemetryReport } from '../../utils/venReport';\nimport { DateAndTimePicker, DurationPicker } from './TimePicker';\n\nvar VenReportTextField = function VenReportTextField(props) {\n  var value = props.value != null ? props.value : \"\";\n  return React.createElement(TextField, {\n    label: props.field,\n    value: value,\n    className: props.className,\n    margin: \"normal\",\n    fullWidth: true,\n    InputProps: {\n      shrink: \"true\",\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n};\n\nexport function VenAvailableReportHeader(props) {\n  var classes = props.classes,\n      availableReport = props.availableReport;\n  var startView = null;\n  var durationView = null;\n\n  if (isHistoryReport(availableReport)) {\n    if (availableReport.start) {\n      startView = React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(VenReportTextField, {\n        className: classes.textField,\n        field: \"Start Date\",\n        value: availableReport.start,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n\n    if (availableReport.duration) {\n      durationView = React.createElement(Grid, {\n        item: true,\n        xs: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(VenReportTextField, {\n        className: classes.textField,\n        field: \"Duration\",\n        value: availableReport.duration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(VenReportTextField, {\n    className: classes.textField,\n    field: \"Ei Report ID\",\n    value: availableReport.reportId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(VenReportTextField, {\n    className: classes.textField,\n    field: \"Report Name\",\n    value: availableReport.reportName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(VenReportTextField, {\n    className: classes.textField,\n    field: \"Report Specifier ID\",\n    value: availableReport.reportSpecifierId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(VenReportTextField, {\n    className: classes.textField,\n    field: \"Created Datetime\",\n    value: availableReport.createdDatetime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))), isHistoryReport(availableReport) ? React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, startView, durationView) : null));\n}\nexport function VenAvailableReportParamsHeader(props) {\n  var classes = props.classes,\n      availableReport = props.availableReport;\n  var startView = null;\n  var durationView = null;\n  var granularityView = null;\n  var reportBackDurationView = null;\n\n  if (isHistoryReport(availableReport)) {\n    var startError = props.hasError && props.start == null;\n    var durationError = props.hasError && props.duration == null;\n    startView = React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(DateAndTimePicker, {\n      error: startError,\n      classes: classes,\n      field: \"Start Date\",\n      value: props.start,\n      onChange: props.onStartChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n    durationView = React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(DurationPicker, {\n      error: durationError,\n      classes: classes,\n      field: \"Duration (minutes)\",\n      value: props.duration,\n      onChange: props.onDurationChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n  if (isTelemetryReport(availableReport)) {\n    var granularityError = props.hasError && props.granularity == null;\n    var reportBackDurationError = props.hasError && props.reportBackDuration == null;\n    granularityView = React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(DurationPicker, {\n      error: granularityError,\n      classes: classes,\n      field: \"Granularity Duration (minutes)\",\n      value: props.granularity,\n      onChange: props.onGranularityChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n    reportBackDurationView = React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(DurationPicker, {\n      error: reportBackDurationError,\n      classes: classes,\n      field: \"Report Back Duration (minutes)\",\n      value: props.reportBackDuration,\n      onChange: props.onReportBackDurationChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, isTelemetryReport(availableReport) ? React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, granularityView, reportBackDurationView) : null, isHistoryReport(availableReport) ? React.createElement(Grid, {\n    container: true,\n    spacing: 24,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, startView, durationView) : null));\n}","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/common/VenAvailableReportHeader.js"],"names":["React","TextField","Grid","isoToTimestamp","isActionReport","isHistoryReport","isTelemetryReport","DateAndTimePicker","DurationPicker","VenReportTextField","props","value","field","className","shrink","readOnly","VenAvailableReportHeader","classes","availableReport","startView","durationView","start","textField","duration","reportId","reportName","reportSpecifierId","createdDatetime","VenAvailableReportParamsHeader","granularityView","reportBackDurationView","startError","hasError","durationError","onStartChange","onDurationChange","granularityError","granularity","reportBackDurationError","reportBackDuration","onGranularityChange","onReportBackDurationChange"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nimport { isoToTimestamp} from '../../utils/time'\nimport {isActionReport, isHistoryReport, isTelemetryReport} from '../../utils/venReport'\nimport {DateAndTimePicker, DurationPicker } from './TimePicker'\n\n\n\n\n\n\n\nvar VenReportTextField = (props) => {\n  var value = (props.value != null) ? props.value : \"\";\n  return (\n  <TextField label={ props.field }\n             value={ value }\n             className={ props.className }\n             margin=\"normal\"\n             fullWidth={true}\n             InputProps={ { shrink: \"true\", readOnly: true, } } />\n\n  );\n}\n\n\n\nexport function VenAvailableReportHeader (props) {\n  const { classes, availableReport} = props;\n  var startView = null;\n  var durationView = null;\n  if(isHistoryReport(availableReport)){\n    if(availableReport.start) {\n     \n      startView = <Grid item xs={ 3 }>\n        <VenReportTextField className={ classes.textField } field=\"Start Date\" value={ availableReport.start } />\n      </Grid>\n    }\n    if(availableReport.duration) {\n      durationView = <Grid item xs={ 3 }>\n        <VenReportTextField className={ classes.textField } field=\"Duration\" value={ availableReport.duration } />\n      </Grid>\n    }\n  }\n    \n  return (\n    <div>\n      <Grid>\n        <Grid container spacing={ 24 }>\n          <Grid item xs={ 3 }>\n            <VenReportTextField className={ classes.textField } field=\"Ei Report ID\" value={ availableReport.reportId } />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <VenReportTextField className={ classes.textField } field=\"Report Name\" value={ availableReport.reportName } />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <VenReportTextField className={ classes.textField } field=\"Report Specifier ID\" value={ availableReport.reportSpecifierId } />\n          </Grid>\n          <Grid item xs={ 3 }>\n            <VenReportTextField className={ classes.textField } field=\"Created Datetime\" value={ availableReport.createdDatetime } />\n          </Grid>\n        </Grid>\n\n        {isHistoryReport(availableReport) ? ( <Grid container spacing={ 24 }>\n          {startView} \n          {durationView}\n        </Grid>) : null}\n\n      </Grid>\n    </div>\n  );\n}\n\nexport function VenAvailableReportParamsHeader (props) {\n  const { classes, availableReport} = props;\n  var startView = null;\n  var durationView = null;\n  var granularityView = null;\n  var reportBackDurationView = null;\n  if(isHistoryReport(availableReport)){\n    var startError = (props.hasError && props.start == null);\n    var durationError = (props.hasError && props.duration == null);\n    startView = <Grid item xs={ 3 }>\n        <DateAndTimePicker error={startError} classes={ classes } field=\"Start Date\" \n        value={props.start} onChange={props.onStartChange} />\n      </Grid>\n    durationView = <Grid item xs={ 3 }>\n        <DurationPicker error={durationError} classes={ classes } field=\"Duration (minutes)\" \n        value={props.duration} onChange={props.onDurationChange}/>\n      </Grid>\n  }\n\n  if(isTelemetryReport(availableReport)){\n\n    var granularityError = (props.hasError && props.granularity == null);\n    var reportBackDurationError = (props.hasError && props.reportBackDuration == null);\n\n    granularityView = <Grid item xs={ 3 }>\n        <DurationPicker error={granularityError} classes={ classes } field=\"Granularity Duration (minutes)\" \n        value={props.granularity} onChange={props.onGranularityChange}/>\n      </Grid>\n    reportBackDurationView = <Grid item xs={ 3 }>\n        <DurationPicker error={reportBackDurationError} classes={ classes } field=\"Report Back Duration (minutes)\" \n        value={props.reportBackDuration} onChange={props.onReportBackDurationChange}/>\n      </Grid>\n  }\n    \n  return (\n    <div>\n      <Grid>\n        {isTelemetryReport(availableReport) ? ( <Grid container spacing={ 24 }>\n          {granularityView} \n          {reportBackDurationView}\n        </Grid>) : null}\n\n        { isHistoryReport(availableReport) ? ( <Grid container spacing={ 24 }>\n          {startView} \n          {durationView}\n        </Grid>) : null}\n\n      </Grid>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}