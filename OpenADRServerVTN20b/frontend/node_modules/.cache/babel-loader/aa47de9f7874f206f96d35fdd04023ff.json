{"ast":null,"code":"import _classCallCheck from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/Event/EventCalendarView/EventCalendarWeekView.js\";\nimport React from 'react';\nimport BigCalendar from 'react-big-calendar';\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid';\nimport moment from 'moment';\n\nvar EventCalendarWeekView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventCalendarWeekView, _React$Component);\n\n  function EventCalendarWeekView() {\n    _classCallCheck(this, EventCalendarWeekView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EventCalendarWeekView).apply(this, arguments));\n  }\n\n  _createClass(EventCalendarWeekView, [{\n    key: \"render\",\n    value: function render() {\n      var date = this.props.date;\n      var range = EventCalendarWeekView.range(date);\n      return React.createElement(TimeGrid, Object.assign({}, this.props, {\n        range: range,\n        eventOffset: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EventCalendarWeekView;\n}(React.Component); // var getRange = (date) => {\n//     return {\n//       start:start.toDate(),\n//       end:end.toDate()\n//     }\n// }\n\n\nEventCalendarWeekView.range = function (date) {\n  var start = moment(date).startOf('week');\n  ;\n  var end = moment(start.toDate());\n  end.add(7, 'day');\n  var current = moment(start.toDate());\n  var range = [];\n\n  while (current.toDate().getTime() < end.toDate().getTime()) {\n    range.push(current.toDate());\n    current.add(1, 'day');\n  }\n\n  return range;\n};\n\nEventCalendarWeekView.navigate = function (date, action) {\n  var d = moment(new Date(date));\n\n  switch (action) {\n    case BigCalendar.Navigate.PREVIOUS:\n      d.add(-7, 'day');\n      return d.toDate();\n\n    case BigCalendar.Navigate.NEXT:\n      d.add(7, 'day');\n      return d.toDate();\n\n    case BigCalendar.Navigate.TODAY:\n      console.log(\"today\");\n      date = new Date();\n      return date;\n\n    default:\n      return date;\n  }\n};\n\nEventCalendarWeekView.title = function (date) {\n  var start = moment(date).startOf('week');\n  var end = moment(start.toDate());\n  end.add(7, 'day');\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      paddingTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, start.format(\"MMM Do\"), \" - \", end.format(\"MMM Do\")), React.createElement(\"span\", {\n    className: \"rbc-btn-group\",\n    style: {\n      float: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: EventCalendarWeekView.color == \"status\" ? \"rbc-active\" : \"\",\n    onClick: function onClick(e) {\n      EventCalendarWeekView.onColorChange(\"status\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Color Status\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: EventCalendarWeekView.color == \"market\" ? \"rbc-active\" : \"\",\n    onClick: function onClick(e) {\n      EventCalendarWeekView.onColorChange(\"market\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Color Market\")));\n};\n\nexport default EventCalendarWeekView;","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/components/Event/EventCalendarView/EventCalendarWeekView.js"],"names":["React","BigCalendar","TimeGrid","moment","EventCalendarWeekView","date","props","range","Component","start","startOf","end","toDate","add","current","getTime","push","navigate","action","d","Date","Navigate","PREVIOUS","NEXT","TODAY","console","log","title","paddingTop","format","float","color","e","onColorChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BigCalendar from 'react-big-calendar'\n\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid'\nimport moment from 'moment'\n\n\nclass EventCalendarWeekView extends React.Component {\n  render() {\n    let { date } = this.props\n    let range = EventCalendarWeekView.range(date)\n\n    return <TimeGrid {...this.props} range={range} eventOffset={15} />\n  }\n}\n\n// var getRange = (date) => {\n   \n//     return {\n//       start:start.toDate(),\n//       end:end.toDate()\n//     }\n\n// }\n\nEventCalendarWeekView.range = date => {\n\n\n  let start = moment(date).startOf('week');;\n  let end = moment(start.toDate())\n  end.add(7, 'day');\n\n  let current = moment(start.toDate());\n  let range = []\n\n  while (current.toDate().getTime() < end.toDate().getTime()) {\n    range.push(current.toDate())\n    current.add(1, 'day')\n  }\n\n  return range;\n}\n\nEventCalendarWeekView.navigate = (date, action) => {\n  let d = moment(new Date(date));\n  switch (action) {\n    case BigCalendar.Navigate.PREVIOUS:\n      d.add(-7, 'day')\n      return d.toDate();\n\n    case BigCalendar.Navigate.NEXT:\n      d.add(7, 'day');\n      return d.toDate();\n\n    case BigCalendar.Navigate.TODAY:\n    console.log(\"today\")\n      date = new Date();\n     \n      return date;\n\n    default:\n      return date\n  }\n}\n\n\nEventCalendarWeekView.title = date => {\n  let start = moment(date).startOf('week');\n  let end = moment(start.toDate());\n  end.add(7, 'day');\n  return (\n    <span>\n      <span style={{paddingTop:10}}>{start.format( \"MMM Do\")} - {end.format( \"MMM Do\")}</span>\n      <span className=\"rbc-btn-group\" style={{float:\"right\"}} >\n          <button type=\"button\" className={(EventCalendarWeekView.color == \"status\") ? \"rbc-active\" : \"\"} onClick={(e) => {EventCalendarWeekView.onColorChange(\"status\")}}>Color Status</button>\n          <button type=\"button\" className={(EventCalendarWeekView.color  == \"market\") ? \"rbc-active\" : \"\"} onClick={(e) => {EventCalendarWeekView.onColorChange(\"market\")}}>Color Market</button>\n        </span>  \n    </span>\n    );\n}\n\nexport default EventCalendarWeekView;"]},"metadata":{},"sourceType":"module"}