{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport objectAssign from 'object-assign';\nimport initialState from './initialState'; // IMPORTANT: Note that with Redux, state should NEVER be changed.\n// State is considered immutable. Instead,\n// create a copy of the state passed and set new values on the copy.\n// Note that I'm using Object.assign to create a copy of current state\n// and update values on the copy.\n\nexport default function venDetailReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.ven_detail;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newState;\n\n  switch (action.type) {\n    // VENS\n    case types.LOAD_VEN:\n      return state;\n\n    case types.LOAD_VEN_DETAIL_SUCCESS:\n      newState = objectAssign({}, state, {\n        ven: action.payload\n      });\n      return newState;\n\n    case types.LOAD_VEN_DETAIL_ERROR:\n      return state;\n\n    case types.LOAD_VEN_MARKET_CONTEXT:\n      return state;\n\n    case types.LOAD_VEN_MARKET_CONTEXT_SUCCESS:\n      newState = objectAssign({}, state, {\n        venMarketContext: action.payload\n      });\n      return newState;\n\n    case types.LOAD_VEN_MARKET_CONTEXT_ERROR:\n      return state;\n\n    case types.LOAD_VEN_GROUP:\n      return state;\n\n    case types.LOAD_VEN_GROUP_SUCCESS:\n      newState = objectAssign({}, state, {\n        venGroup: action.payload\n      });\n      return newState;\n\n    case types.LOAD_VEN_GROUP_ERROR:\n      return state;\n\n    case types.ADD_VEN_MARKET_CONTEXT:\n      return state;\n\n    case types.ADD_VEN_MARKET_CONTEXT_SUCCESS:\n      return state;\n\n    case types.ADD_VEN_MARKET_CONTEXT_ERROR:\n      return state;\n\n    case types.REMOVE_VEN_MARKET_CONTEXT:\n      return state;\n\n    case types.REMOVE_VEN_MARKET_CONTEXT_SUCCESS:\n      return state;\n\n    case types.REMOVE_VEN_MARKET_CONTEXT_ERROR:\n      return state;\n\n    case types.ADD_VEN_GROUP:\n      return state;\n\n    case types.ADD_VEN_GROUP_SUCCESS:\n      return state;\n\n    case types.ADD_VEN_GROUP_ERROR:\n      return state;\n\n    case types.REMOVE_VEN_GROUP:\n      return state;\n\n    case types.REMOVE_VEN_GROUP_SUCCESS:\n      return state;\n\n    case types.LOAD_VEN_OPT:\n      return state;\n\n    case types.LOAD_VEN_OPT_SUCCESS:\n      newState = objectAssign({}, state, {\n        venOpt: action.payload\n      });\n      return newState;\n\n    case types.LOAD_VEN_OPT_ERROR:\n      return state;\n    // REGISTRATION PARTY ACTION\n\n    case types.REQUEST_REREGISTRATION_VEN:\n      return state;\n\n    case types.REQUEST_REREGISTRATION_VEN_SUCCESS:\n      return state;\n\n    case types.REQUEST_REREGISTRATION_VEN_ERROR:\n      return state;\n\n    case types.REQUEST_CANCEL_REGISTRATION_VEN:\n      return state;\n\n    case types.REQUEST_CANCEL_REGISTRATION_VEN_SUCCESS:\n      return state;\n\n    case types.REQUEST_CANCEL_REGISTRATION_VEN_ERROR:\n      return state;\n\n    case types.REQUEST_CLEAN_REGISTRATION_VEN:\n      return state;\n\n    case types.REQUEST_CLEAN_REGISTRATION_VEN_SUCCESS:\n      return state;\n\n    case types.REQUEST_CLEAN_REGISTRATION_VEN_ERROR:\n      return state;\n    // MARKET CONTEXT\n\n    case types.LOAD_MARKET_CONTEXT:\n      return state;\n\n    case types.LOAD_MARKET_CONTEXT_SUCCESS:\n      newState = objectAssign({}, state, {\n        marketContext: action.payload\n      });\n      return newState;\n\n    case types.LOAD_MARKET_CONTEXT_ERROR:\n      return state;\n    // GROUPS\n\n    case types.LOAD_GROUP:\n      return state;\n\n    case types.LOAD_GROUP_SUCCESS:\n      newState = objectAssign({}, state, {\n        group: action.payload\n      });\n      return newState;\n\n    case types.LOAD_GROUP_ERROR:\n      return state;\n    // REPORTS\n\n    case types.LOAD_VEN_AVAILABLE_REPORT:\n      return state;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_SUCCESS:\n      newState = objectAssign({}, state, {\n        availableReport: action.payload\n      });\n      return newState;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_ERROR:\n      return state;\n\n    case types.LOAD_VEN_REQUESTED_REPORT:\n      return state;\n\n    case types.LOAD_VEN_REQUESTED_REPORT_SUCCESS:\n      newState = objectAssign({}, state, {\n        requestedReport: action.payload\n      });\n      return newState;\n\n    case types.LOAD_VEN_REQUESTED_REPORT_ERROR:\n      return state;\n\n    case types.LOCATION_CHANGE:\n      if (action.payload.location.pathname.includes(\"/ven/detail\")) {\n        return state;\n      } else {\n        return initialState.event;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/reducers/venDetailReducer.js"],"names":["types","objectAssign","initialState","venDetailReducer","state","ven_detail","action","newState","type","LOAD_VEN","LOAD_VEN_DETAIL_SUCCESS","ven","payload","LOAD_VEN_DETAIL_ERROR","LOAD_VEN_MARKET_CONTEXT","LOAD_VEN_MARKET_CONTEXT_SUCCESS","venMarketContext","LOAD_VEN_MARKET_CONTEXT_ERROR","LOAD_VEN_GROUP","LOAD_VEN_GROUP_SUCCESS","venGroup","LOAD_VEN_GROUP_ERROR","ADD_VEN_MARKET_CONTEXT","ADD_VEN_MARKET_CONTEXT_SUCCESS","ADD_VEN_MARKET_CONTEXT_ERROR","REMOVE_VEN_MARKET_CONTEXT","REMOVE_VEN_MARKET_CONTEXT_SUCCESS","REMOVE_VEN_MARKET_CONTEXT_ERROR","ADD_VEN_GROUP","ADD_VEN_GROUP_SUCCESS","ADD_VEN_GROUP_ERROR","REMOVE_VEN_GROUP","REMOVE_VEN_GROUP_SUCCESS","LOAD_VEN_OPT","LOAD_VEN_OPT_SUCCESS","venOpt","LOAD_VEN_OPT_ERROR","REQUEST_REREGISTRATION_VEN","REQUEST_REREGISTRATION_VEN_SUCCESS","REQUEST_REREGISTRATION_VEN_ERROR","REQUEST_CANCEL_REGISTRATION_VEN","REQUEST_CANCEL_REGISTRATION_VEN_SUCCESS","REQUEST_CANCEL_REGISTRATION_VEN_ERROR","REQUEST_CLEAN_REGISTRATION_VEN","REQUEST_CLEAN_REGISTRATION_VEN_SUCCESS","REQUEST_CLEAN_REGISTRATION_VEN_ERROR","LOAD_MARKET_CONTEXT","LOAD_MARKET_CONTEXT_SUCCESS","marketContext","LOAD_MARKET_CONTEXT_ERROR","LOAD_GROUP","LOAD_GROUP_SUCCESS","group","LOAD_GROUP_ERROR","LOAD_VEN_AVAILABLE_REPORT","LOAD_VEN_AVAILABLE_REPORT_SUCCESS","availableReport","LOAD_VEN_AVAILABLE_REPORT_ERROR","LOAD_VEN_REQUESTED_REPORT","LOAD_VEN_REQUESTED_REPORT_SUCCESS","requestedReport","LOAD_VEN_REQUESTED_REPORT_ERROR","LOCATION_CHANGE","location","pathname","includes","event"],"mappings":"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","sourcesContent":["import * as types from '../constants/actionTypes';\nimport objectAssign from 'object-assign';\nimport initialState from './initialState';\n\n// IMPORTANT: Note that with Redux, state should NEVER be changed.\n// State is considered immutable. Instead,\n// create a copy of the state passed and set new values on the copy.\n// Note that I'm using Object.assign to create a copy of current state\n// and update values on the copy.\nexport default function venDetailReducer( state = initialState.ven_detail, action ) {\n  let newState;\n\n  switch (action.type) {\n\n    // VENS\n    case types.LOAD_VEN:\n      return state;\n\n    case types.LOAD_VEN_DETAIL_SUCCESS:\n      newState = objectAssign( {}, state, {\n        ven: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_VEN_DETAIL_ERROR:\n      return state;\n\n    case types.LOAD_VEN_MARKET_CONTEXT:\n      return state;\n\n    case types.LOAD_VEN_MARKET_CONTEXT_SUCCESS:\n      newState = objectAssign( {}, state, {\n        venMarketContext: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_VEN_MARKET_CONTEXT_ERROR:\n      return state;\n\n    case types.LOAD_VEN_GROUP:\n      return state;\n\n    case types.LOAD_VEN_GROUP_SUCCESS:\n      newState = objectAssign( {}, state, {\n        venGroup: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_VEN_GROUP_ERROR:\n      return state;\n\n    case types.ADD_VEN_MARKET_CONTEXT:\n      return state;\n\n    case types.ADD_VEN_MARKET_CONTEXT_SUCCESS:\n      return state;\n\n\n    case types.ADD_VEN_MARKET_CONTEXT_ERROR:\n      return state;\n\n\n    case types.REMOVE_VEN_MARKET_CONTEXT:\n      return state;\n\n    case types.REMOVE_VEN_MARKET_CONTEXT_SUCCESS:\n      return state;\n\n\n    case types.REMOVE_VEN_MARKET_CONTEXT_ERROR:\n      return state;\n\n\n    case types.ADD_VEN_GROUP:\n      return state;\n\n    case types.ADD_VEN_GROUP_SUCCESS:\n      return state;\n\n\n    case types.ADD_VEN_GROUP_ERROR:\n      return state;\n\n\n    case types.REMOVE_VEN_GROUP:\n      return state;\n\n    case types.REMOVE_VEN_GROUP_SUCCESS:\n      return state;\n\n\n    case types.LOAD_VEN_OPT:\n      return state;\n\n    case types.LOAD_VEN_OPT_SUCCESS:\n      newState = objectAssign( {}, state, {\n        venOpt: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_VEN_OPT_ERROR:\n      return state;\n\n   \n\n      // REGISTRATION PARTY ACTION\n    case types.REQUEST_REREGISTRATION_VEN:\n      return state;\n\n    case types.REQUEST_REREGISTRATION_VEN_SUCCESS:\n      return state;\n\n    case types.REQUEST_REREGISTRATION_VEN_ERROR:\n      return state;\n\n    case types.REQUEST_CANCEL_REGISTRATION_VEN:\n      return state;\n\n    case types.REQUEST_CANCEL_REGISTRATION_VEN_SUCCESS:\n      return state;\n\n    case types.REQUEST_CANCEL_REGISTRATION_VEN_ERROR:\n      return state;\n\n    case types.REQUEST_CLEAN_REGISTRATION_VEN:\n      return state;\n\n    case types.REQUEST_CLEAN_REGISTRATION_VEN_SUCCESS:\n      return state;\n\n    case types.REQUEST_CLEAN_REGISTRATION_VEN_ERROR:\n      return state;\n\n\n\n    // MARKET CONTEXT\n    case types.LOAD_MARKET_CONTEXT:\n      return state;\n\n    case types.LOAD_MARKET_CONTEXT_SUCCESS:\n      newState = objectAssign( {}, state, {\n        marketContext: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_MARKET_CONTEXT_ERROR:\n      return state;\n\n      // GROUPS\n    case types.LOAD_GROUP:\n      return state;\n\n    case types.LOAD_GROUP_SUCCESS:\n      newState = objectAssign( {}, state, {\n        group: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_GROUP_ERROR:\n      return state;\n\n    // REPORTS\n    case types.LOAD_VEN_AVAILABLE_REPORT:\n      return state;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_SUCCESS:\n      newState = objectAssign( {}, state, {\n        availableReport: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_VEN_AVAILABLE_REPORT_ERROR:\n      return state;\n\n    case types.LOAD_VEN_REQUESTED_REPORT:\n      return state;\n\n    case types.LOAD_VEN_REQUESTED_REPORT_SUCCESS:\n      newState = objectAssign( {}, state, {\n        requestedReport: action.payload\n      } );\n      return newState;\n\n    case types.LOAD_VEN_REQUESTED_REPORT_ERROR:\n      return state;\n\n    case types.LOCATION_CHANGE:\n      if(action.payload.location.pathname.includes(\"/ven/detail\")){\n        return state;\n      }\n      else {\n        return initialState.event;\n      }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}