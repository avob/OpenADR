{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport { history } from '../store/configureStore';\nimport { swaggerAction, jsonResponseContentType, multipartResponseContentType, saveData, parseJsonData } from './apiUtils';\nexport var loadVen = function loadVen() {\n  return swaggerAction(types.LOAD_VEN, function (api) {\n    return api.apis['ven-controller'].listVenUsingGET(jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var searchVen = function searchVen(filters, page, size) {\n  var params = {\n    filters: filters,\n    page: page,\n    size: size\n  };\n  return swaggerAction(types.SEARCH_VEN, function (api) {\n    return api.apis['ven-controller'].searchVenUsingPOST(params, jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var loadVenDetail = function loadVenDetail(username) {\n  return swaggerAction(types.LOAD_VEN_DETAIL, function (api) {\n    var params = {\n      venID: username\n    };\n    return api.apis['ven-controller'].findVenByUsernameUsingGET(params, jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var createVen = function createVen(ven) {\n  return swaggerAction(types.CREATE_VEN, function (api) {\n    var params = {\n      dto: ven\n    };\n    return api.apis['ven-controller'].createVenUsingPOST(params, multipartResponseContentType);\n  }, function (data) {\n    saveData(data.data, ven.commonName + '-credentials.tar');\n    history.push(\"/ven/\");\n  });\n};\nexport var deleteVen = function deleteVen(venId) {\n  return swaggerAction(types.DELETE_VEN, function (api) {\n    var params = {\n      venID: venId\n    };\n    return api.apis['ven-controller'].deleteVenByUsernameUsingDELETE(params, jsonResponseContentType);\n  }, function () {\n    history.push(\"/ven/\");\n  }, function (dispatch, getState) {\n    loadVen()(dispatch, getState);\n  });\n};\nexport var loadVenGroup = function loadVenGroup(venId) {\n  return swaggerAction(types.LOAD_VEN_GROUP, function (api) {\n    var params = {\n      venID: venId\n    };\n    return api.apis['ven-controller'].listVenGroupUsingGET(params, jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var loadVenMarketContext = function loadVenMarketContext(venId) {\n  return swaggerAction(types.LOAD_VEN_MARKET_CONTEXT, function (api) {\n    var params = {\n      venID: venId\n    };\n    return api.apis['ven-controller'].listVenMarketContextUsingGET(params, jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var addVenMarketContext = function addVenMarketContext(venId, marketContextId) {\n  return swaggerAction(types.ADD_VEN_MARKET_CONTEXT, function (api) {\n    var params = {\n      venID: venId,\n      marketContextId: marketContextId\n    };\n    return api.apis['ven-controller'].addMarketContextToVenUsingPOST(params, jsonResponseContentType);\n  }, parseJsonData, function (dispatch, getState) {\n    loadVenMarketContext(venId)(dispatch, getState);\n  });\n};\nexport var addVenGroup = function addVenGroup(venId, groupId) {\n  return swaggerAction(types.ADD_VEN_GROUP, function (api) {\n    var params = {\n      venID: venId,\n      groupId: groupId\n    };\n    return api.apis['ven-controller'].addGroupToVenUsingPOST(params, jsonResponseContentType);\n  }, parseJsonData, function (dispatch, getState) {\n    loadVenGroup(venId)(dispatch, getState);\n  });\n};\nexport var removeVenMarketContext = function removeVenMarketContext(venId, marketContextId) {\n  return swaggerAction(types.REMOVE_VEN_MARKET_CONTEXT, function (api) {\n    var params = {\n      venID: venId,\n      marketContextId: marketContextId\n    };\n    return api.apis['ven-controller'].deleteVenMarketContextUsingPOST(params, jsonResponseContentType);\n  }, null, function (dispatch, getState) {\n    loadVenMarketContext(venId)(dispatch, getState);\n  });\n};\nexport var removeVenGroup = function removeVenGroup(venId, groupId) {\n  return swaggerAction(types.REMOVE_VEN_GROUP, function (api) {\n    var params = {\n      venID: venId,\n      groupId: groupId\n    };\n    return api.apis['ven-controller'].deleteVenGroupUsingPOST(params, jsonResponseContentType);\n  }, null, function (dispatch, getState) {\n    loadVenGroup(venId)(dispatch, getState);\n  });\n};\nexport var registerPartyRequestReregistration = function registerPartyRequestReregistration(venId) {\n  return swaggerAction(types.REQUEST_REREGISTRATION_VEN, function (api) {\n    var params = {\n      venID: venId\n    };\n    return api.apis['oadr-20b-ven-controller'].registerPartyRequestReregistrationUsingPOST(params, jsonResponseContentType);\n  });\n};\nexport var registerPartyCancelPartyRegistration = function registerPartyCancelPartyRegistration(venId) {\n  return swaggerAction(types.REQUEST_CANCEL_REGISTRATION_VEN, function (api) {\n    var params = {\n      venID: venId\n    };\n    return api.apis['oadr-20b-ven-controller'].registerPartyCancelPartyRegistrationUsingPOST(params, jsonResponseContentType);\n  });\n};\nexport var cleanRegistration = function cleanRegistration(venId) {\n  return swaggerAction(types.REQUEST_CLEAN_REGISTRATION_VEN, function (api) {\n    var params = {\n      venID: venId\n    };\n    return api.apis['ven-controller'].cleanRegistrationUsingPOST(params, jsonResponseContentType);\n  });\n};\nexport var loadVenAvailableReport = function loadVenAvailableReport(venId, reportSpecifierId) {\n  return swaggerAction(types.LOAD_VEN_AVAILABLE_REPORT, function (api) {\n    var params = {\n      venID: venId,\n      reportSpecifierId: reportSpecifierId\n    };\n    return api.apis['oadr-20b-ven-controller'].viewOtherReportCapabilityUsingGET(params, jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var loadVenAvailableReportDescription = function loadVenAvailableReportDescription(venId, reportSpecifierId) {\n  return swaggerAction(types.LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION, function (api) {\n    var params = {\n      venID: venId,\n      reportSpecifierId: reportSpecifierId\n    };\n    return api.apis['oadr-20b-ven-controller'].viewOtherReportCapabilityDescriptionUsingGET(params, jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var loadVenRequestedReport = function loadVenRequestedReport(venId, reportRequestId) {\n  return swaggerAction(types.LOAD_VEN_REQUESTED_REPORT, function (api) {\n    var params = {\n      venID: venId,\n      reportRequestId: reportRequestId\n    };\n    return api.apis['oadr-20b-ven-controller'].viewReportRequestUsingGET(params, jsonResponseContentType);\n  }, parseJsonData);\n};\nexport var requestRegisterReport = function requestRegisterReport(venId) {\n  return swaggerAction(types.REQUEST_VEN_REGISTER_REPORT, function (api) {\n    var params = {\n      venID: venId\n    };\n    return api.apis['oadr-20b-ven-controller'].requestRegisterReportUsingPOST(params, jsonResponseContentType);\n  });\n};\nexport var sendRegisterReport = function sendRegisterReport(venId) {\n  return swaggerAction(types.SEND_VTN_REGISTER_REPORT, function (api) {\n    var params = {\n      venID: venId\n    };\n    return api.apis['oadr-20b-ven-controller'].sendRegisterReportUsingPOST(params, jsonResponseContentType);\n  });\n};\nexport var createRequestedReport = function createRequestedReport(venId, reportSpecifierId, start, end, rid) {\n  if (rid == null) {\n    return swaggerAction(types.CREATE_REQUESTED_REPORT, function (api) {\n      var params = {\n        venID: venId,\n        reportSpecifierId: reportSpecifierId,\n        start: start,\n        end: end\n      };\n      return api.apis['oadr-20b-ven-controller'].requestAllOtherReportCapabilityDescriptionRidUsingPOST(params, jsonResponseContentType);\n    }, function () {\n      history.push(\"/ven/detail/\" + venId + \"/reports\");\n    });\n  } else {\n    return swaggerAction(types.CREATE_REQUESTED_REPORT, function (api) {\n      var params = {\n        venID: venId,\n        reportSpecifierId: reportSpecifierId,\n        start: start,\n        end: end,\n        rid: rid.join(\",\")\n      };\n      return api.apis['oadr-20b-ven-controller'].requestOtherReportCapabilityDescriptionRidUsingPOST(params, jsonResponseContentType);\n    }, function () {\n      history.push(\"/ven/detail/\" + venId + \"/reports\");\n    });\n  }\n};\nexport var createRequestedReportSubscription = function createRequestedReportSubscription(venId, reportSpecifierId, granularity, reportBackDuration, rid) {\n  if (rid == null) {\n    return swaggerAction(types.CREATE_REQUESTED_REPORT, function (api) {\n      var params = {\n        venID: venId,\n        reportSpecifierId: reportSpecifierId,\n        granularity: granularity,\n        reportBackDuration: reportBackDuration\n      };\n      return api.apis['oadr-20b-ven-controller'].subscribeAllOtherReportCapabilityDescriptionRidUsingPOST(params, jsonResponseContentType);\n    }, function () {\n      history.push(\"/ven/detail/\" + venId + \"/reports\");\n    });\n  } else {\n    return swaggerAction(types.CREATE_REQUESTED_REPORT, function (api) {\n      var params = {\n        venID: venId,\n        reportSpecifierId: reportSpecifierId,\n        granularity: granularity,\n        reportBackDuration: reportBackDuration,\n        rid: rid.join(\",\")\n      };\n      return api.apis['oadr-20b-ven-controller'].subscribeOtherReportCapabilityDescriptionRidUsingPOST(params, jsonResponseContentType);\n    }, function () {\n      history.push(\"/ven/detail/\" + venId + \"/reports\");\n    });\n  }\n};\nexport var cancelRequestReportSubscription = function cancelRequestReportSubscription(venId, reportRequestId) {\n  return swaggerAction(types.CANCEL_REQUESTED_REPORT, function (api) {\n    var params = {\n      venID: venId,\n      reportRequestId: reportRequestId\n    };\n    return api.apis['oadr-20b-ven-controller'].cancelSubscriptionReportRequestUsingPOST(params, jsonResponseContentType);\n  }, null, function (dispatch, getState) {\n    loadVenRequestedReport(venId)(dispatch, getState);\n  });\n};\nexport var loadVenOpt = function loadVenOpt(venId) {\n  return swaggerAction(types.LOAD_VEN_OPT, function (api) {\n    var params = {\n      venID: venId\n    };\n    return api.apis['oadr-20b-ven-controller'].venOptUsingGET(params, jsonResponseContentType);\n  }, parseJsonData);\n};","map":{"version":3,"sources":["/home/bzanni/Documents/github/OpenADR/OpenADRServerVTN20b/frontend/src/actions/venActions.js"],"names":["types","history","swaggerAction","jsonResponseContentType","multipartResponseContentType","saveData","parseJsonData","loadVen","LOAD_VEN","api","apis","listVenUsingGET","searchVen","filters","page","size","params","SEARCH_VEN","searchVenUsingPOST","loadVenDetail","username","LOAD_VEN_DETAIL","venID","findVenByUsernameUsingGET","createVen","ven","CREATE_VEN","dto","createVenUsingPOST","data","commonName","push","deleteVen","venId","DELETE_VEN","deleteVenByUsernameUsingDELETE","dispatch","getState","loadVenGroup","LOAD_VEN_GROUP","listVenGroupUsingGET","loadVenMarketContext","LOAD_VEN_MARKET_CONTEXT","listVenMarketContextUsingGET","addVenMarketContext","marketContextId","ADD_VEN_MARKET_CONTEXT","addMarketContextToVenUsingPOST","addVenGroup","groupId","ADD_VEN_GROUP","addGroupToVenUsingPOST","removeVenMarketContext","REMOVE_VEN_MARKET_CONTEXT","deleteVenMarketContextUsingPOST","removeVenGroup","REMOVE_VEN_GROUP","deleteVenGroupUsingPOST","registerPartyRequestReregistration","REQUEST_REREGISTRATION_VEN","registerPartyRequestReregistrationUsingPOST","registerPartyCancelPartyRegistration","REQUEST_CANCEL_REGISTRATION_VEN","registerPartyCancelPartyRegistrationUsingPOST","cleanRegistration","REQUEST_CLEAN_REGISTRATION_VEN","cleanRegistrationUsingPOST","loadVenAvailableReport","reportSpecifierId","LOAD_VEN_AVAILABLE_REPORT","viewOtherReportCapabilityUsingGET","loadVenAvailableReportDescription","LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION","viewOtherReportCapabilityDescriptionUsingGET","loadVenRequestedReport","reportRequestId","LOAD_VEN_REQUESTED_REPORT","viewReportRequestUsingGET","requestRegisterReport","REQUEST_VEN_REGISTER_REPORT","requestRegisterReportUsingPOST","sendRegisterReport","SEND_VTN_REGISTER_REPORT","sendRegisterReportUsingPOST","createRequestedReport","start","end","rid","CREATE_REQUESTED_REPORT","requestAllOtherReportCapabilityDescriptionRidUsingPOST","join","requestOtherReportCapabilityDescriptionRidUsingPOST","createRequestedReportSubscription","granularity","reportBackDuration","subscribeAllOtherReportCapabilityDescriptionRidUsingPOST","subscribeOtherReportCapabilityDescriptionRidUsingPOST","cancelRequestReportSubscription","CANCEL_REQUESTED_REPORT","cancelSubscriptionReportRequestUsingPOST","loadVenOpt","LOAD_VEN_OPT","venOptUsingGET"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,SAASC,aAAT,EAAwBC,uBAAxB,EAAiDC,4BAAjD,EAA+EC,QAA/E,EAAyFC,aAAzF,QAA8G,YAA9G;AAGA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAOL,aAAa,CAACF,KAAK,CAACQ,QAAP,EAClB,UAACC,GAAD,EAAS;AACP,WAAOA,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6BC,eAA7B,CAA6CR,uBAA7C,CAAP;AACD,GAHiB,EAIlBG,aAJkB,CAApB;AAMD,CAPM;AASP,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAUC,IAAV,EAAgBC,IAAhB,EAAyB;AAChD,MAAIC,MAAM,GAAG;AAACH,IAAAA,OAAO,EAAPA,OAAD;AAAUC,IAAAA,IAAI,EAAJA,IAAV;AAAgBC,IAAAA,IAAI,EAAJA;AAAhB,GAAb;AACA,SAAOb,aAAa,CAACF,KAAK,CAACiB,UAAP,EAClB,UAACR,GAAD,EAAS;AACP,WAAOA,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6BQ,kBAA7B,CAAgDF,MAAhD,EAAwDb,uBAAxD,CAAP;AACD,GAHiB,EAIlBG,aAJkB,CAApB;AAMD,CARM;AAUP,OAAO,IAAMa,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AACzC,SAAOlB,aAAa,CAACF,KAAK,CAACqB,eAAP,EAClB,UAACZ,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEF;AAAT,KAAb;AACA,WAAOX,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6Ba,yBAA7B,CAAuDP,MAAvD,EAA+Db,uBAA/D,CAAP;AACD,GAJiB,EAKlBG,aALkB,CAApB;AAOD,CARM;AAUP,OAAO,IAAMkB,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AAChC,SAAOvB,aAAa,CAACF,KAAK,CAAC0B,UAAP,EAClB,UAACjB,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEW,MAAAA,GAAG,EAAEF;AAAP,KAAb;AACA,WAAOhB,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6BkB,kBAA7B,CAAgDZ,MAAhD,EAAwDZ,4BAAxD,CAAP;AACD,GAJiB,EAKlB,UAACyB,IAAD,EAAU;AAAExB,IAAAA,QAAQ,CAAEwB,IAAI,CAACA,IAAP,EAAaJ,GAAG,CAACK,UAAJ,GAAiB,kBAA9B,CAAR;AAA4D7B,IAAAA,OAAO,CAAC8B,IAAR,CAAa,OAAb;AAAuB,GAL7E,CAApB;AAOD,CARM;AAUP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAClC,SAAO/B,aAAa,CAACF,KAAK,CAACkC,UAAP,EAClB,UAACzB,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW;AAAT,KAAb;AACA,WAAQxB,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6ByB,8BAA7B,CAA4DnB,MAA5D,EAAoEb,uBAApE,CAAR;AACD,GAJiB,EAKlB,YAAM;AAAEF,IAAAA,OAAO,CAAC8B,IAAR,CAAa,OAAb;AAAyB,GALf,EAMlB,UAACK,QAAD,EAAWC,QAAX,EAAwB;AAAE9B,IAAAA,OAAO,GAAG6B,QAAH,EAAaC,QAAb,CAAP;AAA+B,GANvC,CAApB;AAQD,CATM;AAWP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACL,KAAD,EAAW;AACrC,SAAO/B,aAAa,CAACF,KAAK,CAACuC,cAAP,EAClB,UAAC9B,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW;AAAT,KAAb;AACA,WAAQxB,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6B8B,oBAA7B,CAAkDxB,MAAlD,EAA0Db,uBAA1D,CAAR;AACD,GAJiB,EAKlBG,aALkB,CAApB;AAOD,CARM;AAUP,OAAO,IAAMmC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACR,KAAD,EAAW;AAC7C,SAAO/B,aAAa,CAACF,KAAK,CAAC0C,uBAAP,EAClB,UAACjC,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW;AAAT,KAAb;AACA,WAAQxB,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6BiC,4BAA7B,CAA0D3B,MAA1D,EAAkEb,uBAAlE,CAAR;AACD,GAJiB,EAKlBG,aALkB,CAApB;AAOD,CARM;AAUP,OAAO,IAAMsC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACX,KAAD,EAAQY,eAAR,EAA4B;AAC7D,SAAO3C,aAAa,CAACF,KAAK,CAAC8C,sBAAP,EAClB,UAACrC,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW,KAAT;AAAgBY,MAAAA,eAAe,EAAEA;AAAjC,KAAb;AACA,WAAQpC,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6BqC,8BAA7B,CAA4D/B,MAA5D,EAAoEb,uBAApE,CAAR;AACD,GAJiB,EAKlBG,aALkB,EAMlB,UAAC8B,QAAD,EAAWC,QAAX,EAAwB;AAAEI,IAAAA,oBAAoB,CAAER,KAAF,CAApB,CAA+BG,QAA/B,EAAyCC,QAAzC;AAAqD,GAN7D,CAApB;AAQD,CATM;AAWP,OAAO,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACf,KAAD,EAAQgB,OAAR,EAAoB;AAC7C,SAAO/C,aAAa,CAACF,KAAK,CAACkD,aAAP,EAClB,UAACzC,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW,KAAT;AAAgBgB,MAAAA,OAAO,EAAEA;AAAzB,KAAb;AACA,WAAQxC,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6ByC,sBAA7B,CAAoDnC,MAApD,EAA4Db,uBAA5D,CAAR;AACD,GAJiB,EAKlBG,aALkB,EAMlB,UAAC8B,QAAD,EAAWC,QAAX,EAAwB;AAAEC,IAAAA,YAAY,CAAEL,KAAF,CAAZ,CAAuBG,QAAvB,EAAiCC,QAAjC;AAA6C,GANrD,CAApB;AAQD,CATM;AAWP,OAAO,IAAMe,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACnB,KAAD,EAAQY,eAAR,EAA4B;AAChE,SAAO3C,aAAa,CAACF,KAAK,CAACqD,yBAAP,EAClB,UAAC5C,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW,KAAT;AAAgBY,MAAAA,eAAe,EAAEA;AAAjC,KAAb;AACA,WAAQpC,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6B4C,+BAA7B,CAA6DtC,MAA7D,EAAqEb,uBAArE,CAAR;AACD,GAJiB,EAKlB,IALkB,EAMlB,UAACiC,QAAD,EAAWC,QAAX,EAAwB;AAAEI,IAAAA,oBAAoB,CAAER,KAAF,CAApB,CAA+BG,QAA/B,EAAyCC,QAAzC;AAAqD,GAN7D,CAApB;AAQD,CATM;AAWP,OAAO,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,CAACtB,KAAD,EAAQgB,OAAR,EAAoB;AAChD,SAAO/C,aAAa,CAACF,KAAK,CAACwD,gBAAP,EAClB,UAAC/C,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW,KAAT;AAAgBgB,MAAAA,OAAO,EAAEA;AAAzB,KAAb;AACA,WAAQxC,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6B+C,uBAA7B,CAAqDzC,MAArD,EAA6Db,uBAA7D,CAAR;AACD,GAJiB,EAKlB,IALkB,EAMlB,UAACiC,QAAD,EAAWC,QAAX,EAAwB;AAAEC,IAAAA,YAAY,CAAEL,KAAF,CAAZ,CAAuBG,QAAvB,EAAiCC,QAAjC;AAA6C,GANrD,CAApB;AAQD,CATM;AAWP,OAAO,IAAMqB,kCAAkC,GAAG,SAArCA,kCAAqC,CAACzB,KAAD,EAAW;AAC3D,SAAO/B,aAAa,CAACF,KAAK,CAAC2D,0BAAP,EAClB,UAAClD,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW;AAAT,KAAb;AACA,WAAQxB,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsCkD,2CAAtC,CAAkF5C,MAAlF,EAA0Fb,uBAA1F,CAAR;AACD,GAJiB,CAApB;AAMD,CAPM;AASP,OAAO,IAAM0D,oCAAoC,GAAG,SAAvCA,oCAAuC,CAAC5B,KAAD,EAAW;AAC7D,SAAO/B,aAAa,CAACF,KAAK,CAAC8D,+BAAP,EAClB,UAACrD,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW;AAAT,KAAb;AACA,WAAQxB,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsCqD,6CAAtC,CAAoF/C,MAApF,EAA4Fb,uBAA5F,CAAR;AACD,GAJiB,CAApB;AAMD,CAPM;AASP,OAAO,IAAM6D,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC/B,KAAD,EAAW;AAC1C,SAAO/B,aAAa,CAACF,KAAK,CAACiE,8BAAP,EAClB,UAACxD,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW;AAAT,KAAb;AACA,WAAQxB,GAAG,CAACC,IAAJ,CAAU,gBAAV,EAA6BwD,0BAA7B,CAAwDlD,MAAxD,EAAgEb,uBAAhE,CAAR;AACD,GAJiB,CAApB;AAMD,CAPM;AASP,OAAO,IAAMgE,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAClC,KAAD,EAAQmC,iBAAR,EAA8B;AAClE,SAAOlE,aAAa,CAACF,KAAK,CAACqE,yBAAP,EAClB,UAAC5D,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW,KAAT;AAAgBmC,MAAAA,iBAAiB,EAACA;AAAlC,KAAb;AACA,WAAQ3D,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsC4D,iCAAtC,CAAwEtD,MAAxE,EAAgFb,uBAAhF,CAAR;AACD,GAJiB,EAKlBG,aALkB,CAApB;AAOD,CARM;AAUP,OAAO,IAAMiE,iCAAiC,GAAG,SAApCA,iCAAoC,CAACtC,KAAD,EAAQmC,iBAAR,EAA8B;AAC7E,SAAOlE,aAAa,CAACF,KAAK,CAACwE,qCAAP,EAClB,UAAC/D,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW,KAAT;AAAgBmC,MAAAA,iBAAiB,EAAEA;AAAnC,KAAb;AACA,WAAQ3D,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsC+D,4CAAtC,CAAmFzD,MAAnF,EAA2Fb,uBAA3F,CAAR;AACD,GAJiB,EAKlBG,aALkB,CAApB;AAOD,CARM;AAUP,OAAO,IAAMoE,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACzC,KAAD,EAAQ0C,eAAR,EAA4B;AAChE,SAAOzE,aAAa,CAACF,KAAK,CAAC4E,yBAAP,EAClB,UAACnE,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW,KAAT;AAAgB0C,MAAAA,eAAe,EAAEA;AAAjC,KAAb;AACA,WAAQlE,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsCmE,yBAAtC,CAAgE7D,MAAhE,EAAwEb,uBAAxE,CAAR;AACD,GAJiB,EAKlBG,aALkB,CAApB;AAOD,CARM;AAUP,OAAO,IAAMwE,qBAAqB,GAAI,SAAzBA,qBAAyB,CAAC7C,KAAD,EAAW;AAC/C,SAAO/B,aAAa,CAACF,KAAK,CAAC+E,2BAAP,EAClB,UAACtE,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW;AAAT,KAAb;AACA,WAAQxB,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsCsE,8BAAtC,CAAqEhE,MAArE,EAA6Eb,uBAA7E,CAAR;AACD,GAJiB,CAApB;AAMD,CAPM;AASP,OAAO,IAAM8E,kBAAkB,GAAI,SAAtBA,kBAAsB,CAAChD,KAAD,EAAW;AAC5C,SAAO/B,aAAa,CAACF,KAAK,CAACkF,wBAAP,EAClB,UAACzE,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW;AAAT,KAAb;AACA,WAAQxB,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsCyE,2BAAtC,CAAkEnE,MAAlE,EAA0Eb,uBAA1E,CAAR;AACD,GAJiB,CAApB;AAMD,CAPM;AASP,OAAO,IAAMiF,qBAAqB,GAAI,SAAzBA,qBAAyB,CAACnD,KAAD,EAAQmC,iBAAR,EAA2BiB,KAA3B,EAAkCC,GAAlC,EAAuCC,GAAvC,EAA+C;AACnF,MAAGA,GAAG,IAAI,IAAV,EAAgB;AACd,WAAOrF,aAAa,CAACF,KAAK,CAACwF,uBAAP,EAClB,UAAC/E,GAAD,EAAS;AACP,UAAIO,MAAM,GAAG;AAAEM,QAAAA,KAAK,EAAEW,KAAT;AAAgBmC,QAAAA,iBAAiB,EAAEA,iBAAnC;AAAsDiB,QAAAA,KAAK,EAAEA,KAA7D;AAAoEC,QAAAA,GAAG,EAAEA;AAAzE,OAAb;AACA,aAAQ7E,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsC+E,sDAAtC,CAA6FzE,MAA7F,EAAqGb,uBAArG,CAAR;AACD,KAJiB,EAKlB,YAAM;AAAEF,MAAAA,OAAO,CAAC8B,IAAR,CAAa,iBAAeE,KAAf,GAAqB,UAAlC;AAAiD,KALvC,CAApB;AAOD,GARD,MASK;AACH,WAAO/B,aAAa,CAACF,KAAK,CAACwF,uBAAP,EAClB,UAAC/E,GAAD,EAAS;AACP,UAAIO,MAAM,GAAG;AAAEM,QAAAA,KAAK,EAAEW,KAAT;AAAgBmC,QAAAA,iBAAiB,EAAEA,iBAAnC;AAAsDiB,QAAAA,KAAK,EAAEA,KAA7D;AAAoEC,QAAAA,GAAG,EAAEA,GAAzE;AAA8EC,QAAAA,GAAG,EAACA,GAAG,CAACG,IAAJ,CAAS,GAAT;AAAlF,OAAb;AACA,aAAQjF,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsCiF,mDAAtC,CAA0F3E,MAA1F,EAAkGb,uBAAlG,CAAR;AACD,KAJiB,EAKlB,YAAM;AAAEF,MAAAA,OAAO,CAAC8B,IAAR,CAAa,iBAAeE,KAAf,GAAqB,UAAlC;AAAiD,KALvC,CAApB;AAOD;AACF,CAnBM;AAsBP,OAAO,IAAM2D,iCAAiC,GAAI,SAArCA,iCAAqC,CAAC3D,KAAD,EAAQmC,iBAAR,EAA2ByB,WAA3B,EAAwCC,kBAAxC,EAA4DP,GAA5D,EAAoE;AAEnH,MAAGA,GAAG,IAAI,IAAV,EAAgB;AACf,WAAOrF,aAAa,CAACF,KAAK,CAACwF,uBAAP,EAClB,UAAC/E,GAAD,EAAS;AACP,UAAIO,MAAM,GAAG;AAAEM,QAAAA,KAAK,EAAEW,KAAT;AACTmC,QAAAA,iBAAiB,EAAEA,iBADV;AAETyB,QAAAA,WAAW,EAAEA,WAFJ;AAGTC,QAAAA,kBAAkB,EAAEA;AAHX,OAAb;AAKA,aAAQrF,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsCqF,wDAAtC,CAA+F/E,MAA/F,EAAuGb,uBAAvG,CAAR;AACD,KARiB,EASlB,YAAM;AAAEF,MAAAA,OAAO,CAAC8B,IAAR,CAAa,iBAAeE,KAAf,GAAqB,UAAlC;AAAiD,KATvC,CAApB;AAWD,GAZA,MAaI;AACH,WAAO/B,aAAa,CAACF,KAAK,CAACwF,uBAAP,EAClB,UAAC/E,GAAD,EAAS;AACP,UAAIO,MAAM,GAAG;AAAEM,QAAAA,KAAK,EAAEW,KAAT;AACTmC,QAAAA,iBAAiB,EAAEA,iBADV;AAETyB,QAAAA,WAAW,EAAEA,WAFJ;AAGTC,QAAAA,kBAAkB,EAAEA,kBAHX;AAITP,QAAAA,GAAG,EAACA,GAAG,CAACG,IAAJ,CAAS,GAAT;AAJK,OAAb;AAMA,aAAQjF,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsCsF,qDAAtC,CAA4FhF,MAA5F,EAAoGb,uBAApG,CAAR;AACD,KATiB,EAUlB,YAAM;AAAEF,MAAAA,OAAO,CAAC8B,IAAR,CAAa,iBAAeE,KAAf,GAAqB,UAAlC;AAAiD,KAVvC,CAApB;AAYD;AACF,CA7BM;AA+BP,OAAO,IAAMgE,+BAA+B,GAAI,SAAnCA,+BAAmC,CAAChE,KAAD,EAAQ0C,eAAR,EAA4B;AAC1E,SAAOzE,aAAa,CAACF,KAAK,CAACkG,uBAAP,EAClB,UAACzF,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW,KAAT;AAAgB0C,MAAAA,eAAe,EAACA;AAAhC,KAAb;AACA,WAAQlE,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsCyF,wCAAtC,CAA+EnF,MAA/E,EAAuFb,uBAAvF,CAAR;AACD,GAJiB,EAKlB,IALkB,EAMlB,UAACiC,QAAD,EAAWC,QAAX,EAAwB;AAAEqC,IAAAA,sBAAsB,CAAEzC,KAAF,CAAtB,CAAiCG,QAAjC,EAA2CC,QAA3C;AAAuD,GAN/D,CAApB;AAQD,CATM;AAYP,OAAO,IAAM+D,UAAU,GAAG,SAAbA,UAAa,CAACnE,KAAD,EAAW;AACnC,SAAO/B,aAAa,CAACF,KAAK,CAACqG,YAAP,EAClB,UAAC5F,GAAD,EAAS;AACP,QAAIO,MAAM,GAAG;AAAEM,MAAAA,KAAK,EAAEW;AAAT,KAAb;AACA,WAAQxB,GAAG,CAACC,IAAJ,CAAU,yBAAV,EAAsC4F,cAAtC,CAAqDtF,MAArD,EAA6Db,uBAA7D,CAAR;AACD,GAJiB,EAKlBG,aALkB,CAApB;AAOD,CARM","sourcesContent":["import * as types from '../constants/actionTypes';\nimport { history } from '../store/configureStore';\n\nimport { swaggerAction, jsonResponseContentType, multipartResponseContentType, saveData, parseJsonData } from './apiUtils';\n\n\nexport const loadVen = () => {\n  return swaggerAction(types.LOAD_VEN, \n    (api) => {\n      return api.apis[ 'ven-controller' ].listVenUsingGET(jsonResponseContentType);\n    }, \n    parseJsonData\n  );\n}\n\nexport const searchVen = (filters, page, size) => {\n  var params = {filters, page, size};\n  return swaggerAction(types.SEARCH_VEN, \n    (api) => {\n      return api.apis[ 'ven-controller' ].searchVenUsingPOST(params, jsonResponseContentType);\n    }, \n    parseJsonData\n  );\n}\n\nexport const loadVenDetail = (username) => {\n  return swaggerAction(types.LOAD_VEN_DETAIL, \n    (api) => {\n      var params = { venID: username };\n      return api.apis[ 'ven-controller' ].findVenByUsernameUsingGET(params, jsonResponseContentType);\n    },\n    parseJsonData\n  );\n}\n\nexport const createVen = (ven) => {\n  return swaggerAction(types.CREATE_VEN, \n    (api) => {\n      var params = { dto: ven };\n      return api.apis[ 'ven-controller' ].createVenUsingPOST(params, multipartResponseContentType);\n    },\n    (data) => { saveData( data.data, ven.commonName + '-credentials.tar' ); history.push(\"/ven/\") }\n  );\n}\n\nexport const deleteVen = (venId) => {\n  return swaggerAction(types.DELETE_VEN, \n    (api) => {\n      var params = { venID: venId };\n      return  api.apis[ 'ven-controller' ].deleteVenByUsernameUsingDELETE(params, jsonResponseContentType);\n    },\n    () => { history.push(\"/ven/\");  },\n    (dispatch, getState) => { loadVen()(dispatch, getState) }\n  );\n}\n\nexport const loadVenGroup = (venId) => {\n  return swaggerAction(types.LOAD_VEN_GROUP, \n    (api) => {\n      var params = { venID: venId };\n      return  api.apis[ 'ven-controller' ].listVenGroupUsingGET(params, jsonResponseContentType);\n    },\n    parseJsonData\n  );\n}\n\nexport const loadVenMarketContext = (venId) => {\n  return swaggerAction(types.LOAD_VEN_MARKET_CONTEXT, \n    (api) => {\n      var params = { venID: venId };\n      return  api.apis[ 'ven-controller' ].listVenMarketContextUsingGET(params, jsonResponseContentType);\n    },\n    parseJsonData\n  );\n}\n\nexport const addVenMarketContext = (venId, marketContextId) => {\n  return swaggerAction(types.ADD_VEN_MARKET_CONTEXT, \n    (api) => {\n      var params = { venID: venId, marketContextId: marketContextId };\n      return  api.apis[ 'ven-controller' ].addMarketContextToVenUsingPOST(params, jsonResponseContentType);\n    },\n    parseJsonData,\n    (dispatch, getState) => { loadVenMarketContext( venId )( dispatch, getState ) }\n  );\n}\n\nexport const addVenGroup = (venId, groupId) => {\n  return swaggerAction(types.ADD_VEN_GROUP, \n    (api) => {\n      var params = { venID: venId, groupId: groupId };\n      return  api.apis[ 'ven-controller' ].addGroupToVenUsingPOST(params, jsonResponseContentType);\n    },\n    parseJsonData,\n    (dispatch, getState) => { loadVenGroup( venId )( dispatch, getState ) }\n  );\n}\n\nexport const removeVenMarketContext = (venId, marketContextId) => {\n  return swaggerAction(types.REMOVE_VEN_MARKET_CONTEXT, \n    (api) => {\n      var params = { venID: venId, marketContextId: marketContextId };\n      return  api.apis[ 'ven-controller' ].deleteVenMarketContextUsingPOST(params, jsonResponseContentType);\n    },\n    null,\n    (dispatch, getState) => { loadVenMarketContext( venId )( dispatch, getState ) }\n  );\n}\n\nexport const removeVenGroup = (venId, groupId) => {\n  return swaggerAction(types.REMOVE_VEN_GROUP, \n    (api) => {\n      var params = { venID: venId, groupId: groupId };\n      return  api.apis[ 'ven-controller' ].deleteVenGroupUsingPOST(params, jsonResponseContentType);\n    },\n    null,\n    (dispatch, getState) => { loadVenGroup( venId )( dispatch, getState ) }\n  );\n}\n\nexport const registerPartyRequestReregistration = (venId) => {\n  return swaggerAction(types.REQUEST_REREGISTRATION_VEN, \n    (api) => {\n      var params = { venID: venId };\n      return  api.apis[ 'oadr-20b-ven-controller' ].registerPartyRequestReregistrationUsingPOST(params, jsonResponseContentType);\n    },\n  );\n}\n\nexport const registerPartyCancelPartyRegistration = (venId) => {\n  return swaggerAction(types.REQUEST_CANCEL_REGISTRATION_VEN, \n    (api) => {\n      var params = { venID: venId };\n      return  api.apis[ 'oadr-20b-ven-controller' ].registerPartyCancelPartyRegistrationUsingPOST(params, jsonResponseContentType);\n    },\n  );\n}\n\nexport const cleanRegistration = (venId) => {\n  return swaggerAction(types.REQUEST_CLEAN_REGISTRATION_VEN, \n    (api) => {\n      var params = { venID: venId };\n      return  api.apis[ 'ven-controller' ].cleanRegistrationUsingPOST(params, jsonResponseContentType);\n    },\n  );\n}\n\nexport const loadVenAvailableReport = (venId, reportSpecifierId) => {\n  return swaggerAction(types.LOAD_VEN_AVAILABLE_REPORT, \n    (api) => {\n      var params = { venID: venId, reportSpecifierId:reportSpecifierId };\n      return  api.apis[ 'oadr-20b-ven-controller' ].viewOtherReportCapabilityUsingGET(params, jsonResponseContentType);\n    },\n    parseJsonData\n  );\n}\n\nexport const loadVenAvailableReportDescription = (venId, reportSpecifierId) => {\n  return swaggerAction(types.LOAD_VEN_AVAILABLE_REPORT_DESCRIPTION, \n    (api) => {\n      var params = { venID: venId, reportSpecifierId: reportSpecifierId };\n      return  api.apis[ 'oadr-20b-ven-controller' ].viewOtherReportCapabilityDescriptionUsingGET(params, jsonResponseContentType);\n    },\n    parseJsonData\n  );\n}\n\nexport const loadVenRequestedReport = (venId, reportRequestId) => {\n  return swaggerAction(types.LOAD_VEN_REQUESTED_REPORT, \n    (api) => {\n      var params = { venID: venId, reportRequestId: reportRequestId };\n      return  api.apis[ 'oadr-20b-ven-controller' ].viewReportRequestUsingGET(params, jsonResponseContentType);\n    },\n    parseJsonData\n  );\n}\n\nexport const requestRegisterReport  = (venId) => {\n  return swaggerAction(types.REQUEST_VEN_REGISTER_REPORT, \n    (api) => {\n      var params = { venID: venId };\n      return  api.apis[ 'oadr-20b-ven-controller' ].requestRegisterReportUsingPOST(params, jsonResponseContentType);\n    },\n  );\n}\n\nexport const sendRegisterReport  = (venId) => {\n  return swaggerAction(types.SEND_VTN_REGISTER_REPORT, \n    (api) => {\n      var params = { venID: venId };\n      return  api.apis[ 'oadr-20b-ven-controller' ].sendRegisterReportUsingPOST(params, jsonResponseContentType);\n    },\n  );\n}\n\nexport const createRequestedReport  = (venId, reportSpecifierId, start, end, rid) => {\n  if(rid == null) {\n    return swaggerAction(types.CREATE_REQUESTED_REPORT, \n      (api) => {\n        var params = { venID: venId, reportSpecifierId: reportSpecifierId, start: start, end: end };\n        return  api.apis[ 'oadr-20b-ven-controller' ].requestAllOtherReportCapabilityDescriptionRidUsingPOST(params, jsonResponseContentType);\n      },\n      () => { history.push(\"/ven/detail/\"+venId+\"/reports\");  },\n    );\n  }\n  else {\n    return swaggerAction(types.CREATE_REQUESTED_REPORT, \n      (api) => {\n        var params = { venID: venId, reportSpecifierId: reportSpecifierId, start: start, end: end, rid:rid.join(\",\") };\n        return  api.apis[ 'oadr-20b-ven-controller' ].requestOtherReportCapabilityDescriptionRidUsingPOST(params, jsonResponseContentType);\n      },\n      () => { history.push(\"/ven/detail/\"+venId+\"/reports\");  },\n    );\n  }\n}\n\n\nexport const createRequestedReportSubscription  = (venId, reportSpecifierId, granularity, reportBackDuration, rid) => {\n\n   if(rid == null) {\n    return swaggerAction(types.CREATE_REQUESTED_REPORT, \n      (api) => {\n        var params = { venID: venId\n          , reportSpecifierId: reportSpecifierId\n          , granularity: granularity\n          , reportBackDuration: reportBackDuration\n        };\n        return  api.apis[ 'oadr-20b-ven-controller' ].subscribeAllOtherReportCapabilityDescriptionRidUsingPOST(params, jsonResponseContentType);\n      },\n      () => { history.push(\"/ven/detail/\"+venId+\"/reports\");  },\n    );\n  }\n  else {\n    return swaggerAction(types.CREATE_REQUESTED_REPORT, \n      (api) => {\n        var params = { venID: venId\n          , reportSpecifierId: reportSpecifierId\n          , granularity: granularity\n          , reportBackDuration: reportBackDuration\n          , rid:rid.join(\",\") \n        };\n        return  api.apis[ 'oadr-20b-ven-controller' ].subscribeOtherReportCapabilityDescriptionRidUsingPOST(params, jsonResponseContentType);\n      },\n      () => { history.push(\"/ven/detail/\"+venId+\"/reports\");  },\n    );\n  }\n}\n\nexport const cancelRequestReportSubscription  = (venId, reportRequestId) => {\n  return swaggerAction(types.CANCEL_REQUESTED_REPORT, \n    (api) => {\n      var params = { venID: venId, reportRequestId:reportRequestId };\n      return  api.apis[ 'oadr-20b-ven-controller' ].cancelSubscriptionReportRequestUsingPOST(params, jsonResponseContentType);\n    },\n    null,\n    (dispatch, getState) => { loadVenRequestedReport( venId )( dispatch, getState ) }\n  );\n}\n\n\nexport const loadVenOpt = (venId) => {\n  return swaggerAction(types.LOAD_VEN_OPT, \n    (api) => {\n      var params = { venID: venId };\n      return  api.apis[ 'oadr-20b-ven-controller' ].venOptUsingGET(params, jsonResponseContentType);\n    },\n    parseJsonData\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}