{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _height = _interopRequireDefault(require(\"dom-helpers/query/height\"));\n\nvar _querySelectorAll = _interopRequireDefault(require(\"dom-helpers/query/querySelectorAll\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _dates = _interopRequireDefault(require(\"./utils/dates\"));\n\nvar _BackgroundCells = _interopRequireDefault(require(\"./BackgroundCells\"));\n\nvar _EventRow = _interopRequireDefault(require(\"./EventRow\"));\n\nvar _EventEndingRow = _interopRequireDefault(require(\"./EventEndingRow\"));\n\nvar DateSlotMetrics = _interopRequireWildcard(require(\"./utils/DateSlotMetrics\"));\n\nvar DateContentRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(DateContentRow, _React$Component);\n\n  function DateContentRow() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleSelectSlot = function (slot) {\n      var _this$props = _this.props,\n          range = _this$props.range,\n          onSelectSlot = _this$props.onSelectSlot;\n      onSelectSlot(range.slice(slot.start, slot.end + 1), slot);\n    };\n\n    _this.handleShowMore = function (slot) {\n      var _this$props2 = _this.props,\n          range = _this$props2.range,\n          onShowMore = _this$props2.onShowMore;\n\n      var metrics = _this.slotMetrics(_this.props);\n\n      var row = (0, _querySelectorAll.default)((0, _reactDom.findDOMNode)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this))), '.rbc-row-bg')[0];\n      var cell;\n      if (row) cell = row.children[slot - 1];\n      var events = metrics.getEventsForSlot(slot);\n      onShowMore(events, range[slot - 1], cell, slot);\n    };\n\n    _this.createHeadingRef = function (r) {\n      _this.headingRow = r;\n    };\n\n    _this.createEventRef = function (r) {\n      _this.eventRow = r;\n    };\n\n    _this.getContainer = function () {\n      var container = _this.props.container;\n      return container ? container() : (0, _reactDom.findDOMNode)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    };\n\n    _this.renderHeadingCell = function (date, index) {\n      var _this$props3 = _this.props,\n          renderHeader = _this$props3.renderHeader,\n          getNow = _this$props3.getNow;\n      return renderHeader({\n        date: date,\n        key: \"header_\" + index,\n        className: (0, _classnames.default)('rbc-date-cell', _dates.default.eq(date, getNow(), 'day') && 'rbc-now')\n      });\n    };\n\n    _this.renderDummy = function () {\n      var _this$props4 = _this.props,\n          className = _this$props4.className,\n          range = _this$props4.range,\n          renderHeader = _this$props4.renderHeader;\n      return _react.default.createElement(\"div\", {\n        className: className\n      }, _react.default.createElement(\"div\", {\n        className: \"rbc-row-content\"\n      }, renderHeader && _react.default.createElement(\"div\", {\n        className: \"rbc-row\",\n        ref: _this.createHeadingRef\n      }, range.map(_this.renderHeadingCell)), _react.default.createElement(\"div\", {\n        className: \"rbc-row\",\n        ref: _this.createEventRef\n      }, _react.default.createElement(\"div\", {\n        className: \"rbc-row-segment\"\n      }, _react.default.createElement(\"div\", {\n        className: \"rbc-event\"\n      }, _react.default.createElement(\"div\", {\n        className: \"rbc-event-content\"\n      }, \"\\xA0\"))))));\n    };\n\n    _this.slotMetrics = DateSlotMetrics.getSlotMetrics();\n    return _this;\n  }\n\n  var _proto = DateContentRow.prototype;\n\n  _proto.getRowLimit = function getRowLimit() {\n    var eventHeight = (0, _height.default)(this.eventRow);\n    var headingHeight = this.headingRow ? (0, _height.default)(this.headingRow) : 0;\n    var eventSpace = (0, _height.default)((0, _reactDom.findDOMNode)(this)) - headingHeight;\n    return Math.max(Math.floor(eventSpace / eventHeight), 1);\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        date = _this$props5.date,\n        rtl = _this$props5.rtl,\n        range = _this$props5.range,\n        className = _this$props5.className,\n        selected = _this$props5.selected,\n        selectable = _this$props5.selectable,\n        renderForMeasure = _this$props5.renderForMeasure,\n        accessors = _this$props5.accessors,\n        getters = _this$props5.getters,\n        components = _this$props5.components,\n        getNow = _this$props5.getNow,\n        renderHeader = _this$props5.renderHeader,\n        onSelect = _this$props5.onSelect,\n        localizer = _this$props5.localizer,\n        onSelectStart = _this$props5.onSelectStart,\n        onSelectEnd = _this$props5.onSelectEnd,\n        onDoubleClick = _this$props5.onDoubleClick,\n        resourceId = _this$props5.resourceId,\n        longPressThreshold = _this$props5.longPressThreshold,\n        isAllDay = _this$props5.isAllDay;\n    if (renderForMeasure) return this.renderDummy();\n    var metrics = this.slotMetrics(this.props);\n    var levels = metrics.levels,\n        extra = metrics.extra;\n    var WeekWrapper = components.weekWrapper;\n    var eventRowProps = {\n      selected: selected,\n      accessors: accessors,\n      getters: getters,\n      localizer: localizer,\n      components: components,\n      onSelect: onSelect,\n      onDoubleClick: onDoubleClick,\n      resourceId: resourceId,\n      slotMetrics: metrics\n    };\n    return _react.default.createElement(\"div\", {\n      className: className\n    }, _react.default.createElement(_BackgroundCells.default, {\n      date: date,\n      getNow: getNow,\n      rtl: rtl,\n      range: range,\n      selectable: selectable,\n      container: this.getContainer,\n      getters: getters,\n      onSelectStart: onSelectStart,\n      onSelectEnd: onSelectEnd,\n      onSelectSlot: this.handleSelectSlot,\n      components: components,\n      longPressThreshold: longPressThreshold\n    }), _react.default.createElement(\"div\", {\n      className: \"rbc-row-content\"\n    }, renderHeader && _react.default.createElement(\"div\", {\n      className: \"rbc-row \",\n      ref: this.createHeadingRef\n    }, range.map(this.renderHeadingCell)), _react.default.createElement(WeekWrapper, (0, _extends2.default)({\n      isAllDay: isAllDay\n    }, eventRowProps), levels.map(function (segs, idx) {\n      return _react.default.createElement(_EventRow.default, (0, _extends2.default)({\n        key: idx,\n        segments: segs\n      }, eventRowProps));\n    }), !!extra.length && _react.default.createElement(_EventEndingRow.default, (0, _extends2.default)({\n      segments: extra,\n      onShowMore: this.handleShowMore\n    }, eventRowProps)))));\n  };\n\n  return DateContentRow;\n}(_react.default.Component);\n\nDateContentRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  date: _propTypes.default.instanceOf(Date),\n  events: _propTypes.default.array.isRequired,\n  range: _propTypes.default.array.isRequired,\n  rtl: _propTypes.default.bool,\n  resourceId: _propTypes.default.any,\n  renderForMeasure: _propTypes.default.bool,\n  renderHeader: _propTypes.default.func,\n  container: _propTypes.default.func,\n  selected: _propTypes.default.object,\n  selectable: _propTypes.default.oneOf([true, false, 'ignoreEvents']),\n  longPressThreshold: _propTypes.default.number,\n  onShowMore: _propTypes.default.func,\n  onSelectSlot: _propTypes.default.func,\n  onSelect: _propTypes.default.func,\n  onSelectEnd: _propTypes.default.func,\n  onSelectStart: _propTypes.default.func,\n  onDoubleClick: _propTypes.default.func,\n  dayPropGetter: _propTypes.default.func,\n  getNow: _propTypes.default.func.isRequired,\n  isAllDay: _propTypes.default.bool,\n  accessors: _propTypes.default.object.isRequired,\n  components: _propTypes.default.object.isRequired,\n  getters: _propTypes.default.object.isRequired,\n  localizer: _propTypes.default.object.isRequired,\n  minRows: _propTypes.default.number.isRequired,\n  maxRows: _propTypes.default.number.isRequired\n} : {};\nDateContentRow.defaultProps = {\n  minRows: 0,\n  maxRows: Infinity\n};\nvar _default = DateContentRow;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}