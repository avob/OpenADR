{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _CheckCircle = _interopRequireDefault(require(\"../internal/svg-icons/CheckCircle\"));\n\nvar _Warning = _interopRequireDefault(require(\"../internal/svg-icons/Warning\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"../SvgIcon\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      color: theme.palette.text.disabled,\n      '&$active': {\n        color: theme.palette.primary.main\n      },\n      '&$completed': {\n        color: theme.palette.primary.main\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the SVG text element. */\n    text: {\n      fill: theme.palette.primary.contrastText,\n      fontSize: theme.typography.caption.fontSize,\n      fontFamily: theme.typography.fontFamily\n    },\n\n    /* Styles applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Styles applied to the root element if `error={true}`. */\n    error: {}\n  };\n};\n\nexports.styles = styles;\n\nvar _ref = _react.default.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"12\"\n});\n\nfunction StepIcon(props) {\n  var completed = props.completed,\n      icon = props.icon,\n      active = props.active,\n      error = props.error,\n      classes = props.classes;\n\n  if (typeof icon === 'number' || typeof icon === 'string') {\n    if (error) {\n      return _react.default.createElement(_Warning.default, {\n        className: (0, _classnames.default)(classes.root, classes.error)\n      });\n    }\n\n    if (completed) {\n      return _react.default.createElement(_CheckCircle.default, {\n        className: (0, _classnames.default)(classes.root, classes.completed)\n      });\n    }\n\n    return _react.default.createElement(_SvgIcon.default, {\n      className: (0, _classnames.default)(classes.root, (0, _defineProperty2.default)({}, classes.active, active))\n    }, _ref, _react.default.createElement(\"text\", {\n      className: classes.text,\n      x: \"12\",\n      y: \"16\",\n      textAnchor: \"middle\"\n    }, icon));\n  }\n\n  return icon;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: _propTypes.default.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: _propTypes.default.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: _propTypes.default.bool,\n\n  /**\n   * The icon displayed by the step label.\n   */\n  icon: _propTypes.default.node.isRequired\n} : void 0;\nStepIcon.defaultProps = {\n  active: false,\n  completed: false,\n  error: false\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiStepIcon'\n})(StepIcon);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}