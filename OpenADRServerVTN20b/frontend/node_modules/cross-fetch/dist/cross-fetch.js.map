{"version":3,"file":"cross-fetch.js","sources":["../node_modules/whatwg-fetch/fetch.js"],"sourcesContent":["(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n"],"names":["self","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","this","map","forEach","append","Array","isArray","header","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","get","type","rejected","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","url","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","fetch","e","viewClasses","obj","DataView","isView","call","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","response","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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"}