//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.04.13 at 03:23:14 PM CEST 
//


package com.avob.openadr.model.oadr20a.ei;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SignalTypeEnumeratedType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SignalTypeEnumeratedType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="delta"/&gt;
 *     &lt;enumeration value="level"/&gt;
 *     &lt;enumeration value="multiplier"/&gt;
 *     &lt;enumeration value="price"/&gt;
 *     &lt;enumeration value="priceMultiplier"/&gt;
 *     &lt;enumeration value="priceRelative"/&gt;
 *     &lt;enumeration value="product"/&gt;
 *     &lt;enumeration value="setpoint"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "SignalTypeEnumeratedType")
@XmlEnum
public enum SignalTypeEnumeratedType {


    /**
     * Signal indicates the amount to change (denominated in Itembase or in the EMIX Product) from what one would have used without the Signal. This may or may not be accompanied by a baseline. Payload Type Quantity
     * 
     */
    @XmlEnumValue("delta")
    DELTA("delta"),

    /**
     * Signal indicates a Program Level. Payload Type is Program Level
     * 
     */
    @XmlEnumValue("level")
    LEVEL("level"),

    /**
     * Signal indicates a multiplier applied to the current rate of  delivery or usage (denominated in Itembase or in the EMIX Product) from what one would have used without the Signal. This may or may not be accompanied by a baseline. Payload Type is Float
     * 
     */
    @XmlEnumValue("multiplier")
    MULTIPLIER("multiplier"),

    /**
     * Signal indicates the Price. Extended Price is the value multiplied by the number of units units (denominated in Itembase or in the EMIX Product). Payload Type is emix:price
     * 
     */
    @XmlEnumValue("price")
    PRICE("price"),

    /**
     * Signal indicates the Price Multiplier. Extended Price is the computed price (as described in EMIX) the value multiplied by the number of units units (denominated in Itembase or in the EMIX Product). Payload Type is emix:priceMultiplier
     * 
     */
    @XmlEnumValue("priceMultiplier")
    PRICE_MULTIPLIER("priceMultiplier"),

    /**
     * Signal indicates the Relative Price. Extended Price is the computed price (as described in EMIX) the value multiplied by the number of units units (denominated in Itembase or in the EMIX Product). Payload Type is emix:priceRelative
     * 
     */
    @XmlEnumValue("priceRelative")
    PRICE_RELATIVE("priceRelative"),

    /**
     * Signal indicates the Product for each interval. Payload Type is an EMIX Product Description
     * 
     */
    @XmlEnumValue("product")
    PRODUCT("product"),

    /**
     * Signal indicates a target amount of units (denominated in Itembase or in the EMIX Product). Payload Type is Quantity
     * 
     */
    @XmlEnumValue("setpoint")
    SETPOINT("setpoint");
    private final String value;

    SignalTypeEnumeratedType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SignalTypeEnumeratedType fromValue(String v) {
        for (SignalTypeEnumeratedType c: SignalTypeEnumeratedType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
