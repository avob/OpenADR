/*
 * Avob VTN Rest API
 * Description
 *
 * OpenAPI spec version: API TOS
 * Contact: bzanni@avob.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.avob.server.oadrvtn20b.api;

import com.avob.server.oadrvtn20b.handler.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RabbitmqHttpAuthControllerApi
 */
@Ignore
public class RabbitmqHttpAuthControllerApiTest {

    private final RabbitmqHttpAuthControllerApi api = new RabbitmqHttpAuthControllerApi();

    
    /**
     * resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resourceUsingDELETETest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String username = null;
        String vhost = null;
        String response = api.resourceUsingDELETE(name, permission, resource, username, vhost);

        // TODO: test validations
    }
    
    /**
     * resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resourceUsingGETTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String username = null;
        String vhost = null;
        String response = api.resourceUsingGET(name, permission, resource, username, vhost);

        // TODO: test validations
    }
    
    /**
     * resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resourceUsingHEADTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String username = null;
        String vhost = null;
        String response = api.resourceUsingHEAD(name, permission, resource, username, vhost);

        // TODO: test validations
    }
    
    /**
     * resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resourceUsingOPTIONSTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String username = null;
        String vhost = null;
        String response = api.resourceUsingOPTIONS(name, permission, resource, username, vhost);

        // TODO: test validations
    }
    
    /**
     * resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resourceUsingPATCHTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String username = null;
        String vhost = null;
        String response = api.resourceUsingPATCH(name, permission, resource, username, vhost);

        // TODO: test validations
    }
    
    /**
     * resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resourceUsingPOSTTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String username = null;
        String vhost = null;
        String response = api.resourceUsingPOST(name, permission, resource, username, vhost);

        // TODO: test validations
    }
    
    /**
     * resource
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resourceUsingPUTTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String username = null;
        String vhost = null;
        String response = api.resourceUsingPUT(name, permission, resource, username, vhost);

        // TODO: test validations
    }
    
    /**
     * topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void topicUsingDELETETest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String routingKey = null;
        String username = null;
        String vhost = null;
        String response = api.topicUsingDELETE(name, permission, resource, routingKey, username, vhost);

        // TODO: test validations
    }
    
    /**
     * topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void topicUsingGETTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String routingKey = null;
        String username = null;
        String vhost = null;
        String response = api.topicUsingGET(name, permission, resource, routingKey, username, vhost);

        // TODO: test validations
    }
    
    /**
     * topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void topicUsingHEADTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String routingKey = null;
        String username = null;
        String vhost = null;
        String response = api.topicUsingHEAD(name, permission, resource, routingKey, username, vhost);

        // TODO: test validations
    }
    
    /**
     * topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void topicUsingOPTIONSTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String routingKey = null;
        String username = null;
        String vhost = null;
        String response = api.topicUsingOPTIONS(name, permission, resource, routingKey, username, vhost);

        // TODO: test validations
    }
    
    /**
     * topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void topicUsingPATCHTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String routingKey = null;
        String username = null;
        String vhost = null;
        String response = api.topicUsingPATCH(name, permission, resource, routingKey, username, vhost);

        // TODO: test validations
    }
    
    /**
     * topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void topicUsingPOSTTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String routingKey = null;
        String username = null;
        String vhost = null;
        String response = api.topicUsingPOST(name, permission, resource, routingKey, username, vhost);

        // TODO: test validations
    }
    
    /**
     * topic
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void topicUsingPUTTest() throws ApiException {
        String name = null;
        String permission = null;
        String resource = null;
        String routingKey = null;
        String username = null;
        String vhost = null;
        String response = api.topicUsingPUT(name, permission, resource, routingKey, username, vhost);

        // TODO: test validations
    }
    
    /**
     * user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUsingDELETETest() throws ApiException {
        String password = null;
        String username = null;
        String response = api.userUsingDELETE(password, username);

        // TODO: test validations
    }
    
    /**
     * user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUsingGETTest() throws ApiException {
        String password = null;
        String username = null;
        String response = api.userUsingGET(password, username);

        // TODO: test validations
    }
    
    /**
     * user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUsingHEADTest() throws ApiException {
        String password = null;
        String username = null;
        String response = api.userUsingHEAD(password, username);

        // TODO: test validations
    }
    
    /**
     * user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUsingOPTIONSTest() throws ApiException {
        String password = null;
        String username = null;
        String response = api.userUsingOPTIONS(password, username);

        // TODO: test validations
    }
    
    /**
     * user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUsingPATCHTest() throws ApiException {
        String password = null;
        String username = null;
        String response = api.userUsingPATCH(password, username);

        // TODO: test validations
    }
    
    /**
     * user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUsingPOSTTest() throws ApiException {
        String password = null;
        String username = null;
        String response = api.userUsingPOST(password, username);

        // TODO: test validations
    }
    
    /**
     * user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUsingPUTTest() throws ApiException {
        String password = null;
        String username = null;
        String response = api.userUsingPUT(password, username);

        // TODO: test validations
    }
    
    /**
     * vhost
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vhostUsingDELETETest() throws ApiException {
        String username = null;
        String vhost = null;
        String response = api.vhostUsingDELETE(username, vhost);

        // TODO: test validations
    }
    
    /**
     * vhost
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vhostUsingGETTest() throws ApiException {
        String username = null;
        String vhost = null;
        String response = api.vhostUsingGET(username, vhost);

        // TODO: test validations
    }
    
    /**
     * vhost
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vhostUsingHEADTest() throws ApiException {
        String username = null;
        String vhost = null;
        String response = api.vhostUsingHEAD(username, vhost);

        // TODO: test validations
    }
    
    /**
     * vhost
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vhostUsingOPTIONSTest() throws ApiException {
        String username = null;
        String vhost = null;
        String response = api.vhostUsingOPTIONS(username, vhost);

        // TODO: test validations
    }
    
    /**
     * vhost
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vhostUsingPATCHTest() throws ApiException {
        String username = null;
        String vhost = null;
        String response = api.vhostUsingPATCH(username, vhost);

        // TODO: test validations
    }
    
    /**
     * vhost
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vhostUsingPOSTTest() throws ApiException {
        String username = null;
        String vhost = null;
        String response = api.vhostUsingPOST(username, vhost);

        // TODO: test validations
    }
    
    /**
     * vhost
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vhostUsingPUTTest() throws ApiException {
        String username = null;
        String vhost = null;
        String response = api.vhostUsingPUT(username, vhost);

        // TODO: test validations
    }
    
}
