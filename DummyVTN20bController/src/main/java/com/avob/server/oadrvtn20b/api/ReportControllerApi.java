/*
 * Avob VTN Rest API
 * Description
 *
 * OpenAPI spec version: API TOS
 * Contact: bzanni@avob.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.avob.server.oadrvtn20b.api;

import com.avob.server.oadrvtn20b.handler.ApiCallback;
import com.avob.server.oadrvtn20b.handler.ApiClient;
import com.avob.server.oadrvtn20b.handler.ApiException;
import com.avob.server.oadrvtn20b.handler.ApiResponse;
import com.avob.server.oadrvtn20b.handler.Configuration;
import com.avob.server.oadrvtn20b.handler.Pair;
import com.avob.server.oadrvtn20b.handler.ProgressRequestBody;
import com.avob.server.oadrvtn20b.handler.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.avob.server.oadrvtn20b.model.OtherReportCapabilityDescriptionDto;
import com.avob.server.oadrvtn20b.model.OtherReportCapabilityDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReportControllerApi {
    private ApiClient apiClient;

    public ReportControllerApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ReportControllerApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /* Build call for searchOtherReportCapabilityDescriptionUsingGET */
    private com.squareup.okhttp.Call searchOtherReportCapabilityDescriptionUsingGETCall(String readingType, String reportName, String reportSpecifierId, String reportType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/Report/available/description/search".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (readingType != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "readingType", readingType));
        if (reportName != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "reportName", reportName));
        if (reportSpecifierId != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "reportSpecifierId", reportSpecifierId));
        if (reportType != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "reportType", reportType));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call searchOtherReportCapabilityDescriptionUsingGETValidateBeforeCall(String readingType, String reportName, String reportSpecifierId, String reportType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = searchOtherReportCapabilityDescriptionUsingGETCall(readingType, reportName, reportSpecifierId, reportType, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * searchOtherReportCapabilityDescription
     * 
     * @param readingType readingType (optional)
     * @param reportName reportName (optional)
     * @param reportSpecifierId reportSpecifierId (optional)
     * @param reportType reportType (optional)
     * @return List&lt;OtherReportCapabilityDescriptionDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OtherReportCapabilityDescriptionDto> searchOtherReportCapabilityDescriptionUsingGET(String readingType, String reportName, String reportSpecifierId, String reportType) throws ApiException {
        ApiResponse<List<OtherReportCapabilityDescriptionDto>> resp = searchOtherReportCapabilityDescriptionUsingGETWithHttpInfo(readingType, reportName, reportSpecifierId, reportType);
        return resp.getData();
    }

    /**
     * searchOtherReportCapabilityDescription
     * 
     * @param readingType readingType (optional)
     * @param reportName reportName (optional)
     * @param reportSpecifierId reportSpecifierId (optional)
     * @param reportType reportType (optional)
     * @return ApiResponse&lt;List&lt;OtherReportCapabilityDescriptionDto&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OtherReportCapabilityDescriptionDto>> searchOtherReportCapabilityDescriptionUsingGETWithHttpInfo(String readingType, String reportName, String reportSpecifierId, String reportType) throws ApiException {
        com.squareup.okhttp.Call call = searchOtherReportCapabilityDescriptionUsingGETValidateBeforeCall(readingType, reportName, reportSpecifierId, reportType, null, null);
        Type localVarReturnType = new TypeToken<List<OtherReportCapabilityDescriptionDto>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * searchOtherReportCapabilityDescription (asynchronously)
     * 
     * @param readingType readingType (optional)
     * @param reportName reportName (optional)
     * @param reportSpecifierId reportSpecifierId (optional)
     * @param reportType reportType (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call searchOtherReportCapabilityDescriptionUsingGETAsync(String readingType, String reportName, String reportSpecifierId, String reportType, final ApiCallback<List<OtherReportCapabilityDescriptionDto>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = searchOtherReportCapabilityDescriptionUsingGETValidateBeforeCall(readingType, reportName, reportSpecifierId, reportType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OtherReportCapabilityDescriptionDto>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /* Build call for viewOtherReportCapabilityUsingGET1 */
    private com.squareup.okhttp.Call viewOtherReportCapabilityUsingGET1Call(String reportSpecifierId, List<String> venID, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/Report/available/search".replaceAll("\\{format\\}","json");

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (reportSpecifierId != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("", "reportSpecifierId", reportSpecifierId));
        if (venID != null)
        localVarQueryParams.addAll(apiClient.parameterToPairs("multi", "venID", venID));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call viewOtherReportCapabilityUsingGET1ValidateBeforeCall(String reportSpecifierId, List<String> venID, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        
        com.squareup.okhttp.Call call = viewOtherReportCapabilityUsingGET1Call(reportSpecifierId, venID, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * viewOtherReportCapability
     * 
     * @param reportSpecifierId reportSpecifierId (optional)
     * @param venID venID (optional)
     * @return List&lt;OtherReportCapabilityDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<OtherReportCapabilityDto> viewOtherReportCapabilityUsingGET1(String reportSpecifierId, List<String> venID) throws ApiException {
        ApiResponse<List<OtherReportCapabilityDto>> resp = viewOtherReportCapabilityUsingGET1WithHttpInfo(reportSpecifierId, venID);
        return resp.getData();
    }

    /**
     * viewOtherReportCapability
     * 
     * @param reportSpecifierId reportSpecifierId (optional)
     * @param venID venID (optional)
     * @return ApiResponse&lt;List&lt;OtherReportCapabilityDto&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<OtherReportCapabilityDto>> viewOtherReportCapabilityUsingGET1WithHttpInfo(String reportSpecifierId, List<String> venID) throws ApiException {
        com.squareup.okhttp.Call call = viewOtherReportCapabilityUsingGET1ValidateBeforeCall(reportSpecifierId, venID, null, null);
        Type localVarReturnType = new TypeToken<List<OtherReportCapabilityDto>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * viewOtherReportCapability (asynchronously)
     * 
     * @param reportSpecifierId reportSpecifierId (optional)
     * @param venID venID (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call viewOtherReportCapabilityUsingGET1Async(String reportSpecifierId, List<String> venID, final ApiCallback<List<OtherReportCapabilityDto>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = viewOtherReportCapabilityUsingGET1ValidateBeforeCall(reportSpecifierId, venID, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<OtherReportCapabilityDto>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
